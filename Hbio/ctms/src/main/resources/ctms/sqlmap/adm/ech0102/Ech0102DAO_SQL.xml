<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"	"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap>
	<!-- 피험자선정******************************************************************************************************************************************* -->
	<!-- 변수목록
                A.CORP_CD                     AS corpCd            회사코드
                F.CORP_NAME                   AS corpName          회사코드명
                A.RS_NO                       AS rsNo              피험자선정번호
                G.RS_NAME                     AS rsName            피험자선정번호명
                A.SUB_NO                      AS subNo             피험자선정번호
                A.RSI_NO1                     AS rsiNo1            식별번호1
                A.RSI_NO2                     AS rsiNo2            식별번호2
                A.RSI_NO3                     AS rsiNo3            식별번호3
                A.RSI_NO                      AS rsiNo             식별번호
                A.RSJ_NO                      AS rsjNo             연구대상자번호
                H.RSJ_NAME                    AS rsjName           연구대상자번호명
                A.APPSTA_CLS                  AS appstaCls         참여상태
                I.CD_NAME                     AS appstaClsNm       참여상태명
                A.APP_STDT                    AS appStdt           참여시작일자
                A.APP_ENDT                    AS appEndt           참여종료일자
                A.ETC                         AS etc               특이사항
                A.APP_YN                      AS appYn             지원여부
                A.POOL_YN                     AS poolYn            풀선별
                A.FIRST_ST                    AS firstSt           1차선정
                A.CFM_YN                      AS cfmYn             확정여부
                A.DATA_REGDT                  AS dataRegdt         등록수정일자
                A.DATA_REGNT                  AS dataRegnt         등록수정자
    -->
	<sql id="where_rs1000mRsj">
		FROM    RS1010M A
        INNER JOIN CT1020M F
        ON      F.CORP_CD       = A.CORP_CD
        AND     F.BRANCH_CD     = A.BRANCH_CD
                INNER JOIN CM4000M G
        ON      G.CORP_CD       = A.CORP_CD
        AND     G.CD_CLS        = 'CT2050'
        AND     G.CLS_CAT       = '3'
        AND     G.CD            = A.RSST_CLS
		INNER JOIN CM4000M K
        ON      K.CORP_CD       = A.CORP_CD
        AND     K.CD_CLS        = 'CT2030'
        AND     K.CLS_CAT       = '3'
        AND     K.CD            = A.RS_NO3
        LEFT OUTER join (SELECT 
	    						DISTINCT SUBSTRING(a.RS_CD,1,14) AS RS_CD ,
	    						STUFF(( 
	        							SELECT 
	            						',' +VEND_NAME 
	        							FROM 
	           							 RS1000M b
	           							 INNER JOIN CT2000M b1
	           							 ON b1.CORP_CD = b.CORP_CD
	           							 AND b1.VEND_NO = b.VEND_NO 
								        WHERE
								        	b.CORP_CD = A.CORP_CD
								            AND b.RS_CD LIKE CONCAT(SUBSTRING(A.RS_CD,1,14),'%')
								            FOR XML PATH('') ),1,1,'') AS VEND 
								FROM 
								    RS1000M a) U
			ON U.RS_CD LIKE CONCAT(SUBSTRING(A.RS_CD,1,14),'%')       
        <dynamic prepend="INNER JOIN RS1020M N">
        	<isNotEmpty property="branchCd" prepend="ON">
        		ON		N.CORP_CD		= A.CORP_CD
		        AND		N.RS_NO			IN (SELECT RS_NO 
											FROM RS1000M A1 
											WHERE A1.CORP_CD = A.CORP_CD
											AND A1.RS_CD LIKE CONCAT(A.RS_CD,'%'))
		        AND		N.BRANCH_CD		= #branchCd#
        	</isNotEmpty>
		</dynamic>
        <dynamic prepend="WHERE">
	       	<isNotEmpty property="corpCd" prepend="AND">
	       		(A.CORP_CD = #corpCd#)
	       	</isNotEmpty>
	       	<isNotEmpty property="searchCondition8" prepend="AND">
	       		(A.RS_CD = SUBSTRING(#searchCondition8#,1,14))
	       	</isNotEmpty>
			<!-- <isNotEmpty property="searchCondition4" prepend="">
				<isEqual property="searchCondition4" compareValue="1">
					<isNotEmpty property="searchCondition1" prepend="AND">
						<isNotEmpty property="searchCondition2" >
							CONVERT(CHAR(10), A.RS_STDT, 23) BETWEEN #searchCondition1# AND #searchCondition2#
						</isNotEmpty>
					</isNotEmpty>
				</isEqual>
				<isEqual property="searchCondition4" compareValue="2">
					<isNotEmpty property="searchCondition1" prepend="AND">
						<isNotEmpty property="searchCondition2" >
							CONVERT(CHAR(10), A.RS_ENDT, 23) BETWEEN #searchCondition1# AND #searchCondition2#
						</isNotEmpty>
					</isNotEmpty>
				</isEqual>
			</isNotEmpty> -->
			<isNotEmpty property="searchCondition5" prepend="AND">
	       		(A.RS_NO3 = #searchCondition5#)
	       	</isNotEmpty>
	       	<isNotEmpty property="searchCondition6" prepend="AND">
	       		(A.RSST_CLS = #searchCondition6#)
	       	</isNotEmpty>
			<isNotEmpty property="searchCondition3" prepend="AND">
	        	<!-- 전체 -->
	        	<isEqual property="searchCondition3" compareValue="1">
		        	<isNotEmpty property="searchWord" >
						(A.RS_NAME LIKE CONCAT ('%',#searchWord#,'%')
						OR A.RS_CD LIKE CONCAT ('%',#searchWord#,'%'))
					</isNotEmpty>
				</isEqual>
				<!-- 연구명칭 -->
	        	<isEqual property="searchCondition3" compareValue="2">
		        	<isNotEmpty property="searchWord" >
						(A.RS_NAME LIKE CONCAT ('%',#searchWord#,'%'))
					</isNotEmpty>
				</isEqual>
				<!-- 연구코드 -->
	        	<isEqual property="searchCondition3" compareValue="3">
		        	<isNotEmpty property="searchWord">
						(A.RS_CD LIKE CONCAT ('%',#searchWord#,'%'))
					</isNotEmpty>
				</isEqual>
			</isNotEmpty>
	</dynamic>
	</sql>
	
	<!-- 피험자선정(연구과제) 리스트 -->
	<select id="Ech0102DAO.selectEch0102List" parameterClass="searchVO" resultClass="egovMap">
	/* Ech0102DAO.selectEch0102List */
	<![CDATA[
		SELECT Z.* FROM
			(
				SELECT  
	                A.CORP_CD                     AS corpCd            
	              , A.RS_CD                       AS rsCd
                  , A.RS_NO                       AS rsNo
	              , A.BRANCH_CD                   AS branchCd          
	              , F.BRANCH_NAME                 AS branchName        
	              , A.RS_PTC                      AS rsPtc          
	              , A.RS_PPS    	              AS rsPps         
	              , A.RS_NO3                      AS rsNo3
	              , K.CD_NAME                     AS rsNo3Nm
	              , A.RSST_CLS                    AS rsStCls          
	              , G.CD_NAME                     AS rsStClsNm        
	              , A.RS_NAME                     AS rsName            
	              , A.IRBSM_YN                    AS irbsmYn
	              , A.DEL_YN					  AS delYn
	              , A.DATA_LOCK_YN				  AS dataLockYn 
	              , A.REG_DT					  AS regDt
	              , U.VEND						  AS vendName   
	              , (SELECT COUNT(*) FROM RS2010M I
	              	 WHERE I.CORP_CD = A.CORP_CD 
	              	 AND I.RS_NO = A.RS_NO 
	              	 AND I.APP_YN = 'Y') AS appCnt
	              , (SELECT COUNT(*) FROM RS2010M O
	              	 WHERE O.CORP_CD = A.CORP_CD 
	              	 AND O.RS_NO = A.RS_NO
	              	 AND O.POOL_YN = 'Y') AS poolCnt
	              , (SELECT COUNT(*) FROM RS2010M P
	              	 WHERE P.CORP_CD = A.CORP_CD 
	              	 AND P.RS_NO = A.RS_NO
	              	 AND P.FIRST_ST = 'Y') AS firstCnt
	              , (SELECT count(DISTINCT RSJ_NO) cnt 
						FROM RS4000M Y2
						WHERE Y2.CORP_CD = A.CORP_CD
						AND Y2.RS_NO 	= A.RS_NO
						AND Y2.SCR_YN 	= 'Y' ) AS screenCnt
	              , (SELECT COUNT(*) FROM RS2010M Y
	              	 WHERE Y.CORP_CD = A.CORP_CD 
	              	 AND Y.RS_NO = A.RS_NO
	              	 AND Y.CFM_YN = 'Y') AS cfmCnt                  
	]]>
	<include refid="where_rs1000mRsj" />
	<![CDATA[
			AND A.DEL_YN = 'N'
			AND A.RSST_CLS IN ('20','30')
			]]>		
	<![CDATA[
			) Z
			ORDER BY      Z.corpCd DESC
              , Z.regDt DESC, Z.rsCd DESC
		OFFSET #firstIndex# ROWS
			FETCH NEXT #recordCountPerPage# ROWS ONLY
	]]>	
	</select>
	
	<!--  LIMIT #firstIndex#, #recordCountPerPage# -->

	<!-- 피험자선정 cnt -->
	            
	<select id="Ech0102DAO.selectEch0102ListCnt" parameterClass="searchVO" resultClass="int">
	/* Ech0102DAO.selectEch0102ListCnt */
	<![CDATA[
		SELECT
			COUNT(*)
			
	]]>
		<include refid="where_rs1000mRsj" />
		<![CDATA[
			AND A.DEL_YN = 'N'
			AND A.RSST_CLS IN ('20','30')
			]]>
	</select>

	<sql id="where_rs2000m">
		FROM    RS2010M A
                INNER JOIN CT1000M F
        ON      F.CORP_CD       = A.CORP_CD             
                INNER JOIN RS1010M G
        ON      G.CORP_CD       = A.CORP_CD
        AND     G.RS_NO         = A.RS_NO
        AND     G.DEL_YN = 'N'               
                INNER JOIN SB1000M H
        ON      H.CORP_CD       = A.CORP_CD
        AND     H.RSJ_NO        = A.RSJ_NO              
                INNER JOIN CM4000M I
        ON      I.CORP_CD       = A.CORP_CD
        AND     I.CD_CLS        = 'CT2050'
        AND     I.CLS_CAT       = '3'
        AND     I.CD            = A.APPSTA_CLS
        WHERE   A.CORP_CD = #corpCd#
        AND		A.RS_NO = #rsNo#	
	</sql>
	
	<!-- 피험자선정 리스트 -->
	<select id="Ech0102DAO.selectEch0102RsjList" parameterClass="searchVO" resultClass="egovMap">
	/* Ech0102DAO.selectEch0102RsjList */
	<![CDATA[
		SELECT Z.* FROM
			(
				SELECT  
				ROW_NUMBER() OVER(order by A.RS_NO DESC) rownum	
	              , A.CORP_CD                     AS corpCd            
	              , F.CORP_NAME                   AS corpName          
	              , A.RS_NO                       AS rsNo              
	                         
	              , A.SUB_NO                      AS subNo
	              , A.RSJ_NO 					  AS rsjNo
	              , A.RSI_NO1                     AS rsiNo1            
	              , A.RSI_NO2                     AS rsiNo2            
	              , A.RSI_NO3                     AS rsiNo3            
	              , A.RSI_NO                      AS rsiNo            
	              , H.RSJ_NAME                    AS rsjName
	              , H.GEN_YN					  AS genYn
	              , CASE H.GEN_YN
	              		WHEN '1' THEN '남'
	              		WHEN '2' THEN '여'
	              		ELSE '미정'
	              	END 						  AS genYnNm	
	              , FLOOR(CAST(DATEDIFF(DAY,H.BR_DT,GETDATE()) AS INTEGER)/365.2422) AS age
	              , H.BR_DT						  AS brDt
	              , H.HP_NO 					  AS hpNo
	              , H.POST_NO    				  AS postNo
	              , H.ADDR_MAIN 				  AS addrMain
	              , H.ADDR_GITA 				  AS addrGita
	              , A.APPSTA_CLS                  AS appstaCls         
	              , I.CD_NAME                     AS appstaClsNm       
	              , A.APP_STDT                    AS appStdt           
	              , A.APP_ENDT                    AS appEndt           
	              , A.ETC                         AS etc               
	              , A.APP_YN                      AS appYn             
	              , A.POOL_YN                     AS poolYn            
	              , A.FIRST_ST                    AS firstSt           
	              , A.CFM_YN                      AS cfmYn             
	              , A.DATA_REGDT                  AS dataRegdt         
	              , A.DATA_REGNT                  AS dataRegnt
	              , LOWER(A.RS_NO) + A.RSJ_NO 			  AS mapKey
	              , A.FIRST_ST_NO			      AS firstStNo 		
	]]>
	<include refid="where_rs2000m" />

	<![CDATA[
			) Z
			ORDER BY Z.corpCd
					,Z.rsNo
					,Z.subNo
		
	]]>	
	</select>
	
	<!-- OFFSET #firstIndex# ROWS
			FETCH NEXT #recordCountPerPage# ROWS ONLY -->
	
	
	<!--  LIMIT #firstIndex#, #recordCountPerPage# -->

	<!-- 피험자선정 cnt -->
	            
	<select id="Ech0102DAO.selectEch0102RsjListCnt" parameterClass="searchVO" resultClass="int">
	/* Ech0102DAO.selectEch0102ListCnt */
	<![CDATA[
		SELECT
			COUNT(*)
	]]>
		<include refid="where_rs2000m" />
	</select>

	<sql id="where_rs2000m2">
		FROM    RS2010M A
                INNER JOIN CT1000M F
        ON      F.CORP_CD       = A.CORP_CD             
                         INNER JOIN RS1010M G
        ON      G.CORP_CD       = A.CORP_CD
        AND     G.RS_NO         = A.RS_NO               
                INNER JOIN SB1000M H
        ON      H.CORP_CD       = A.CORP_CD
        AND     H.RSJ_NO        = A.RSJ_NO              
                INNER JOIN CM4000M I
        ON      I.CORP_CD       = A.CORP_CD
        AND     I.CD_CLS        = 'CT2050'
        AND     I.CLS_CAT       = '3'
        AND     I.CD            = A.APPSTA_CLS
        WHERE   A.CORP_CD = #corpCd#
        AND		A.RS_NO = #rsNo#
        AND     A.APP_YN LIKE CONCAT ('%',#appYn#,'%')
        AND     A.POOL_YN LIKE CONCAT ('%',#poolYn#,'%')
        AND     A.FIRST_ST LIKE CONCAT ('%',#firstSt#,'%')
        AND 	A.CFM_YN LIKE CONCAT ('%',#cfmYn#,'%')
        <dynamic prepend="">
        	<isNotEmpty property="searchType" prepend="AND">
        	<![CDATA[
        	  0 < (SELECT count(*) cnt 
						FROM RS4000M Y
						WHERE Y.CORP_CD = A.CORP_CD
						AND Y.RS_NO 	= A.RS_NO
						AND Y.RSJ_NO 	= A.RSJ_NO
						AND Y.SCR_YN 	= 'Y')
			]]>			
        	</isNotEmpty>
	    </dynamic>    	
         
	</sql>
	
	<!-- 피험자선정 리스트 -->
	<select id="Ech0102DAO.selectEch0102RsjList2" parameterClass="searchVO" resultClass="egovMap">
	/* Ech0102DAO.selectEch0102RsjList2 */
	<![CDATA[
		SELECT Z.* FROM
			(
				SELECT  
				ROW_NUMBER() OVER(order by A.RS_NO DESC) rownum	
	              , A.CORP_CD                     AS corpCd            
	              , F.CORP_NAME                   AS corpName          
	              , A.RS_NO                       AS rsNo              
	              , G.RS_NAME                     AS rsName
	              , G.RSST_CLS                    AS rsstCls            
	              , A.SUB_NO                      AS subNo
	              , A.RSJ_NO 					  AS rsjNo
	              , A.RSI_NO1                     AS rsiNo1            
	              , A.RSI_NO2                     AS rsiNo2            
	              , A.RSI_NO3                     AS rsiNo3            
	              , A.RSI_NO                      AS rsiNo            
	              , H.RSJ_NAME                    AS rsjName
	              , H.GEN_YN					  AS genYn
	              , CASE H.GEN_YN
	              		WHEN '1' THEN '남'
	              		WHEN '2' THEN '여'
	              		ELSE '미정'
	              	END 						  AS genYnNm	
	              , FLOOR(CAST(DATEDIFF(DAY,H.BR_DT,GETDATE()) AS INTEGER)/365.2422) AS age
	              , H.BR_DT						  AS brDt
	              , H.HP_NO 					  AS hpNo
	              , H.POST_NO    				  AS postNo
	              , H.ADDR_MAIN 				  AS addrMain
	              , H.ADDR_GITA 				  AS addrGita
	              , A.APPSTA_CLS                  AS appstaCls         
	              , I.CD_NAME                     AS appstaClsNm       
	              , A.APP_STDT                    AS appStdt           
	              , A.APP_ENDT                    AS appEndt           
	              , A.ETC                         AS etc               
	              , A.APP_YN                      AS appYn             
	              , A.POOL_YN                     AS poolYn            
	              , A.FIRST_ST                    AS firstSt           
	              , A.CFM_YN                      AS cfmYn             
	              , A.DATA_REGDT                  AS dataRegdt         
	              , A.DATA_REGNT                  AS dataRegnt
	              , LOWER(A.RS_NO) + A.RSJ_NO 			  AS mapKey
	              , A.FIRST_ST_NO				  AS firstStNo
	]]>
	<include refid="where_rs2000m2" />
	<![CDATA[
			) Z
			ORDER BY Z.corpCd
					,Z.rsNo
					,Z.subNo
		
	]]>	
	</select>
	
	<!-- OFFSET #firstIndex# ROWS
			FETCH NEXT #recordCountPerPage# ROWS ONLY -->
	
	
	<!--  LIMIT #firstIndex#, #recordCountPerPage# -->

	<!-- 피험자선정 cnt -->
	            
	<select id="Ech0102DAO.selectEch0102RsjListCnt2" parameterClass="searchVO" resultClass="int">
	/* Ech0102DAO.selectEch0102RsjListCnt2 */
	<![CDATA[
		SELECT
			COUNT(*)
	]]>
		<include refid="where_rs2000m2" />
	</select>



	<!-- 피험자선정 상세보기 -->
	<select id="Ech0102DAO.selectEch0102View" parameterClass="string" resultClass="rs2000mVO">
	/* Ech0102DAO.selectEch0102View */
	<![CDATA[
	    SELECT  
                A.CORP_CD                     AS corpCd            
              , F.CORP_NAME                   AS corpName          
              , A.RS_NO                       AS rsNo              
              , G.RS_NAME                     AS rsName            
              , A.SUB_NO                      AS subNo             
              , A.RSI_NO1                     AS rsiNo1            
              , A.RSI_NO2                     AS rsiNo2            
              , A.RSI_NO3                     AS rsiNo3            
              , A.RSI_NO                      AS rsiNo           
              , H.RSJ_NAME                    AS rsjName           
              , A.APPSTA_CLS                  AS appstaCls         
              , I.CD_NAME                     AS appstaClsNm       
              , A.APP_STDT                    AS appStdt           
              , A.APP_ENDT                    AS appEndt           
              , A.ETC                         AS etc               
              , A.APP_YN                      AS appYn             
              , A.POOL_YN                     AS poolYn            
              , A.FIRST_ST                    AS firstSt           
              , A.CFM_YN                      AS cfmYn             
              , A.DATA_REGDT                  AS dataRegdt         
              , A.DATA_REGNT                  AS dataRegnt
              , A.FIRST_ST_NO				  AS firstStNo         
        FROM    RS2000M A
                INNER JOIN CT1000M F
        ON      F.CORP_CD       = A.CORP_CD
        AND     F.CORP_CD       = A.CORP_CD             
                INNER JOIN RS1000M G
        ON      G.CORP_CD       = A.CORP_CD
        AND     G.RS_NO         = A.RS_NO
        AND     G.DEL_YN = 'N'               
                INNER JOIN SB1000M H
        ON      H.CORP_CD       = A.CORP_CD
        AND     H.RSJ_NO        = A.RSJ_NO              
                INNER JOIN CM4000M I
        ON      I.CORP_CD       = A.CORP_CD
        AND     I.CD_CLS        = 'CT2050'
        AND     I.CLS_CAT       = '3'
        AND     I.CD            = A.APPSTA_CLS          
        WHERE   A.CORP_CD       = #corpCd#              
        AND     A.RS_NO         = #rsNo#                
        AND     A.SUB_NO        = #subNo#               
        ORDER   BY
                A.CORP_CD
              , A.RS_NO
              , A.SUB_NO
	]]>
	</select>
	
	<!-- 피험자 목록 -->
	<select id="Ech0102DAO.selectEch0102SubList" parameterClass="rs2000mVO" resultClass="egovMap">
	<![CDATA[
		SELECT
			CORP_CD
			, BRANCH_CD
			, SUB_NO
			, RS_NO
			, STATE
			, RS_STDT
			, RS_ENDT
			, ETC
			, APP_YN
			, POOL_YN
			, FIRST_ST
			, CONFIRM_YN
		FROM
			RS1000M
		WHERE
			RS_NO = #rsNo#
	]]>
	</select>
	
    <!-- 피험자선정 삭제 -->
	<delete id="Ech0102DAO.deleteEch0102" parameterClass="string">
		/* Ech0102DAO.deleteEch0102 */
	<![CDATA[
		DELETE
        FROM
                RS2000M
        WHERE
                CORP_CD         = #corpCd#              
        AND     RS_NO           = #rsNo#                
        AND     SUB_NO          = #subNo#               
	]]>
	</delete>
	
	<!-- 피험자선정 추가 -->
	<insert id="Ech0102DAO.insertEch0102" parameterClass="rs2000mVO">
	/* Ech0102DAO.insertEch0102 */
	<![CDATA[
		DECLARE @R_CORP_CD                  NVARCHAR(0008) = #corpCd#                                                      
        DECLARE @V_RS_NO                    NVARCHAR(0010) = #rsNo#                                                        
        DECLARE @P_RTN_KEY                  INT            = 0                                                             
        DECLARE @BDT04                      NVARCHAR(0004)                                                                 
        DECLARE @BDT06                      NVARCHAR(0006)                                                                 
        DECLARE @BDT10                      NVARCHAR(0010)                                                                 
        SET     @BDT10                      = CONVERT(NVARCHAR(10), GETDATE(), 23)                                         
        SET     @BDT04                      = SUBSTRING(DBO.UFN_DTG08(@BDT10), 1, 4)                                       
        SET     @BDT06                      = SUBSTRING(DBO.UFN_DTG08(@BDT10), 1, 6)                                       
                                                                                                                           
        SELECT  @P_RTN_KEY = CONVERT(NVARCHAR, CONVERT(DECIMAL(18, 0), ISNULL(MAX(A.SUB_NO), 0)) + 1)                      
        FROM    RS2000M A                                                                                                  
        WHERE   A.CORP_CD                   = @R_CORP_CD                                                                   
        AND     A.RS_NO                     = @V_RS_NO                                                                     
 
 
        INSERT  RS2000M(
                CORP_CD                     
              , RS_NO                       
              , SUB_NO                      
              , RSI_NO1                     
              , RSI_NO2                     
              , RSI_NO3                     
              , RSI_NO                      
              , RSJ_NO                      
              , APPSTA_CLS                  
              , APP_STDT                    
              , APP_ENDT                    
              , ETC                         
              , APP_YN                      
              , POOL_YN                     
              , FIRST_ST                    
              , CFM_YN                      
              , DATA_REGDT                  
              , DATA_REGNT                  
              , FIRST_ST_NO
              , MRSI_NO
        ) VALUES(
                #corpCd#
              , #rsNo#
              , @P_RTN_KEY
              , #rsiNo1#
              , #rsiNo2#
              , #rsiNo3#
              , #rsiNo#
              , #rsjNo#
              , #appstaCls#
              , #appStdt#
              , #appEndt#
              , #etc#
              , #appYn#
              , #poolYn#
              , #firstSt#
              , #cfmYn#
              , GETDATE()
              , #dataRegnt#
              , #firstStNo#
              , #mrsiNo#
        )
	]]>
	</insert>

	<!-- 피험자선정 수정 -->
	<update id="Ech0102DAO.updateEch0102" parameterClass="rs2000mVO">
		/* Ech0102DAO.updateEch0102 */
	<![CDATA[
	    UPDATE
                RS2000M
        SET
                RSI_NO1                     = #rsiNo1#                      
              , RSI_NO2                     = #rsiNo2#                      
              , RSI_NO3                     = #rsiNo3#                      
              , RSI_NO                      = #rsiNo#                       
              , RSJ_NO                      = #rsjNo#                       
              , APPSTA_CLS                  = #appstaCls#                   
              , APP_STDT                    = #appStdt#                     
              , APP_ENDT                    = #appEndt#                     
              , ETC                         = #etc#                         
              , APP_YN                      = #appYn#                       
              , POOL_YN                     = #poolYn#                      
              , FIRST_ST                    = #firstSt#                     
              , CFM_YN                      = #cfmYn#                       
              , DATA_REGDT                  = GETDATE()
              , DATA_REGNT                  = #dataRegnt#                   
        WHERE
                CORP_CD         = #corpCd#              
        AND     RS_NO           = #rsNo#                
        AND     SUB_NO          = #subNo#  
	]]>
	</update>

	<!-- 피험자선정 엑셀다운로드 -->
	<select id="Ech0102DAO.selectEch0102Excel" parameterClass="searchVO" resultClass="egovMap">
	/* Ech0102DAO.selectEch0102Excel */
	<![CDATA[
			SELECT Z.* FROM
		
			(
				SELECT  
	                A.CORP_CD                     AS corpCd            
	              , A.RS_NO                       AS rsNo              
	              , A.BRANCH_CD                   AS branchCd          
	              , F.BRANCH_NAME                 AS branchName        
	              , A.RS_CD         	          AS rsCd            
	              , A.REG_DT                      AS regDt             
	              , A.RS_STDT                     AS rsStdt            
	              , A.RS_ENDT                     AS rsEndt            
	              , A.RS_PTC                      AS rsPtc          
	              , A.RS_PPS    	              AS rsPps         
	              , A.RS_NO3                      AS rsNo3
	              , K.CD_NAME                     AS rsNo3Nm
	              , A.RS_DRT                      AS rsDrt        
	              , A.RS_SCNT                     AS rsScnt          
	              , A.RS_MSCNT                    AS rsMscnt       
	              , A.RSST_CLS                    AS rsStCls          
	              , G.CD_NAME                     AS rsStClsNm        
	              , A.REP_DT                      AS repDt             
	              , A.VISIT_CNT                   AS visitCnt          
	              , A.DUPL_YN                     AS duplYn            
	              , A.RS_NAME                     AS rsName            
	              , A.RS_PAY                      AS rsPay             
	              , A.IRBSM_YN                    AS irbsmYn       
	              , A.ITEM_CLS                    AS itemCls
	              , U.CD_NAME 	                  AS itemClsNm
	              , A.ITEM_NAME                   AS itemName
	              , A.VEND_NO					  AS vendNo
	              , V.VEND_NAME 				  AS vendName
	              , A.DEL_YN                      AS delYn
	              , A.DATA_LOCK_YN                AS dataLockYn
	              , A.ECRF_STATE                  AS ecrfState
	              , (SELECT COUNT(*) FROM RS2000M I
	              	 WHERE I.CORP_CD = A.CORP_CD 
	              	 AND I.RS_NO = A.RS_NO 
	              	 AND I.APP_YN = 'Y') AS appCnt
	              , (SELECT COUNT(*) FROM RS2000M O
	              	 WHERE O.CORP_CD = A.CORP_CD 
	              	 AND O.RS_NO = A.RS_NO 
	              	 AND O.POOL_YN = 'Y') AS poolCnt
	              , (SELECT COUNT(*) FROM RS2000M P
	              	 WHERE P.CORP_CD = A.CORP_CD 
	              	 AND P.RS_NO = A.RS_NO 
	              	 AND P.FIRST_ST = 'Y') AS firstCnt
	              , (SELECT count(DISTINCT RSJ_NO) cnt 
						FROM RS4000M Y2
						WHERE Y2.CORP_CD = A.CORP_CD
						AND Y2.RS_NO 	= A.RS_NO
						AND Y2.SCR_YN 	= 'Y' ) AS screenCnt	 
	              , (SELECT COUNT(*) FROM RS2000M Y
	              	 WHERE Y.CORP_CD = A.CORP_CD 
	              	 AND Y.RS_NO = A.RS_NO 
	              	 AND Y.CFM_YN = 'Y') AS cfmCnt                  

	]]>
	<include refid="where_rs1000mRsj" />
	<![CDATA[
	) Z
			ORDER BY Z.corpCd DESC
					,Z.rsNo DESC
					
	]]>	
	</select>
	
	<!-- 연구과제 상세보기 -->
	<select id="Ech0102DAO.selectEch0102RsView" parameterClass="rs1010mVO"
		resultClass="rs1010mVO">
		/* Ech0102DAO.selectEch0102RsView */
	<![CDATA[
				SELECT
     	         A.CORP_CD                     AS corpCd            
	             , A.BRANCH_CD                   AS branchCd          
	             , F.BRANCH_NAME                 AS branchNm        
	             , A.RS_CD         	          	 AS rsCd
	             , A.RS_NO         	          	 AS rsNo
	             , A.REG_DT                      AS regDt             
	             , A.RS_PTC                      AS rsPtc          
	             , A.RS_PPS    	                 AS rsPps         
	             , A.RS_NO3                      AS rsNo3
	             , K.CD_NAME                     AS rsNo3Nm
	             , A.RSST_CLS                    AS rsstCls          
	             , G.CD_NAME                     AS rsstClsNm        
	             , A.RS_NAME                     AS rsName            
	             , A.IRBSM_YN                    AS irbsmYn       
	             , A.DEL_YN                      AS delYn
	             , A.DATA_LOCK_YN                AS dataLockYn
	      		FROM    RS1010M A
	           	LEFT OUTER JOIN RS5000M H 
	        ON H.CORP_CD       = A.CORP_CD
	        AND H.RS_NO  	   = A.RS_CD 
	                INNER JOIN CT1020M F
	        ON      F.CORP_CD       = A.CORP_CD
	        AND     F.BRANCH_CD     = A.BRANCH_CD
	                INNER JOIN CM4000M G
	        ON      G.CORP_CD       = A.CORP_CD
	        AND     G.CD_CLS        = 'CT2050'
	        AND     G.CLS_CAT       = '3'
	        AND     G.CD            = A.RSST_CLS
			INNER JOIN CM4000M K
	        ON      K.CORP_CD       = A.CORP_CD
	        AND     K.CD_CLS        = 'CT2030'
	        AND     K.CLS_CAT       = '3'
	        AND     K.CD            = A.RS_NO3	                
	        WHERE   A.CORP_CD       = #corpCd#              
	      		AND     A.RS_NO     = #rsNo#
	      		AND A.DEL_YN = 'N'          
	]]>
	</select>
	
	<!-- 연구대상자 최종확정 -->
	<update id="Ech0102DAO.updateEch0102AjaxSaveCfm" parameterClass="egovMap">
	/* Ech0102DAO.updateEch0102AjaxSaveCfm */
	UPDATE
			RS2010M
		SET
			CFM_YN = #step1#
			, DATA_REGDT = GETDATE()
			, DATA_REGNT = #dataRegnt#
		WHERE
			CORP_CD = #corpCd#
			AND RS_NO = #rsNo#
			AND SUB_NO IN (
							SELECT
								SUB_NO
							FROM
								RS2010M
							WHERE
								CORP_CD = #corpCd#
								AND RS_NO = #rsNo#
								AND SUB_NO 	
								<iterate open="(" close=")" conjunction="," prepend="IN" property="rsjSeq">
									#rsjSeq[]#
								</iterate>
						  )														
	</update>
	
	<!-- 연구대상자 1차선정  설정-->
	<update id="Ech0102DAO.updateEch0102AjaxSaveFirst" parameterClass="egovMap">
	/* Ech0102DAO.updateEch0102AjaxSaveFirst */
	UPDATE
			RS2010M
		SET
			FIRST_ST = #step1#
			, DATA_REGDT = GETDATE()
			, DATA_REGNT = #dataRegnt#
		WHERE
			CORP_CD = #corpCd#
			AND RS_NO = #rsNo#
			AND SUB_NO IN (
							SELECT
								SUB_NO
							FROM
								RS2010M
							WHERE
								CORP_CD = #corpCd#
								AND RS_NO = #rsNo#
								AND SUB_NO 	
								<iterate open="(" close=")" conjunction="," prepend="IN" property="rsjSeq">
									#rsjSeq[]#
								</iterate>
						  )														
	</update>
	
	<!-- 연구대상자 삭제(풀선별대상 최종확정자 제외  동의서가 첨부된 경우 삭제 불가-->
	<delete id="Ech0102DAO.updateEch0102AjaxSaveDel" parameterClass="egovMap">
	/* Ech0102DAO.updateEch0102AjaxSaveDel */
		DELETE
			RS2010M
		WHERE
			CORP_CD = #corpCd#
			AND RS_NO = #rsNo#
			AND SUB_NO IN (
							SELECT
								SUB_NO
							FROM
								RS2010M
							WHERE
								CORP_CD = #corpCd#
								AND RS_NO = #rsNo#
								AND POOL_YN = 'Y'
								AND CFM_YN = 'N'
								AND SUB_NO 	
								<iterate open="(" close=")" conjunction="," prepend="IN" property="rsjSeq">
									#rsjSeq[]#
								</iterate>
								AND SUB_NO NOT IN (
										SELECT A.SUB_NO 
										FROM RS2010M A
										INNER JOIN CR4000M B 
										ON B.CORP_CD = A.CORP_CD 
										AND B.RS_NO	 = A.RS_NO 
										AND B.SUB_NO = A.SUB_NO 
										WHERE
											A.CORP_CD 		= #corpCd#
											AND A.RS_NO 	= #rsNo#
											AND A.POOL_YN 	= 'Y'
											AND A.CFM_YN	= 'N')
								
						  )														
	</delete>
	
	<!-- 연구대상자 식별번호 일괄 부여(대상자 선별) -->
	<select id="Ech0102DAO.selectEch0102RsiCodeBat" parameterClass="egovMap" resultClass="rs2000mVO">
	/* Ech0102DAO.selectEch0102RsiCodeBat */
	<![CDATA[
		 SELECT  
                A.CORP_CD                     AS corpCd
              , A.RS_NO                       AS rsNo            
              , A.SUB_NO                      AS subNo             
              , A.RSI_NO1                     AS rsiNo1            
              , A.RSI_NO2                     AS rsiNo2            
              , A.RSI_NO3                     AS rsiNo3            
              , A.RSI_NO                      AS rsiNo           
              , A.APPSTA_CLS                  AS appstaClsm       
              , A.APP_STDT                    AS appStdt           
              , A.APP_ENDT                    AS appEndt           
              , A.ETC                         AS etc               
              , A.APP_YN                      AS appYn             
              , A.POOL_YN                     AS poolYn            
              , A.FIRST_ST                    AS firstSt           
              , A.CFM_YN                      AS cfmYn             
              , A.DATA_REGDT                  AS dataRegdt         
              , A.DATA_REGNT                  AS dataRegnt
              , A.RS_CD						  AS rsCd          
        FROM    RS2010M A
		WHERE CORP_CD = #corpCd#
		AND RS_NO = #rsNo#
		AND CFM_YN = 'Y'
		AND (RSI_NO IS NULL OR RSI_NO = '')
		AND SUB_NO
			]]>
			<iterate open="(" close=")" conjunction="," prepend="IN" property="rsjSeq">
				#rsjSeq[]#
			</iterate>	
	</select>
	
	<!--	AND SUB_NO

		<iterate open="(" close=")" conjunction="," prepend="IN" property="rsjSeq">
			#rsjSeq[]#
		</iterate> --> 
	<!-- 연구대상자 식별번호 획득 -->
	<select id="Ech0102DAO.selectEch0102RsiCodeCnt" parameterClass="rs2000mVO" resultClass="string">
	/* Ech0102DAO.selectEch0102RsiCodeCnt */
	<![CDATA[
		SELECT
			CONVERT(NVARCHAR, CONVERT(DECIMAL(18, 0), ISNULL(MAX(RSI_NO3), '00')) + 1) AS totCnt
		FROM RS2010M
		WHERE CORP_CD = #corpCd#
		AND RS_NO = #rsNo#
	]]>
	</select>
	
	<!-- 연구대상자 식별번호 저장 참여상태를 '진행'으로 설정-->
	<update id="Ech0102DAO.updateEch0102RsiCode" parameterClass="rs2000mVO">
	/* Ech0102DAO.updateEch0102RsiCode */
		UPDATE RS2010M
		SET
			RSI_NO3 		= #rsiNo3#
			, RSI_NO 		= #rsiNo#
			, APPSTA_CLS 	= '20'
		WHERE CORP_CD 	= #corpCd#
		AND RS_NO 		= #rsNo#
		AND SUB_NO 		= #subNo#
	</update>
	
	<!-- 스크린예약관리 팝업 피험자관리 리스트 -->
	<select id="Ech0102DAO.selectEch0102SendList" parameterClass="egovMap" resultClass="egovMap">
	/* Ech0102DAO.selectEch0102SendList */
	SELECT 
		a.* FROM 
		(		
			SELECT
				ROW_NUMBER() OVER(order by A.RSJ_NO DESC) rownum  	  
              , A.CORP_CD                     AS corpCd
              , A.RS_NO                       AS rsNo            
              , A.SUB_NO                      AS subNo             
              , A.RSI_NO1                     AS rsiNo1            
              , A.RSI_NO2                     AS rsiNo2            
              , A.RSI_NO3                     AS rsiNo3            
              , A.RSI_NO                      AS rsiNo           
              , A.APPSTA_CLS                  AS appstaClsm       
              , A.APP_STDT                    AS appStdt           
              , A.APP_ENDT                    AS appEndt           
              , A.ETC                         AS etc               
              , A.APP_YN                      AS appYn             
              , A.POOL_YN                     AS poolYn            
              , A.FIRST_ST                    AS firstSt           
              , A.CFM_YN                      AS cfmYn             
              , A.DATA_REGDT                  AS dataRegdt         
              , A.DATA_REGNT                  AS dataRegnt
              , B.HP_NO						  AS hpNo
              , B.RSJ_NO 					  AS rsjNo  
              , B.RSJ_NAME 					  AS rsjName
              , C.RS_CD					      AS rsCd
   		    FROM    RS2010M A
   		    INNER JOIN SB1000M B
   		    ON B.CORP_CD 		= A.CORP_CD
   		    AND B.RSJ_NO 		= A.RSJ_NO
   		    INNER JOIN RS1010M C
   		    ON C.CORP_CD 		= A.CORP_CD
   		    AND C.RS_NO 		= A.RS_NO
			WHERE A.CORP_CD 	= #corpCd#
			AND A.RS_NO 		= #rsNo#
			AND A.CFM_YN 		= 'N'
			AND A.FIRST_ST 		= 'Y'
			AND (A.RSI_NO IS NULL OR A.RSI_NO = '')
			AND A.SUB_NO
				<iterate open="(" close=")" conjunction="," prepend="IN" property="rsjSeq">
					#rsjSeq[]#
				</iterate>	
		) A 
		ORDER BY A.rsjNo DESC
	</select>
	
	<!-- 연구과제-연구대상자 스크리닝 예약 일괄 등록-->
	<insert id="Ech0102DAO.insertEch0102AjaxSaveScr" parameterClass="egovMap">
	/* Ech0102DAO.insertEch0102AjaxSaveScr */
	<selectKey keyProperty="resrNo" resultClass="string" type="pre">
		DECLARE @R_CORP_CD                  NVARCHAR(0008) = #corpCd#                                                  
        DECLARE @V_RECM_DT                  NVARCHAR(0010) = #resrDt#                                                  
        DECLARE @P_RTN_KEY                  NVARCHAR(0020)                                                                 
        DECLARE @BDT04                      NVARCHAR(0004)                                                                 
        DECLARE @BDT06                      NVARCHAR(0006)                                                                 
        DECLARE @BDT10                      NVARCHAR(0010)                                                                 
        SET     @BDT10                      = CONVERT(NVARCHAR(10), GETDATE(), 23)                                         
        SET     @BDT04                      = SUBSTRING(@V_RECM_DT, 1, 4)                                                  
        SET     @BDT06                      = SUBSTRING(DBO.UFN_DTG08(@BDT10), 1, 6)                                       
                                                                                                                           
        SELECT  CONVERT(NVARCHAR, CONVERT(DECIMAL(18, 0), ISNULL(MAX(A.RESR_NO), @BDT04 + '0000')) + 1) as resrNo     
        FROM    RS4000M A                                                                                                  
        WHERE   A.CORP_CD                   = @R_CORP_CD                                                                   
        AND     SUBSTRING(A.RESR_DT, 1, 4)  = @BDT04
	</selectKey>
	/* Ech0102DAO.insertEch0102AjaxSaveScr */
	<![CDATA[
		    INSERT  RS4000M(
                CORP_CD                     
              , RESR_NO                     
              , REG_DT                      
              , MT_ST                       
              , RESR_DT                     
              , RESR_HR                     
              , RESR_MM                     
              , MT_CNT                      
              , RS_NO                       
              , RSJ_NO                      
              , RSI_NO
              , SCR_YN                      
              , DATA_REGDT                  
              , DATA_REGNT                  
        ) VALUES(
                #corpCd#
              , #resrNo#
              , CONVERT(NVARCHAR(10), GETDATE(), 23)
              , #mtSt#
              , #resrDt#
              , #resrHr#
              , #resrMm#
              , #mtCnt#
              , #rsNo#
              , #rsjNo#
              , #rsiNo#
              , #scrYn#
              , GETDATE()
              , #dataRegnt#
        )
	]]>
	
	</insert>
	
	<!-- 연구과제-연구대상자별 예약 목록 스크리닝 예약-->
	<select id="Ech0102DAO.selectEch0102MtScrList" parameterClass="egovMap" resultClass="egovMap">
	/* Ech0102DAO.selectEch0102MtScrList */
	<![CDATA[
		SELECT  
				A.CORP_CD					  AS corpCd	                     
              , A.RESR_NO                     AS resrNo            
              , A.REG_DT                      AS regDt             
              , A.MT_ST                       AS mtSt              
              , F.CD_NAME                     AS mtStNm            
              , A.RESR_DT                     AS resrDt
              , REPLICATE('0',2-LEN(A.RESR_HR))+CONVERT(NVARCHAR,A.RESR_HR) AS resrHr
	          , REPLICATE('0',2-LEN(A.RESR_MM))+CONVERT(NVARCHAR,A.RESR_MM) AS resrMm
              , A.RSJ_NO                      AS rsjNo
        FROM    RS4000M A
                INNER JOIN CM4000M F
        ON      F.CORP_CD       = A.CORP_CD
        AND     F.CD_CLS        = 'CT1030'
        AND     F.CLS_CAT       = '3'
        AND     F.CD            = A.MT_ST              
        WHERE   A.CORP_CD       = #corpCd#
        AND 	A.RSJ_NO		= #rsjNo#
        AND 	A.RS_NO			= #rsNo#
        AND 	A.SCR_YN		= 'Y'
        ORDER   BY
                A.CORP_CD
              , A.RESR_NO
    ]]>          
	</select>
	
	<!-- 예약관리 상세보기 -->
	<select id="Ech0102DAO.selectEch0102MtView" parameterClass="rs4000mVO" resultClass="rs4000mVO">
	/* Ech0102DAO.selectEch0102MtView */
	<![CDATA[
     SELECT  
                A.CORP_CD                     AS corpCd            
              , A.RESR_NO                     AS resrNo            
              , A.REG_DT                      AS regDt             
              , A.MT_ST                       AS mtSt              
              , F.CD_NAME                     AS mtStNm            
              , A.RESR_DT                     AS resrDt
              , REPLICATE('0',2-LEN(A.RESR_HR))+CONVERT(NVARCHAR,A.RESR_HR) AS resrHr
	          , REPLICATE('0',2-LEN(A.RESR_MM))+CONVERT(NVARCHAR,A.RESR_MM) AS resrMm
              , A.MT_CNT                      AS mtCnt             
              , A.RS_NO                       AS rsNo              
              , ISNULL(G.RS_NAME, '')         AS rsName
              , G.RS_CD						  AS rsCd	            
              , A.RSJ_NO                      AS rsjNo             
              , H.RSJ_NAME                    AS rsjName           
              , A.RSI_NO                      AS rsiNo
              , A.SCR_YN                      AS scrYn
              , A.DATA_REGDT                  AS dataRegdt         
              , A.DATA_REGNT                  AS dataRegnt         
        FROM    RS4000M A
                INNER JOIN CM4000M F
        ON      F.CORP_CD       = A.CORP_CD
        AND     F.CD_CLS        = 'CT1030'
        AND     F.CLS_CAT       = '3'
        AND     F.CD            = A.MT_ST               
                LEFT JOIN RS1010M G
        ON      G.CORP_CD       = A.CORP_CD
        AND     G.RS_NO         = A.RS_NO               
                INNER JOIN SB1000M H
        ON      H.CORP_CD       = A.CORP_CD
        AND     H.RSJ_NO        = A.RSJ_NO              
                LEFT JOIN RS2010M I
        ON      I.CORP_CD       = A.CORP_CD
        AND     I.RSI_NO        = A.RSI_NO              
        WHERE   A.CORP_CD       = #corpCd#              
        AND     A.RESR_NO       = #resrNo#              
        ORDER   BY
                A.CORP_CD
              , A.RESR_NO
	]]>
	</select>
	
	<!-- SMS 목록 -->
	<select id="Ech0102DAO.selectEch0102SmsList" parameterClass="egovMap" resultClass="egovMap">
	/* Ech0102DAO.selectEch0102SmsList */
	<![CDATA[
		SELECT  
				A.CORP_CD					  AS corpCd
			  , SMST_NO						  AS smstNo  			                     
              , CONT             	  	      AS cont
        FROM    RM2010M A              
        WHERE   A.CORP_CD       = #corpCd#             
        ORDER   BY
                A.SMST_NO
    ]]>          
	</select>
	
	<!-- SMS발송대상자 피험자관리 리스트 -->
	<select id="Ech0102DAO.selectEch0102SmsSendList" parameterClass="egovMap" resultClass="egovMap">
		/* Ech0102DAO.selectEch0102SmsSendList */
		SELECT 
			a.* FROM 
			(		
				SELECT
					ROW_NUMBER() OVER(order by A.RSJ_NO DESC) rownum  	  
		             , A.CORP_CD                     AS corpCd            
		             , A.RSJ_NO                      AS rsjNo             
		             , A.RSJ_NAME                    AS rsjName           
		             , A.REG_DT                      AS regDt             
		             , A.BR_DT                       AS brDt
		             , FLOOR(CAST(DATEDIFF(DAY,A.BR_DT,GETDATE()) AS INTEGER)/365.2422) AS age              
		             , A.JREG_NO                     AS jregNo            
		             , A.ACCT_NO                     AS acctNo            
		             , A.BANK_NAME                   AS bankName          
		             , A.ACCT_NAME                   AS acctName          
		             , A.ACCT_CP                     AS acctCp            
		             , A.POST_NO                     AS postNo            
		             , A.ADDR_MAIN                   AS addrMain          
		             , A.ADDR_GITA                   AS addrGita
		             , CONCAT (A.ADDR_MAIN, A.ADDR_GITA)  AS addr          
		             , A.RSJ_ST_CLS                  AS rsjStCls          
		             , F.CD_NAME                     AS rsjStClsNm        
		             , A.GEN_YN                      AS genYn
		             , CASE A.GEN_YN
		             		WHEN '1' THEN '남'
		             		WHEN '2' THEN '여'
		             	  	ELSE '미정'
		             	END AS genYnNm             
		             , A.HP_NO                       AS hpNo              
		             , A.EMAIL                       AS email             
		             , A.POSITION                    AS position          
		             , A.USER_ID                     AS userId            
		             , A.PW_NO                       AS pwNo              
		             , A.BRANCH_CD                   AS branchCd          
		             , G.BRANCH_NAME                 AS branchName        
		             , A.SPOT                        AS spot              
		             , A.RLOGIN_DT                   AS rloginDt          
		             , A.USER_ST                     AS userSt            
		             , H.CD_NAME                     AS userStNm          
		             , A.REMK                        AS remk              
		             , A.EFF_STDT                    AS effStdt           
		             , A.EFF_ENDT                    AS effEndt           
		             , A.DATA_REGDT                  AS dataRegdt         
		             , A.DATA_REGNT                  AS dataRegnt
		             , A.CFM_DT					  AS cfmDt
		             , J.RS_CD						  AS rsCd
		             , J.RS_NO						  AS rsNo
		             , I.APPSTA_CLS				  AS appstaCls
		             , K.CD_NAME					  AS appstaClsNm
		        FROM    SB1000M A
		        INNER JOIN CM4000M F
		        ON      F.CORP_CD       = A.CORP_CD
		        AND     F.CD_CLS        = 'CT1010'
		        AND     F.CD            = A.RSJ_ST_CLS          
		        LEFT OUTER JOIN CT1020M G
		        ON      G.CORP_CD       = A.CORP_CD
		        AND     G.BRANCH_CD     = A.BRANCH_CD           
		               INNER JOIN CM4000M H
		        ON      H.CORP_CD       = A.CORP_CD
		        AND     H.CD_CLS        = 'CM1250'
		        AND     H.CD            = A.USER_ST
		
		               INNER JOIN RS2010M I
		        ON      I.CORP_CD       = A.CORP_CD
		        AND 	I.RSJ_NO		= A.RSJ_NO
		               INNER JOIN RS1010M J
		        ON      J.CORP_CD       = A.CORP_CD
		        AND     J.RS_NO         = I.RS_NO
				AND 	J.RSST_CLS		IN ('10','20')
		                       INNER JOIN CM4000M K
		       	ON      K.CORP_CD       = A.CORP_CD
		       	AND     K.CD_CLS        = 'CT2050'
		       	AND     K.CD            = I.APPSTA_CLS
		       	WHERE A.CORP_CD = #corpCd#
		       	AND I.RS_NO = #rsNo#
		       	AND I.SUB_NO  
						<iterate open="(" close=")" conjunction="," prepend="IN" property="rsjSeq">
							#rsjSeq[]#
						</iterate>
			) A 
			ORDER BY A.rsjNo DESC
	</select>
	
	<!-- SMS발송 정보 등록-->
	<insert id="Ech0102DAO.insertEch0102AjaxSaveSms" parameterClass="egovMap">
	/* Ech0102DAO.insertEch0102AjaxSaveSms */
	<selectKey keyProperty="recsNo" resultClass="string" type="pre">
		DECLARE @R_CORP_CD                  NVARCHAR(0008) = #corpCd#                                                  
        DECLARE @V_RECM_DT                  NVARCHAR(0010) = #recsDt#                                                  
        DECLARE @P_RTN_KEY                  NVARCHAR(0020)                                                                 
        DECLARE @BDT04                      NVARCHAR(0004)                                                                 
        DECLARE @BDT06                      NVARCHAR(0006)                                                                 
        DECLARE @BDT10                      NVARCHAR(0010)                                                                 
        SET     @BDT10                      = CONVERT(NVARCHAR(10), GETDATE(), 23)                                         
        SET     @BDT04                      = SUBSTRING(@V_RECM_DT, 1, 4)                                                  
        SET     @BDT06                      = SUBSTRING(DBO.UFN_DTG08(@BDT10), 1, 6)                                       
                                                                                                                           
        SELECT  CONVERT(NVARCHAR, CONVERT(DECIMAL(18, 0), ISNULL(MAX(A.RECS_NO), @BDT04 + '0000')) + 1) as recsNo     
        FROM    RM2000M A                                                                                                  
        WHERE   A.CORP_CD                   = @R_CORP_CD                                                                   
        AND     SUBSTRING(A.RECS_DT, 1, 4)  = @BDT04
	</selectKey>
	/* Ech0102DAO.insertEch0102AjaxSaveSms */
	<![CDATA[
		    INSERT  RM2000M(
                CORP_CD                     
              , RECS_NO                     
              , RECS_DT                      
              , TSTA_CLS                       
              , SEND_NO                     
              , RECE_NO                     
              , SMS_CLS                     
              , CONT
              , SENDM_CLS                      
              , RS_NO
              , RESR_DT
              , RESR_HR
              , RESR_MM
              , SEND_DT
              , BRANCH_CD                      
              , DATA_REGDT                  
              , DATA_REGNT                  
        ) VALUES(
                #corpCd#
              , #recsNo#
			  , #recsDt#	              
              , #tstaCls#
              , #sendNo#
              , #receNo#
              , #smsCls#
              , #cont#
              , #sendmCls#
              , #rsNo#
              , #resrDt#
              , #resrHr#
              , #resrMm#
              , GETDATE()
              , #branchCd#
              , GETDATE()
              , #dataRegnt#
        )
	]]>
		
	</insert>
	
	<!-- SMS 목록 -->
	<select id="Ech0102DAO.selectEch1002SmsList" parameterClass="egovMap" resultClass="egovMap">
	/* Ech0102DAO.selectEch1002SmsList */
	<![CDATA[
		SELECT  
				A.CORP_CD					  AS corpCd
			  , SMST_NO						  AS smstNo  			                     
              , CONT             	  	      AS cont
        FROM    RM2010M A              
        WHERE   A.CORP_CD       = #corpCd#             
        ORDER   BY
                A.SMST_NO
    ]]>          
	</select>
	
	<!-- 예약SMS 대상 리스트 -->
	<select id="Ech0102DAO.selectEch0102SendSmsMtList" parameterClass="egovMap" resultClass="egovMap">
		/* Ech0102DAO.selectEch0102SendSmsMtList */
		SELECT 
			a.* FROM 
			(	
				SELECT
					ROW_NUMBER() OVER(order by A.RESR_NO DESC) rownum  	  	
					, A.CORP_CD			AS corpCd
					, A.RESR_NO			AS resrNo
					, A.RESR_DT			AS resrDt
					, REPLICATE('0',2-LEN(A.RESR_HR))+CONVERT(NVARCHAR,A.RESR_HR) AS resrHr
			        , REPLICATE('0',2-LEN(A.RESR_MM))+CONVERT(NVARCHAR,A.RESR_MM) AS resrMm
					, A.MT_ST			AS mtSt
					, K.CD_NAME 		AS mtstNm
					, A.RS_NO			AS rsNo
					, B.RSJ_NO			AS rsjNo 
					, B.RSJ_NAME		AS rsjName 
					, B.HP_NO			AS hpNo
					, B.EMAIL			AS email 
					, C.RS_CD			AS rsCd
					, CONCAT(A.RESR_DT,' ',FORMAT(A.RESR_HR,'00'),'시',FORMAT(A.RESR_MM,'00'),'분') AS resrDay 
					, D.APPSTA_CLS		AS appstaCls
					, L.CD_NAME			AS appstaClsNm
				FROM RS4000M A
				INNER JOIN SB1000M B 
				ON B.CORP_CD = A.CORP_CD 
				AND B.RSJ_NO = A.RSJ_NO
				LEFT OUTER JOIN RS1010M C 
				ON C.CORP_CD = A.CORP_CD 
				AND C.RS_NO = A.RS_NO
				INNER JOIN RS2010M D 
				ON D.CORP_CD = A.CORP_CD 
				AND D.RSJ_NO = A.RSJ_NO
				AND D.RS_NO  = A.RS_NO
				INNER JOIN CM4000M K  
				ON K.CORP_CD = A.CORP_CD 
				AND K.CD_CLS = 'CT1030'
				AND K.CLS_CAT = '3'
				AND K.CD = A.MT_ST
				INNER JOIN CM4000M L  
				ON L.CORP_CD = A.CORP_CD 
				AND L.CD_CLS = 'CT2050'
				AND L.CLS_CAT = '3'
				AND L.CD = D.APPSTA_CLS
				WHERE A.CORP_CD = #corpCd#
				AND A.RS_NO = #rsNo#
		        AND A.MT_ST IN ('10')
		        AND D.SUB_NO  
						<iterate open="(" close=")" conjunction="," prepend="IN" property="rsjSeq">
							#rsjSeq[]#
						</iterate>
			) A 
			ORDER BY A.resrNo ASC
	</select>
	
	<!-- 예약SMS 대상자 상세보기 조회 -->
	<select id="Ech0102DAO.selectEch0102RsjDetail" parameterClass="rm2000mVO" resultClass="rm2000mVO">
		/* Ech0102DAO.selectEch0102RsjDetail */
	<![CDATA[
     SELECT  	
 		A.CORP_CD		AS corpCd
 		, B.RSJ_NO		AS rsjNo
 		, B.RSJ_NAME 	AS receName
 		, B.HP_NO		AS receNo
	 FROM RS2010M A
	 INNER JOIN SB1000M B 
	 ON B.CORP_CD 		= A.CORP_CD 
	 AND B.RSJ_NO 		= A.RSJ_NO 
	 WHERE A.CORP_CD 	= #corpCd#
	 AND A.RS_NO 		= #rsNo#
	 AND A.SUB_NO 		= #rsjNo#        
	        
	]]>
	</select>
	
	<!-- 연구과제의 피험자수 RS_SCNT 갱신, 식별번호가 부여된 피험자 총수 -->
	<update id="Ech0102DAO.updateEch0102RsScnt" parameterClass="egovMap">	
		UPDATE RS1010M 
		SET RS_SCNT = (SELECT COUNT(*)
						FROM RS2010M B 
						WHERE B.CORP_CD = #corpCd# 
						AND B.RS_NO 	= #rsNo# 
						AND B.CFM_YN 	= 'Y'
						AND B.RSI_NO3 IS NOT NULL
						)
		WHERE 					
			CORP_CD = #corpCd#
		AND RS_NO 	= #rsNo#
	</update>
	
	<!-- 연구과제의 피험자수 RS_SCNT 갱신, 식별번호가 부여된 피험자 총수, 연구차수 일괄 설정 -->
	<update id="Ech0102DAO.updateEch0102RsScnt2" parameterClass="egovMap">	
		UPDATE RS1000M 
		SET RS_SCNT = (SELECT COUNT(*)
						FROM RS2010M B 
						WHERE B.CORP_CD = #corpCd# 
						AND B.RS_NO 	= #rsNo# 
						AND B.CFM_YN 	= 'Y'
						AND B.RSI_NO3 IS NOT NULL
						)
		WHERE 					
			CORP_CD = #corpCd#
		AND RS_CD 	LIKE CONCAT(#rsNo#,'%')
	</update>

	<!-- 연구대상자 스크리닝번호 일괄 부여(대상자 선별) -->
	<select id="Ech0102DAO.selectEch0102StNoBat" parameterClass="egovMap" resultClass="rs2000mVO">
	/* Ech0102DAO.selectEch0102StNoBat */
	<![CDATA[
		 SELECT  
                A.CORP_CD                     AS corpCd
              , A.RS_NO                       AS rsNo            
              , A.SUB_NO                      AS subNo             
              , A.RSI_NO1                     AS rsiNo1            
              , A.RSI_NO2                     AS rsiNo2            
              , A.RSI_NO3                     AS rsiNo3            
              , A.RSI_NO                      AS rsiNo           
              , A.APPSTA_CLS                  AS appstaClsm       
              , A.APP_STDT                    AS appStdt           
              , A.APP_ENDT                    AS appEndt           
              , A.ETC                         AS etc               
              , A.APP_YN                      AS appYn             
              , A.POOL_YN                     AS poolYn            
              , A.FIRST_ST                    AS firstSt           
              , A.CFM_YN                      AS cfmYn             
              , A.DATA_REGDT                  AS dataRegdt         
              , A.DATA_REGNT                  AS dataRegnt         
        FROM    RS2010M A
		WHERE CORP_CD 	= #corpCd#
		AND RS_NO		= #rsNo#
		AND FIRST_ST 	= 'Y'
		AND (FIRST_ST_NO IS NULL OR FIRST_ST_NO = 0)
		AND SUB_NO
			]]>
			<iterate open="(" close=")" conjunction="," prepend="IN" property="rsjSeq">
				#rsjSeq[]#
			</iterate>	
	</select>

	<!-- 연구대상자 스크리닝번호 획득 -->
	<select id="Ech0102DAO.selectEch0102StNoCnt" parameterClass="rs2000mVO" resultClass="string">
	/* Ech0102DAO.selectEch0102StNoCnt */
	<![CDATA[
		SELECT
			CONVERT(NVARCHAR, CONVERT(DECIMAL(18, 0), ISNULL(MAX(FIRST_ST_NO), '00')) + 1) AS totCnt
		FROM RS2010M
		WHERE CORP_CD 	= #corpCd#
		AND RS_NO 		= #rsNo#
	]]>
	</select>

	<!-- 연구대상자 스크리닝번호 저장-->
	<update id="Ech0102DAO.updateEch0102StNo" parameterClass="rs2000mVO">
	/* Ech0102DAO.updateEch0102StNo */
		UPDATE RS2010M
		SET
			FIRST_ST_NO 	= #firstStNo#
			, DATA_REGDT 	= GETDATE()
			, DATA_REGNT 	= #dataRegnt#
		WHERE CORP_CD 		= #corpCd#
		AND RS_NO 		= #rsNo#
		AND SUB_NO 		= #subNo#
	</update>
	
	<sql id="where_rs2000m3">
		FROM    RS2010M A
                INNER JOIN CT1000M F
        ON      F.CORP_CD       = A.CORP_CD             
                INNER JOIN RS1010M G
        ON      G.CORP_CD       = A.CORP_CD
        AND     G.RS_NO         = A.RS_NO
        AND 	G.DEL_YN = 'N'               
                INNER JOIN SB1000M H
        ON      H.CORP_CD       = A.CORP_CD
        AND     H.RSJ_NO        = A.RSJ_NO              
                INNER JOIN CM4000M I
        ON      I.CORP_CD       = A.CORP_CD
        AND     I.CD_CLS        = 'CT2050'
        AND     I.CLS_CAT       = '3'
        AND     I.CD            = A.APPSTA_CLS
        INNER JOIN CM4000M K
        ON      K.CORP_CD       = A.CORP_CD
        AND     K.CD_CLS        = 'CT2030'
        AND     K.CLS_CAT       = '3'
        AND     K.CD            = G.RS_NO3
                INNER JOIN CM4000M L
        ON      L.CORP_CD       = A.CORP_CD
        AND     L.CD_CLS        = 'CT2050'
        AND     L.CLS_CAT       = '3'
        AND     L.CD            = G.RSST_CLS        
        LEFT OUTER join (SELECT 
	    						DISTINCT SUBSTRING(a.RS_CD,1,14) AS RS_CD ,
	    						STUFF(( 
	        							SELECT 
	            						',' +VEND_NAME 
	        							FROM 
	           							 RS1000M b
	           							 INNER JOIN CT2000M b1
	           							 ON b1.CORP_CD = b.CORP_CD
	           							 AND b1.VEND_NO = b.VEND_NO 
								        WHERE
								        	b.CORP_CD = A.CORP_CD
								            AND b.RS_CD LIKE CONCAT(SUBSTRING(A.RS_CD,1,14),'%')
								            FOR XML PATH('') ),1,1,'') AS VEND 
								FROM 
								    RS1000M a) V
			ON V.RS_CD LIKE CONCAT(SUBSTRING(A.RS_NO,1,14),'%')
        LEFT OUTER join 
         (SELECT 
						DISTINCT a.RSJ_NO+a.RS_NO+a.scr_yn AS aa,
						STUFF(( 
								SELECT 
								',' +CONCAT(A.RESR_DT,' ',FORMAT(A.RESR_HR,'00'),'시',FORMAT(A.RESR_MM,'00'),'분',' ',C.CD_NAME) 
								FROM 
								 RS4000M b
								 inner join CM4000M c 
								 on c.CORP_CD = b.CORP_CD
								 and c.CD_CLS = 'CT1030'
								 and c.CD = a.MT_ST 
								  
						        WHERE
						        	b.CORP_CD = A.CORP_CD 
						            AND b.RS_NO = a.RS_NO
						            AND b.RSJ_NO = a.RSJ_NO
						            AND b.SCR_YN = 'Y'
						            FOR XML PATH('') ),1,1,'') AS MTLIST  
						FROM 
						    RS4000M a ) U 
        ON U.AA = CONCAT(A.RSJ_NO,A.RS_NO,'Y')
        WHERE   A.CORP_CD 		= #corpCd#
        AND		A.RS_NO 		= #rsNo#
        AND     A.APP_YN 		LIKE CONCAT ('%',#appYn#,'%')
        AND     A.POOL_YN 		LIKE CONCAT ('%',#poolYn#,'%')
        AND     A.FIRST_ST 		LIKE CONCAT ('%',#firstSt#,'%')
        AND 	A.CFM_YN 		LIKE CONCAT ('%',#cfmYn#,'%')
        AND 	A.FIRST_ST_NO   IS NOT NULL
	</sql>
	
	<!-- 피험자선정-스크리닝대상자 엑셀다운로드 -->
	<select id="Ech0102DAO.selectEch0102ExcelScrList" parameterClass="searchVO" resultClass="egovMap">
	/* Ech0102DAO.selectEch0102ExcelScrList */
	<![CDATA[
		SELECT Z.* FROM
			(
				SELECT  
				ROW_NUMBER() OVER(order by A.RS_NO DESC) rownum	
	              , A.CORP_CD                     AS corpCd            
	              , F.CORP_NAME                   AS corpName
	              , A.RS_NO                       AS rsNo
	              , G.RS_CD						  AS rsCd	              
	              , G.RS_NAME                     AS rsName
	              , G.RS_NO3                      AS rsNo3
	              , K.CD_NAME                     AS rsNo3Nm
	              , G.RSST_CLS                    AS rsStCls          
	              , L.CD_NAME                     AS rsStClsNm 
	              , A.SUB_NO                      AS subNo
	              , A.RSJ_NO 					  AS rsjNo
	              , A.RSI_NO1                     AS rsiNo1            
	              , A.RSI_NO2                     AS rsiNo2            
	              , A.RSI_NO3                     AS rsiNo3            
	              , A.RSI_NO                      AS rsiNo            
	              , H.RSJ_NAME                    AS rsjName
	              , H.GEN_YN					  AS genYn
	              , CASE H.GEN_YN
	              		WHEN '1' THEN '남'
	              		WHEN '2' THEN '여'
	              		ELSE '미정'
	              	END 						  AS genYnNm	
	              , FLOOR(CAST(DATEDIFF(DAY,H.BR_DT,GETDATE()) AS INTEGER)/365.2422) AS age
	              , H.BR_DT						  AS brDt
	              , H.HP_NO 					  AS hpNo
	              , H.POST_NO    				  AS postNo
	              , H.ADDR_MAIN 				  AS addrMain
	              , H.ADDR_GITA 				  AS addrGita
	              , CONCAT(H.ADDR_MAIN,H.ADDR_GITA)	AS addr
	              , A.APPSTA_CLS                  AS appstaCls         
	              , I.CD_NAME                     AS appstaClsNm       
	              , A.APP_STDT                    AS appStdt           
	              , A.APP_ENDT                    AS appEndt           
	              , A.ETC                         AS etc               
	              , A.APP_YN                      AS appYn             
	              , A.POOL_YN                     AS poolYn            
	              , A.FIRST_ST                    AS firstSt           
	              , A.CFM_YN                      AS cfmYn             
	              , A.DATA_REGDT                  AS dataRegdt         
	              , A.DATA_REGNT                  AS dataRegnt
	              , LOWER(A.RS_NO) + A.RSJ_NO 		  AS mapKey
	              , A.FIRST_ST_NO				  AS firstStNo
	              , U.MTLIST					  AS mtlist
	              , V.VEND						  AS vendName
	]]>
	<include refid="where_rs2000m3" />
	<![CDATA[
			) Z
			ORDER BY Z.corpCd
					,Z.rsNo
					,Z.firstStNo
		
	]]>	
	</select>
	
	<sql id="where_rs2000m4">
		FROM    RS2010M A
                INNER JOIN CT1000M F
        ON      F.CORP_CD       = A.CORP_CD             
                INNER JOIN RS1010M G
        ON      G.CORP_CD       = A.CORP_CD
        AND     G.RS_NO         = A.RS_NO
        AND 	G.DEL_YN = 'N'               
                INNER JOIN SB1000M H
        ON      H.CORP_CD       = A.CORP_CD
        AND     H.RSJ_NO        = A.RSJ_NO              
                INNER JOIN CM4000M I
        ON      I.CORP_CD       = A.CORP_CD
        AND     I.CD_CLS        = 'CT2050'
        AND     I.CLS_CAT       = '3'
        AND     I.CD            = A.APPSTA_CLS
        INNER JOIN CM4000M K
        ON      K.CORP_CD       = A.CORP_CD
        AND     K.CD_CLS        = 'CT2030'
        AND     K.CLS_CAT       = '3'
        AND     K.CD            = G.RS_NO3
                INNER JOIN CM4000M L
        ON      L.CORP_CD       = A.CORP_CD
        AND     L.CD_CLS        = 'CT2050'
        AND     L.CLS_CAT       = '3'
        AND     L.CD            = G.RSST_CLS
        LEFT OUTER join (SELECT 
	    						DISTINCT SUBSTRING(a.RS_CD,1,14) AS RS_CD ,
	    						STUFF(( 
	        							SELECT 
	            						',' +VEND_NAME 
	        							FROM 
	           							 RS1000M b
	           							 INNER JOIN CT2000M b1
	           							 ON b1.CORP_CD = b.CORP_CD
	           							 AND b1.VEND_NO = b.VEND_NO 
								        WHERE
								        	b.CORP_CD = A.CORP_CD
								            AND b.RS_CD LIKE CONCAT(SUBSTRING(A.RS_CD,1,14),'%')
								            FOR XML PATH('') ),1,1,'') AS VEND 
								FROM 
								    RS1000M a) U
			ON U.RS_CD LIKE CONCAT(SUBSTRING(A.RS_NO,1,14),'%')
        WHERE   A.CORP_CD 		= #corpCd#
        AND		A.RS_NO 		= #rsNo#
        AND     A.APP_YN 		LIKE CONCAT ('%',#appYn#,'%')
        AND     A.POOL_YN 		LIKE CONCAT ('%',#poolYn#,'%')
        AND     A.FIRST_ST 		LIKE CONCAT ('%',#firstSt#,'%')
        AND 	A.CFM_YN 		LIKE CONCAT ('%',#cfmYn#,'%')
        AND 	A.FIRST_ST_NO   IS NOT NULL
	</sql>
	
	<!-- 피험자선정-피험자확정 엑셀다운로드 -->
	<select id="Ech0102DAO.selectEch0102ExcelCfmList" parameterClass="searchVO" resultClass="egovMap">
	/* Ech0102DAO.selectEch0102ExcelCfmList */
	<![CDATA[
		SELECT Z.* FROM
			(
				SELECT  
				ROW_NUMBER() OVER(order by A.RS_NO DESC) rownum	
	              , A.CORP_CD                     AS corpCd            
	              , F.CORP_NAME                   AS corpName
	              , A.RS_NO                       AS rsNo
	              , G.RS_CD						  AS rsCd	              
	              , G.RS_NAME                     AS rsName
	              , G.RS_NO3                      AS rsNo3
	              , K.CD_NAME                     AS rsNo3Nm
	              , G.RSST_CLS                    AS rsStCls          
	              , L.CD_NAME                     AS rsStClsNm 
	              , A.SUB_NO                      AS subNo
	              , A.RSJ_NO 					  AS rsjNo
	              , A.RSI_NO1                     AS rsiNo1            
	              , A.RSI_NO2                     AS rsiNo2            
	              , A.RSI_NO3                     AS rsiNo3            
	              , A.RSI_NO                      AS rsiNo            
	              , H.RSJ_NAME                    AS rsjName
	              , H.GEN_YN					  AS genYn
	              , H.JREG_NO					  AS jregNo
	              , H.ACCT_NO					  AS acctNo
	              , H.BANK_NAME					  AS bankName
	              , H.ACCT_NAME					  AS acctName
	              , CASE H.GEN_YN
	              		WHEN '1' THEN '남'
	              		WHEN '2' THEN '여'
	              		ELSE '미정'
	              	END 						  AS genYnNm	
	              , FLOOR(CAST(DATEDIFF(DAY,H.BR_DT,GETDATE()) AS INTEGER)/365.2422) AS age
	              , H.BR_DT						  AS brDt
	              , H.HP_NO 					  AS hpNo
	              , H.POST_NO    				  AS postNo
	              , H.ADDR_MAIN 				  AS addrMain
	              , H.ADDR_GITA 				  AS addrGita
	              , CONCAT(H.ADDR_MAIN,H.ADDR_GITA)	AS addr
	              , A.APPSTA_CLS                  AS appstaCls         
	              , I.CD_NAME                     AS appstaClsNm       
	              , A.APP_STDT                    AS appStdt           
	              , A.APP_ENDT                    AS appEndt           
	              , A.ETC                         AS etc               
	              , A.APP_YN                      AS appYn             
	              , A.POOL_YN                     AS poolYn            
	              , A.FIRST_ST                    AS firstSt           
	              , A.CFM_YN                      AS cfmYn             
	              , A.DATA_REGDT                  AS dataRegdt         
	              , A.DATA_REGNT                  AS dataRegnt	              
	              , LOWER(A.RS_NO) + A.RSJ_NO 	  AS mapKey
	              , A.FIRST_ST_NO				  AS firstStNo
				  , U.VEND						  AS vendName              
	]]>
	<include refid="where_rs2000m4" />
	<![CDATA[
			) Z
			ORDER BY Z.corpCd
					,Z.rsNo
					,Z.rsiNo
		
	]]>	
	</select>
	
	<!-- 연구대상자 스크리닝번호 일괄 부여(대상자 선별) -->
	<select id="Ech0102DAO.selectEch0102RsjmgView" parameterClass="rs2000mVO" resultClass="rs2000mVO">
	/* Ech0102DAO.selectEch0102RsjmgView */
	<![CDATA[
		 SELECT  
                A.CORP_CD                     AS corpCd
              , A.RS_NO                       AS rsNo            
              , A.SUB_NO                      AS subNo             
              , A.RSI_NO1                     AS rsiNo1            
              , A.RSI_NO2                     AS rsiNo2            
              , A.RSI_NO3                     AS rsiNo3            
              , A.RSI_NO                      AS rsiNo
              , A.RSJ_NO                      AS rsjNo
              , A.APPSTA_CLS                  AS appstaCls      
              , A.APP_STDT                    AS appStdt           
              , A.APP_ENDT                    AS appEndt           
              , A.ETC                         AS etc               
              , A.APP_YN                      AS appYn             
              , A.POOL_YN                     AS poolYn            
              , A.FIRST_ST                    AS firstSt           
              , A.CFM_YN                      AS cfmYn             
              , A.DATA_REGDT                  AS dataRegdt         
              , A.DATA_REGNT                  AS dataRegnt
              , B.RSJ_NAME					  AS rsjName
              , B.BR_DT						  AS brDt
              , C.RS_CD						  AS rsCd
              , C.RS_NAME					  AS rsName
        FROM    RS2010M A
        INNER JOIN SB1000M B
        ON B.CORP_CD 		= A.CORP_CD
        AND B.RSJ_NO		= A.RSJ_NO
        INNER JOIN RS1010M C
        ON C.CORP_CD 		= A.CORP_CD
        AND C.RS_NO			= A.RS_NO
		WHERE A.CORP_CD		= #corpCd#
		AND A.RS_NO 		= #rsNo#
		AND A.SUB_NO 		= #subNo#
	]]>	
	</select>
	
	<!-- 연구대상자 정보 수정 특이사항, 참여상태, 시작일자, 종료일자 -->
	<update id="Ech0102DAO.updateEch0102AjaxSaveRsjmg" parameterClass="egovMap">
		/* Ech0102DAO.updateEch0102AjaxSaveRsjmg */
	<![CDATA[
	    UPDATE
                RS2010M
        SET
          	  ETC                  		    = #etc#
          	  , APPSTA_CLS					= #appstaCls#
              , APP_STDT					= #appStdt#
              , APP_ENDT					= #appEndt#         
              , DATA_REGDT                  = GETDATE()
              , DATA_REGNT                  = #dataRegnt#                   
        WHERE
                CORP_CD			= #corpCd#              
        AND     RS_NO        	= #rsNo#
        AND     SUB_NO         	= #subNo#
	]]>
	</update>
	
	<!-- /피험자선정****************************************************************************************************************************************** -->

	<!-- 연구책임자 확인 -->
    <select id="Ech0102DAO.selectEch0102RsDrtCnt" parameterClass="egovMap" resultClass="int">
	/* Ech0102DAO.selectEch0102RsDrtCnt */
	<![CDATA[
		SELECT
			COUNT(*)
		FROM
			RS1000M
		WHERE
			CORP_CD 	= #corpCd#
		AND RS_CD 		LIKE CONCAT(#rsCd#,'%')
		AND RS_DRT 		= #rsDrt#	
	]]>
	</select>
	
	
	<!-- //연구차수 목록 -->
	<select id="Ech0102DAO.selectEch0102RsList" parameterClass="egovMap" resultClass="rs1000mVO">
	/* Ech0102DAO.selectEch0102RsList */
	<![CDATA[
		 SELECT  
                A.CORP_CD                     AS corpCd
              , A.RS_NO                       AS rsNo
              , A.RS_NO1                      AS rsNo1
              , A.RS_NO2                      AS rsNo2
              , A.RS_NO3                      AS rsNo3
              , A.RS_NO4                      AS rsNo4
              , A.RS_NO5                      AS rsNo5
              , A.RS_NO6                      AS rsNo6
              , A.RS_NO7                      AS rsNo7
              , A.RS_CD                       AS rsCd
        FROM    RS1000M A
		WHERE CORP_CD 	= #corpCd#
		AND RS_CD 		LIKE CONCAT(#rsCd#,'%')	
		]]>
	</select>

	<!-- 피험자선정 상세보기 -->
	<select id="Ech0102DAO.selectEch0102" parameterClass="rs2000mVO" resultClass="rs2000mVO">
	/* Ech0102DAO.selectEch0102 */
	<![CDATA[
	    SELECT  
                A.CORP_CD                     AS corpCd            
              , A.RS_NO                       AS rsNo              
              , A.SUB_NO                      AS subNo             
              , A.RSI_NO1                     AS rsiNo1            
              , A.RSI_NO2                     AS rsiNo2            
              , A.RSI_NO3                     AS rsiNo3            
              , A.RSI_NO                      AS rsiNo
              , A.RSJ_NO					  AS rsjNo           
              , A.APPSTA_CLS                  AS appstaCls         
              , A.APP_STDT                    AS appStdt           
              , A.APP_ENDT                    AS appEndt           
              , A.ETC                         AS etc               
              , A.APP_YN                      AS appYn             
              , A.POOL_YN                     AS poolYn            
              , A.FIRST_ST                    AS firstSt           
              , A.CFM_YN                      AS cfmYn             
              , A.DATA_REGDT                  AS dataRegdt         
              , A.DATA_REGNT                  AS dataRegnt
              , A.FIRST_ST_NO				  AS firstStNo         
        FROM    RS2010M A
        WHERE   A.CORP_CD       = #corpCd#              
        AND     A.RS_NO         = #rsNo#                
        AND     A.SUB_NO        = #subNo#               
	]]>
	</select>

</sqlMap>