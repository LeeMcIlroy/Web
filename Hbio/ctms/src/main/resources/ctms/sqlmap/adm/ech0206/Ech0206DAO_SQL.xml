<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"	"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap>
	<!-- 연구대상자(연구동의서관리)******************************************************************************************************************************************* -->
	<!-- 변수목록
                A.CORP_CD                     AS corpCd            회사코드
                A.RS_NO                       AS rsNo              연구과제 번호
                A.BRANCH_CD                   AS branchCd          자사 코드
                F.BRANCH_NAME                 AS branchName        자사 코드명
                A.RS_CODE                     AS rsCode            연구코드
                A.REG_DT                      AS regDt             등록일자
                A.RS_STDT                     AS rsStdt            연구시작일자
                A.RS_ENDT                     AS rsEndt            연구종료일자
                A.RS_METHOD                   AS rsMethod          연구방법
                A.RS_PURPOSE                  AS rsPurpose         연구목적
                A.RS_FIELD                    AS rsField           연구분야
                A.RS_DIRECTOR                 AS rsDirector        연구책임자
                A.RS_MANAGER                  AS rsManager         연구담당자
                A.RS_PERSON                   AS rsPerson          연구대상인원
                A.RS_MAX_PERSON               AS rsMaxPerson       최대지원자수
                A.RS_STA_CLS                  AS rsStaCls          연구상태
                G.CD_NAME                     AS rsStaClsNm        연구상태명
                A.REP_DT                      AS repDt             결과보고일
                A.VISIT_CNT                   AS visitCnt          방문횟수
                A.DUPL_YN                     AS duplYn            중복참여여부
                A.RS_NAME                     AS rsName            연구명
                A.RS_PAY                      AS rsPay             연구비
                A.IRB_SUBMIS_YN               AS irbSubmisYn       IRB승인필요여부
                A.PROD_INFO                   AS prodInfo          제품정보
                A.PROD_NAME                   AS prodName          제품명
                A.DEL_YN                      AS delYn             삭제여부
                A.DATA_REGDT                  AS dataRegdt         등록수정일
                A.DATA_REGNT                  AS dataRegnt         등록수정자
                B.RS_NO                       AS rsNoSub           연구과제번호(B)(중복)
                B.SUB_NO                      AS subNo             피험자선정번호(B)
                B.PRICF_YN                    AS pricfYn           개인정보동의(B)
                B.RSICF_YN                    AS rsicfYn           연구참여동의(B)
                B.ICF_DT                      AS icfDt             동의서작성일자(B)
    -->
        
	<sql id="where_rs1000mIcf">
		FROM    RS1010M A
             	LEFT OUTER JOIN CR3200M H 
        ON H.CORP_CD       = A.CORP_CD
        AND H.RS_NO  = A.RS_NO 
                INNER JOIN CT1020M F
        ON      F.CORP_CD       = A.CORP_CD
        AND     F.BRANCH_CD     = A.BRANCH_CD
                INNER JOIN CM4000M G
        ON      G.CORP_CD       = A.CORP_CD
        AND     G.CD_CLS        = 'CT2050'
        AND     G.CLS_CAT       = '3'
        AND     G.CD            = A.RSST_CLS
        INNER JOIN CM4000M K
        ON      K.CORP_CD       = A.CORP_CD
        AND     K.CD_CLS        = 'CT2030'
        AND     K.CLS_CAT       = '3'
        AND     K.CD            = A.RS_NO3
        LEFT OUTER join (SELECT 
	    						DISTINCT SUBSTRING(a.RS_CD,1,14) AS RS_CD ,
	    						STUFF(( 
	        							SELECT 
	            						',' +VEND_NAME 
	        							FROM 
	           							 RS1000M b
	           							 INNER JOIN CT2000M b1
	           							 ON b1.CORP_CD = b.CORP_CD
	           							 AND b1.VEND_NO = b.VEND_NO 
								        WHERE
								        	b.CORP_CD = A.CORP_CD
								            AND b.RS_CD LIKE CONCAT(SUBSTRING(A.RS_CD,1,14),'%')
								            FOR XML PATH('') ),1,1,'') AS VEND 
								FROM 
								    RS1000M a) U
			ON U.RS_CD LIKE CONCAT(SUBSTRING(A.RS_CD,1,14),'%')
        <dynamic prepend="INNER JOIN RS1020M N">
        	<isNotEmpty property="branchCd" prepend="ON">
        		ON		N.CORP_CD		= A.CORP_CD
		        AND		N.RS_NO			= A.RS_NO
		        AND		N.BRANCH_CD		= #branchCd#
        	</isNotEmpty>
	   </dynamic> 
       <dynamic prepend="WHERE">
	        	<isNotEmpty property="corpCd" prepend="AND">
	        		(A.CORP_CD = #corpCd#)
	        	</isNotEmpty>
	        	<isNotEmpty property="searchCondition8" prepend="AND">
	        		(A.RS_CD = #searchCondition8#)
	        	</isNotEmpty>
				<isNotEmpty property="searchCondition4" prepend="">
					<isEqual property="searchCondition4" compareValue="1">
						<isNotEmpty property="searchCondition1" prepend="AND">
							<isNotEmpty property="searchCondition2" >
								CONVERT(CHAR(10), A.RS_STDT, 23) BETWEEN #searchCondition1# AND #searchCondition2#
							</isNotEmpty>
						</isNotEmpty>
					</isEqual>
					<isEqual property="searchCondition4" compareValue="2">
						<isNotEmpty property="searchCondition1" prepend="AND">
							<isNotEmpty property="searchCondition2" >
								CONVERT(CHAR(10), A.RS_ENDT, 23) BETWEEN #searchCondition1# AND #searchCondition2#
							</isNotEmpty>
						</isNotEmpty>
					</isEqual>
				</isNotEmpty>
				<isNotEmpty property="searchCondition5" prepend="AND">
	        		(A.RS_NO3 = #searchCondition5#)
	        	</isNotEmpty>
	        	<isNotEmpty property="searchCondition6" prepend="AND">
	        		(A.RSST_CLS = #searchCondition6#)
	        	</isNotEmpty>
				<isNotEmpty property="searchCondition3" prepend="AND">
		        	<!-- 전체 -->
		        	<isEqual property="searchCondition3" compareValue="1">
			        	<isNotEmpty property="searchWord" >
							(A.RS_NAME LIKE CONCAT ('%',#searchWord#,'%')
							OR A.RS_CD LIKE CONCAT ('%',#searchWord#,'%')
							OR V.VEND_NAME LIKE CONCAT ('%',#searchWord#,'%'))
						</isNotEmpty>
					</isEqual>
					<!-- 연구명칭 -->
		        	<isEqual property="searchCondition3" compareValue="2">
			        	<isNotEmpty property="searchWord" >
							(A.RS_NAME LIKE CONCAT ('%',#searchWord#,'%'))
						</isNotEmpty>
					</isEqual>
					<!-- 고객사명 -->
		        	<isEqual property="searchCondition3" compareValue="3">
			        	<isNotEmpty property="searchWord">
							(V.VEND_NAME LIKE CONCAT ('%',#searchWord#,'%'))
						</isNotEmpty>
					</isEqual>
					<!-- 연구코드 -->
		        	<isEqual property="searchCondition3" compareValue="4">
			        	<isNotEmpty property="searchWord">
							(A.RS_CD LIKE CONCAT ('%',#searchWord#,'%'))
						</isNotEmpty>
					</isEqual>
				</isNotEmpty>
			</dynamic>
	</sql>
	
	<!-- 연구동의서관리 리스트 -->
	<select id="Ech0206DAO.selectEch0206List" parameterClass="searchVO"
		resultClass="egovMap">
		/* Ech0206DAO.selectEch0206List */
	<![CDATA[
			SELECT 
			Z.* FROM 
			(		
			SELECT  
		  		A.CORP_CD                     AS corpCd            
              , A.RS_NO                       AS rsNo              
              , A.BRANCH_CD                   AS branchCd          
              , F.BRANCH_NAME                 AS branchName        
              , A.RS_CD         	          AS rsCd            
              , A.REG_DT                      AS regDt             
              , A.RS_PTC                      AS rsPtc          
              , A.RS_PPS    	              AS rsPps         
              , A.RS_NO3                      AS rsNo3
              , K.CD_NAME                     AS rsNo3Nm
              , A.RSST_CLS                    AS rsStCls          
              , G.CD_NAME                     AS rsstClsNm        
              , A.RS_NAME                     AS rsName            
              , A.IRBSM_YN                    AS irbsmYn       
	          , A.DATA_LOCK_YN				  AS dataLockYn
              , A.DEL_YN                      AS delYn
              , A.RS_SCNT					  AS rsScnt     
              , (SELECT count(*) 
              		FROM CR4000M cm 
              	 	WHERE cm.CORP_CD 	= A.CORP_CD 
              		AND cm.RS_NO 		= A.RS_NO
              		AND cm.PRICF_YN 	= 'Y' ) AS pricfCount
              , (SELECT count(*) 
              		FROM CR4000M cm 
              		WHERE cm.CORP_CD 	= A.CORP_CD 
              		AND cm.RS_NO 		= A.RS_NO
              		AND cm.RSICF_YN 	= 'Y' ) AS rsicfCount
              , U.VEND				  			AS vendName
              ]]>
		<include refid="where_rs1000mIcf" />	
		<![CDATA[
			AND A.DEL_YN = 'N'
			]]>
		
		<![CDATA[
			) Z 
			ORDER BY      Z.corpCd DESC
              , Z.regDt DESC, Z.rsCd DESC
				OFFSET #firstIndex# ROWS
				FETCH NEXT #recordCountPerPage# ROWS ONLY			
		]]>	
	</select>
	
	<!--  LIMIT #firstIndex#, #recordCountPerPage# -->

	<!-- 연구동의서관리 엑셀 리스트 -->
	<select id="Ech0206DAO.selectEch0206Excel" parameterClass="searchVO" resultClass="egovMap">
	/* Ech0206DAO.selectEch0206Excel */
	<![CDATA[
		SELECT 
			Z.* FROM 
			(	
			SELECT  
		  		A.CORP_CD                     AS corpCd            
              , A.RS_NO                       AS rsNo              
              , A.BRANCH_CD                   AS branchCd          
              , F.BRANCH_NAME                 AS branchName        
              , A.RS_CD         	          AS rsCd            
              , A.REG_DT                      AS regDt             
              , A.RS_PTC                      AS rsPtc          
              , A.RS_PPS    	              AS rsPps         
              , A.RS_NO3                      AS rsNo3
              , K.CD_NAME                     AS rsNo3Nm
              , A.RSST_CLS                    AS rsStCls          
              , G.CD_NAME                     AS rsstClsNm        
              , A.RS_NAME                     AS rsName            
              , A.IRBSM_YN                    AS irbsmYn
              , A.RS_SCNT					  AS rsScnt       
	          , A.DATA_LOCK_YN				  AS dataLockYn
              , A.DEL_YN                      AS delYn    
              , (SELECT count(*) 
              		FROM CR4000M cm 
              	 	WHERE cm.CORP_CD 	= A.CORP_CD 
              		AND cm.RS_NO 		= A.RS_NO
              		AND cm.PRICF_YN 	= 'Y' ) AS pricfCount
              , (SELECT count(*) 
              		FROM CR4000M cm 
              		WHERE cm.CORP_CD 	= A.CORP_CD 
              		AND cm.RS_NO 		= A.RS_NO
              		AND cm.RSICF_YN 	= 'Y' ) AS rsicfCount
              , U.VEND				  AS vendName
				]]>
		<include refid="where_rs1000mIcf" />	
		<![CDATA[
			AND A.DEL_YN = 'N'
			]]>
		
		<![CDATA[
			) Z 
			ORDER BY      Z.corpCd DESC
              , Z.regDt DESC, Z.rsCd DESC
			
		]]>	
	</select>


	<!-- 연구과제 cnt -->
	<select id="Ech0206DAO.selectEch0206ListCnt" parameterClass="searchVO"
		resultClass="int">
		/*Ech0206DAO.selectEch0206ListCnt */
	<![CDATA[
		SELECT
			count(*) totalCnt
	]]>
		<include refid="where_rs1000mIcf" />
				<![CDATA[
			AND A.DEL_YN = 'N'
			]]>
		
	</select>

	<!-- 연구과제 상세보기 -->
	<select id="Ech0206DAO.selectEch0206View" parameterClass="rs1000mVO"
		resultClass="rs1000mVO">
		/* Ech0206DAO.selectEch0206View */
	<![CDATA[
			SELECT  
		  		A.CORP_CD                     AS corpCd            
              , A.RS_NO                       AS rsNo              
              , A.BRANCH_CD                   AS branchCd          
              , F.BRANCH_NAME                 AS branchName        
              , A.RS_CD         	          AS rsCd            
              , A.REG_DT                      AS regDt             
              , A.RS_PTC                      AS rsPtc          
              , A.RS_PPS    	              AS rsPps         
              , A.RS_NO3                      AS rsNo3
              , K.CD_NAME                     AS rsNo3Nm
              , A.RSST_CLS                    AS rsStCls          
              , G.CD_NAME                     AS rsstClsNm        
              , A.RS_NAME                     AS rsName            
              , A.IRBSM_YN                    AS irbsmYn
              , A.RS_SCNT					  AS rsScnt       
	          , A.DATA_LOCK_YN				  AS dataLockYn
              , A.DEL_YN                      AS delYn    
              , (SELECT count(*) 
              		FROM CR4000M cm 
              	 	WHERE cm.CORP_CD 	= A.CORP_CD 
              		AND cm.RS_NO 		= A.RS_NO
              		AND cm.PRICF_YN 	= 'Y' ) AS pricfCount
              , (SELECT count(*) 
              		FROM CR4000M cm 
              		WHERE cm.CORP_CD 	= A.CORP_CD 
              		AND cm.RS_NO 		= A.RS_NO
              		AND cm.RSICF_YN 	= 'Y' ) AS rsicfCount
		FROM    RS1010M A
             	LEFT OUTER JOIN CR3200M H 
        ON H.CORP_CD       = A.CORP_CD
        AND H.RS_NO  = A.RS_NO 
                INNER JOIN CT1020M F
        ON      F.CORP_CD       = A.CORP_CD
        AND     F.BRANCH_CD     = A.BRANCH_CD
                INNER JOIN CM4000M G
        ON      G.CORP_CD       = A.CORP_CD
        AND     G.CD_CLS        = 'CT2050'
        AND     G.CLS_CAT       = '3'
        AND     G.CD            = A.RSST_CLS
        INNER JOIN CM4000M K
        ON      K.CORP_CD       = A.CORP_CD
        AND     K.CD_CLS        = 'CT2030'
        AND     K.CLS_CAT       = '3'
        AND     K.CD            = A.RS_NO3        
	        WHERE   A.CORP_CD       = #corpCd#              
	      		AND     A.RS_NO         = #rsNo#   
	]]>
	</select>

	<sql id="where_rs2000mIcf">
		FROM    RS2010M A
    		INNER JOIN SB1000M B
        	ON      B.CORP_CD       = A.CORP_CD
        	AND     B.RSJ_NO     = A.RSJ_NO
        	INNER JOIN RS1010M C
        	ON C.CORP_CD = A.CORP_CD
        	AND C.RS_NO = A.RS_NO  
            LEFT OUTER JOIN CR4000M F
	        ON      F.CORP_CD       = A.CORP_CD
	        AND		F.RS_NO = A.RS_NO
	        AND		F.SUB_NO = A.SUB_NO
	    WHERE A.CORP_CD = #corpCd#
	    	AND A.RS_NO = #rsNo#
	    	AND A.CFM_YN = 'Y'
	</sql>

	<!-- 피험자별 연구동의서관리 리스트 -->
	<select id="Ech0206DAO.selectEch0206IcfList" parameterClass="searchVO"
		resultClass="egovMap">
		/* Ech0206DAO.selectEch0206IcfList */
	<![CDATA[
	SELECT
		Z.* FROM 
		(
			SELECT 
				ROW_NUMBER() OVER(order by A.RS_NO DESC) rownum
              , A.CORP_CD                     AS corpCd            
              , A.RS_NO                       AS rsNo
              , A.SUB_NO					  AS subNo
              , B.RSJ_NAME 					  AS rsjName
              , B.BR_DT 					  AS brDt
              , CASE B.GEN_YN
              		WHEN '1' THEN '남' 
              		WHEN '2' THEN '여'
              	END 						  AS genYnNm
              , B.HP_NO					  	  AS hpNo 					 	
              , F.ICF_DT					  AS icfDt
              , CASE F.PRICF_YN
              		WHEN 'Y' THEN '제출' 
              		WHEN 'N' THEN '미제출'
              		ELSE '미등록'
              	END 						  AS pricfYnNm
              , CASE F.RSICF_YN 
	           		WHEN 'Y' THEN '제출' 
	           		WHEN 'N' THEN '미제출'
	           		ELSE '미등록'
           		END 						  AS rsicfYnNm
              , F.PRICF_YN					  AS pricfYn
			  , F.RSICF_YN					  AS rsicfYn
			  , FLOOR(CAST(DATEDIFF(DAY,B.BR_DT,GETDATE()) AS INTEGER)/365.2422) AS age
			  , C.RS_CD						  AS rsCd
			  , CONCAT(LOWER(A.CORP_CD),LOWER(A.RS_NO),A.SUB_NO) AS mapKey   
			  ]]>
		<include refid="where_rs2000mIcf" />	<![CDATA[				
			) Z 
			ORDER   BY
	                Z.corpCd
             	  , z.rsNo
             	  , z.subNo			
		]]>	
	</select>
	
	<!-- 피험자별 연구동의서관리 cnt -->
	<select id="Ech0206DAO.selectEch0206IcfListCnt" parameterClass="searchVO"
		resultClass="int">
		/*Ech0206DAO.selectEch0206IcfListCnt */
	<![CDATA[
		SELECT
			count(*) totalCnt
	]]>
		<include refid="where_rs2000mIcf" />
	</select>
	
	<!--등록된 회사코드+연구과제번호+피험자선정순번의 첨부파일 조회(동의서)  -->
	<select id="Ech0206DAO.selectEch0206Rptname" parameterClass="egovMap" resultClass="rs5020mVO" >
	/* Ech0206DAO.selectEch0206Rptname */
	<![CDATA[
		SELECT 
		        A.BOARD_NO AS rsNo
		        , A.BOARD_NO AS rptNo
		        , A.FILE_KEY AS rptCls
		FROM CT7000M A
		WHERE A.BOARD_NO   = #boardNo#
		AND A.BOARD_TYPE   = 'ICF'
	]]>
	</select>
	
	<!-- RS5020M 테이블 내 보고서 삭제 (동의서)-->
	<delete id="Ech0206DAO.deleteEch0206rsreport" parameterClass="string">
		/* Ech0206DAO.deleteEch0206rsreport */
	<![CDATA[
		DELETE	FROM 
				RS5020M
		WHERE
				RPT_NO = #rptNo#
	]]>
	</delete>
	
	<!--RS5020 보고서 상세조회(동의서)  -->
	<select id="Ech0206DAO.selectEch0206rptOne" parameterClass="string" resultClass="rs5020mVO" >
	/* Ech0206DAO.selectEch0206rptOne */
	<![CDATA[
		SELECT 
		         A.RS_NO 	AS rsNo
		        ,A.RPT_NO   AS rptNo
		        ,A.RPT_CLS  AS rptCls
        		
		FROM    RS5020M A
		WHERE 	RPT_NO 	= #rptNo#
		 

	]]>
	</select>
	
	<!--RS5020M 보고서테이블   추가(동의서) -->
    <insert id="Ech0206DAO.insertEch0206rsreport" parameterClass="rs5020mVO">
    <selectKey keyProperty="rptNo" resultClass="String" type="post">
        (SELECT MAX(RPT_NO) FROM RS5020M)
    </selectKey>
    <![CDATA[
        INSERT  RS5020M(
                CORP_CD                     
              , BRANCH_CD                   
              , RS_NO                                                  
              , RPT_CLS                     
              , RPT_DT                      
              , REMK                        
              , DATA_REGDT                  
              , DATA_REGNT                  
        ) VALUES(
                #corpCd#
              , #branchCd#
              , #rsNo#    
              , #rptCls#
           	  , getdate()
              , #remk#
              , getdate()
              , #dataRegnt#
        )
    ]]>
    </insert>
	
	<!-- 동의서등록여부 확인 cnt -->
	<select id="Ech0206DAO.selectEch0206ChkIcfCnt" parameterClass="cr4000mVO"
		resultClass="int">
		/*Ech0206DAO.selectEch0206ChkIcfCnt */
	<![CDATA[
		SELECT
			COUNT(*) totalCnt
		FROM CR4000M
		WHERE CORP_CD 	= #corpCd#
		AND RS_NO 		= #rsNo#
		AND SUB_NO 		= #subNo#
	]]>
	</select>
	
	<!-- 연구동의서 추가 -->
	<insert id="Ech0206DAO.insertEch0206" parameterClass="cr4000mVO">
	/* Ech0205DAO.insertEch0206 */
		INSERT  CR4000M(
                CORP_CD                     
              , RS_NO
              , SUB_NO
              , PRICF_YN
              , RSICF_YN
              , ICF_DT                       
              , DATA_REGDT                  
              , DATA_REGNT                  
        ) VALUES(
                #corpCd#
              , #rsNo#
              , #subNo#
              , #pricfYn#
              , #rsicfYn#
              , CONVERT(CHAR(10), GETDATE() , 23)
              , GETDATE()
              , #dataRegnt#
        )
	</insert>
	
	<!-- 연구동의서 수정 -->
	<update id="Ech0206DAO.updateEch0206" parameterClass="cr4000mVO">
	/* Ech0205DAO.updateEch0206 */
	<![CDATA[
		UPDATE CR4000M 
			SET PRICF_YN 		= #pricfYn#
				, RSICF_YN		= #rsicfYn#
				, ICF_DT		= CONVERT(CHAR(10), GETDATE() , 23)
				, DATA_REGDT	= GETDATE()
				, DATA_REGNT	= #dataRegnt#  
		WHERE CORP_CD 	= #corpCd#
		AND RS_NO		= #rsNo#
		AND SUB_NO		= #subNo#
	]]>
	</update>
	
	<!-- 동의서 상세보기  -->
	<select id="Ech0206DAO.selectEch0206IcfView" parameterClass="cr4000mVO" resultClass="cr4000mVO" >
	/* Ech0206DAO.selectEch0206IcfView */
	<![CDATA[
		SELECT 
	        A.CORP_CD		AS corpCd
	        , A.RS_NO  		AS rsNo
	        , A.SUB_NO		AS subNo
	        , A.PRICF_YN	AS pricfYn
	        , A.RSICF_YN	AS rsicfYn
	        , A.ICF_DT		AS icfDt
	        , B.RSJ_NO		AS rsjNo
	        , D.RS_CD		AS rsCd
	        , C.RSJ_NAME	AS rsjName
		FROM    CR4000M A
		INNER 	JOIN RS2010M B
		ON B.CORP_CD 	= A.CORP_CD
		AND B.RS_NO 	= A.RS_NO
		AND B.SUB_NO 	= A.SUB_NO
		INNER 	JOIN SB1000M C
		ON C.CORP_CD 	= A.CORP_CD
		AND C.RSJ_NO 	= B.RSJ_NO
		INNER 	JOIN RS1010M D
		ON D.CORP_CD 	= A.CORP_CD
		AND D.RS_NO 	= A.RS_NO
		WHERE A.CORP_CD = #corpCd#
		AND A.RS_NO 	= #rsNo#
		AND A.SUB_NO 	= #subNo# 
	]]>
	</select>
	
	<!-- 동의서 상세보기  -->
	<select id="Ech0206DAO.selectEch0206ViewInfo" parameterClass="cr4000mVO" resultClass="cr4000mVO" >
	/* Ech0206DAO.selectEch0206ViewInfo */
	<![CDATA[
		SELECT 
	        A.CORP_CD		AS corpCd
	        , A.RS_NO  		AS rsNo
	        , A.SUB_NO		AS subNo
	        , C.RSJ_NO		AS rsjNo
	        , C.RSJ_NAME 	AS rsjName
	        , D.RS_CD		AS rsCd
		FROM 	RS2010M A
		INNER 	JOIN SB1000M C
		ON C.CORP_CD 	= A.CORP_CD
		AND C.RSJ_NO 	= A.RSJ_NO
		INNER 	JOIN RS1010M D
		ON D.CORP_CD 	= A.CORP_CD
		AND D.RS_NO 	= A.RS_NO
		WHERE A.CORP_CD = #corpCd#
		AND A.RS_NO 	= #rsNo#
		AND A.SUB_NO 	= #subNo# 
	]]>
	</select>
	
		
	<!-- /연구동의서관리****************************************************************************************************************************************** -->

</sqlMap>