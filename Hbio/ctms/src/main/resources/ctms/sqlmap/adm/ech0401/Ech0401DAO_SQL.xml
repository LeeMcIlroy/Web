<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"	"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap>
	<!-- 시험결과추출******************************************************************************************************************************************* -->
	<!-- 변수목록
                A.CORP_CD                     AS corpCd            회사코드
                A.RS_NO                       AS rsNo              연구과제 번호
                A.BRANCH_CD                   AS branchCd          자사 코드
                F.BRANCH_NAME                 AS branchName        자사 코드명
                A.RS_CODE                     AS rsCode            연구코드
                A.REG_DT                      AS regDt             등록일자
                A.RS_STDT                     AS rsStdt            연구시작일자
                A.RS_ENDT                     AS rsEndt            연구종료일자
                A.RS_METHOD                   AS rsMethod          연구방법
                A.RS_PURPOSE                  AS rsPurpose         연구목적
                A.RS_FIELD                    AS rsField           연구분야
                A.RS_DIRECTOR                 AS rsDirector        연구책임자
                A.RS_MANAGER                  AS rsManager         연구담당자
                A.RS_PERSON                   AS rsPerson          연구대상인원
                A.RS_MAX_PERSON               AS rsMaxPerson       최대지원자수
                A.RS_STA_CLS                  AS rsStaCls          연구상태
                G.CD_NAME                     AS rsStaClsNm        연구상태명
                A.REP_DT                      AS repDt             결과보고일
                A.VISIT_CNT                   AS visitCnt          방문횟수
                A.DUPL_YN                     AS duplYn            중복참여여부
                A.RS_NAME                     AS rsName            연구명
                A.RS_PAY                      AS rsPay             연구비
                A.IRB_SUBMIS_YN               AS irbSubmisYn       IRB승인필요여부
                A.PROD_INFO                   AS prodInfo          제품정보
                A.PROD_NAME                   AS prodName          제품명
                A.DEL_YN                      AS delYn             삭제여부
                A.DATA_REGDT                  AS dataRegdt         등록수정일
                A.DATA_REGNT                  AS dataRegnt         등록수정자
                B.RS_NO                       AS rsNoSub           연구과제번호(B)(중복)
                B.SUB_NO                      AS subNo             피험자선정번호(B)
                B.PRICF_YN                    AS pricfYn           개인정보동의(B)
                B.RSICF_YN                    AS rsicfYn           연구참여동의(B)
                B.ICF_DT                      AS icfDt             동의서작성일자(B)
    -->
        
	<sql id="where_rs1000mRes">
           FROM    RS1010M A
                INNER JOIN CM4000M F
	        ON      F.CORP_CD       = A.CORP_CD
	        AND     F.CD_CLS        = 'CT2020'
	        AND     F.CLS_CAT       = '3'
	        AND     F.CD            = A.RS_NO2              
	                INNER JOIN CM4000M G
	        ON      G.CORP_CD       = A.CORP_CD
	        AND     G.CD_CLS        = 'CT2030'
	        AND     G.CLS_CAT       = '3'
	        AND     G.CD            = A.RS_NO3              
	                INNER JOIN CM4000M H
	        ON      H.CORP_CD       = A.CORP_CD
	        AND     H.CD_CLS        = 'CT2060'
	        AND     H.CLS_CAT       = '3'
	        AND     H.CD            = A.RS_NO4              
	                LEFT JOIN CT1030M I
	        ON      I.CORP_CD       = A.CORP_CD
	        AND     I.EMP_NO        = A.RS_DRT
	        		LEFT JOIN  CT1030M P
	        ON      P.CORP_CD       = A.CORP_CD
	        AND     P.EMP_NO        = A.RS_GRT
	                INNER JOIN CM4000M J
	        ON      J.CORP_CD       = A.CORP_CD
	        AND     J.CD_CLS        = 'CT2050'
	        AND     J.CLS_CAT       = '3'
	        AND     J.CD            = A.RSST_CLS            
	                LEFT JOIN CT2000M K
	        ON      K.CORP_CD       = A.CORP_CD
	        AND     K.VEND_NO       = A.VEND_NO             
	                LEFT OUTER JOIN CM4000M L
	        ON      L.CORP_CD       = A.CORP_CD
	        AND     L.CD_CLS        = 'CT2040'
	        AND     L.CLS_CAT       = '3'
	        AND     L.CD            = A.ITEM_CLS
	         INNER JOIN CT1020M M
	        ON      M.CORP_CD       = A.CORP_CD
	        AND     M.BRANCH_CD     = A.BRANCH_CD
	        <dynamic prepend="INNER JOIN RS1020M N">
	        	<isNotEmpty property="branchCd" prepend="ON">
	        		ON		N.CORP_CD		= A.CORP_CD
			        AND		N.RS_NO			= A.RS_NO
			        AND		N.BRANCH_CD		= #branchCd#
	        	</isNotEmpty>
			</dynamic>
			LEFT OUTER join (SELECT 
	    						DISTINCT a.RS_NO ,
	    						STUFF(( 
	        							SELECT 
	            						',' +BRANCH_NAME 
	        							FROM
	           							 RS1020M b 
								        WHERE
								        	b.CORP_CD = A.CORP_CD 
								            AND b.RS_NO = a.RS_NO
								            FOR XML PATH('') ),1,1,'') AS BRANCH  
								FROM 
								    RS1020M a) Y
			ON Y.RS_NO = A.RS_NO
			LEFT OUTER join (SELECT 
	    						DISTINCT a.RS_NO ,
	    						STUFF(( 
	        							SELECT 
	            						',' +EMP_NAME 
	        							FROM 
	           							 RS1030M b 
								        WHERE
								        	b.CORP_CD = A.CORP_CD 
								            AND b.RS_NO = a.RS_NO
								            FOR XML PATH('') ),1,1,'') AS STAFF 
								FROM 
								    RS1030M a) U
			ON U.RS_NO = A.RS_NO
	        <dynamic prepend="WHERE">
	        	<isNotEmpty property="corpCd" prepend="AND">
	        		(A.CORP_CD = #corpCd#)
	        	</isNotEmpty>
	        	<isNotEmpty property="searchCondition8" prepend="AND">
	        		(A.RS_CD = #searchCondition8#)
	        	</isNotEmpty>
				<isNotEmpty property="searchCondition4" prepend="">
					<isEqual property="searchCondition4" compareValue="1">
						<isNotEmpty property="searchCondition1" prepend="AND">
							<isNotEmpty property="searchCondition2" >
								CONVERT(CHAR(10), A.RS_STDT, 23) BETWEEN #searchCondition1# AND #searchCondition2#
							</isNotEmpty>
						</isNotEmpty>
					</isEqual>
					<isEqual property="searchCondition4" compareValue="2">
						<isNotEmpty property="searchCondition1" prepend="AND">
							<isNotEmpty property="searchCondition2" >
								CONVERT(CHAR(10), A.RS_ENDT, 23) BETWEEN #searchCondition1# AND #searchCondition2#
							</isNotEmpty>
						</isNotEmpty>
					</isEqual>
				</isNotEmpty>
				<isNotEmpty property="searchCondition5" prepend="AND">
	        		(A.RS_NO3 = #searchCondition5#)
	        	</isNotEmpty>
	        	<isNotEmpty property="searchCondition6" prepend="AND">
	        		(A.RSST_CLS = #searchCondition6#)
	        	</isNotEmpty>
				<isNotEmpty property="searchCondition3" prepend="AND">
		        	<!-- 전체 -->
		        	<isEqual property="searchCondition3" compareValue="1">
			        	<isNotEmpty property="searchWord" >
							(A.RS_NAME LIKE CONCAT ('%',#searchWord#,'%')
							OR A.RS_CD LIKE CONCAT ('%',#searchWord#,'%')
							OR K.VEND_NAME LIKE CONCAT ('%',#searchWord#,'%'))
						</isNotEmpty>
					</isEqual>
					<!-- 연구명칭 -->
		        	<isEqual property="searchCondition3" compareValue="2">
			        	<isNotEmpty property="searchWord" >
							(A.RS_NAME LIKE CONCAT ('%',#searchWord#,'%'))
						</isNotEmpty>
					</isEqual>
					<!-- 고객사명 -->
		        	<isEqual property="searchCondition3" compareValue="3">
			        	<isNotEmpty property="searchWord">
							(K.VEND_NAME LIKE CONCAT ('%',#searchWord#,'%'))
						</isNotEmpty>
					</isEqual>
					<!-- 연구코드 -->
		        	<isEqual property="searchCondition3" compareValue="4">
			        	<isNotEmpty property="searchWord">
							(A.RS_CD LIKE CONCAT ('%',#searchWord#,'%'))
						</isNotEmpty>
					</isEqual>
				</isNotEmpty>
			</dynamic>
	</sql>
	
	<!-- 시험결과추출 리스트 -->
	<select id="Ech0401DAO.selectEch0401List" parameterClass="searchVO"
		resultClass="egovMap">
		/* Ech0401DAO.selectEch0401List */
	<![CDATA[
		SELECT 
			Z.* FROM 
			(		
        	SELECT  
                A.CORP_CD                     AS corpCd            
              , A.RS_NO                       AS rsNo              
              , A.RS_NO1                      AS rsNo1             
              , A.RS_NO2                      AS rsNo2             
              , F.CD_NAME                     AS rsNo2Nm           
              , A.RS_NO3                      AS rsNo3             
              , G.CD_NAME                     AS rsNo3Nm           
              , A.RS_NO4                      AS rsNo4             
              , H.CD_NAME                     AS rsNo4Nm           
              , A.RS_NO5                      AS rsNo5             
              , A.RS_NO6                      AS rsNo6             
              , A.RS_NO7                      AS rsNo7             
              , A.RS_CD                       AS rsCd              
              , A.REG_DT                      AS regDt             
              , A.RS_DRT                      AS rsDrt             
              , I.EMP_NAME                    AS rsDrtNm            
              , A.RS_SCNT                     AS rsScnt            
              , A.RS_MSCNT                    AS rsMscnt           
              , A.RS_STDT                     AS rsStdt            
              , A.RS_ENDT                     AS rsEndt            
              , A.RSST_CLS                    AS rsstCls           
              , J.CD_NAME                     AS rsstClsNm         
              , A.REP_DT                      AS repDt             
              , A.VISIT_CNT                   AS visitCnt          
              , A.DUPL_YN                     AS duplYn            
              , A.RS_POS                      AS rsPos             
              , A.RS_NAME                     AS rsName            
              , A.RS_PPS                      AS rsPps             
              , A.RS_PTC                      AS rsPtc             
              , A.VEND_NO                     AS vendNo            
              , ISNULL(K.VEND_NAME, '')       AS vendName          
              , A.VMNG_NAME                   AS vmngName          
              , A.VMNGHP_NO                   AS vmnghpNo          
              , A.VMNG_EMAIL                  AS vmngEmail         
              , A.RS_PAY                      AS rsPay             
              , A.RS_PAYVT                    AS rsPayvt           
              , A.IRBSM_YN                    AS irbsmYn           
              , A.ITEM_CLS                    AS itemCls           
              , L.CD_NAME                     AS itemClsNm         
              , A.ITEM_NAME                   AS itemName          
              , A.BRANCH_CD                   AS branchCd
              , M.BRANCH_NAME                 AS branchName
              , A.DEL_YN                      AS delYn             
              , A.DATA_LOCK_YN                AS dataLockYn
              , A.ECRF_STATE                  AS ecrfState
              , A.DATA_REGDT                  AS dataRegdt         
              , A.DATA_REGNT                  AS dataRegnt
              , Y.BRANCH				      AS branch  
              , U.STAFF						  AS staff
              , A.RS_GRT					  AS rsGrt
              , P.EMP_NAME                    AS rsGrtNm
 			  , A.RS_TSTDT					  AS rsTstdt
			  , A.RS_TENDT					  AS rsTendt
			  , A.GEN_YN					  AS genYn
			  , A.AGE_ST					  AS ageSt
			  , A.AGE_EN					  AS ageEn
			  
			  , A.RSPL_DT					  AS rsplDt
              , A.RSIT_DT					  AS rsitDt
              , A.RSIRB_DT					  AS rsirbDt
              , A.RSR_STDT					  AS rsrStdt
              , A.RSR_ENDT					  AS rsrEndt
              , A.REP2_DT					  AS rep2Dt
              , (SELECT CONCAT('의뢰사:',Z1.vendCnt,' 연구차수:',Z1.rsCnt)   
				FROM (
				SELECT COUNT(CASE WHEN A1.VEND_NO='' THEN NULL ELSE A1.VEND_NO END) AS vendCnt
					, COUNT(A1.RS_NO) AS rsCnt 
				FROM RS1000M A1 
				WHERE A1.CORP_CD = A.CORP_CD
				AND A1.MRS_NO 	= A.RS_NO
				) Z1) AS rsInfor
				, (SELECT CONCAT('연구대상자:',Z2.rsScnt)   
				FROM (
				SELECT COUNT(A1.RSI_NO) AS rsScnt 
				FROM RS2010M A1 
				WHERE A1.CORP_CD = A.CORP_CD
				AND A1.RS_NO 	= A.RS_NO
				) Z2) AS rsInforScnt
              ]]>
		<include refid="where_rs1000mRes" />	
		<![CDATA[
			AND A.DEL_YN = 'N'
		]]>	
		
		<![CDATA[
				
			) Z 
			ORDER BY Z.rsNo DESC
				OFFSET #firstIndex# ROWS
				FETCH NEXT #recordCountPerPage# ROWS ONLY			
		]]>	
	</select>
	
	<!--  LIMIT #firstIndex#, #recordCountPerPage# -->

	<!-- 시험결과추출 엑셀 리스트 -->
	<select id="Ech0401DAO.selectEch0401Excel" parameterClass="searchVO" resultClass="egovMap">
	/* Ech0401DAO.selectEch0401Excel */
	<![CDATA[
		SELECT 
			Z.* FROM 
			(		
			SELECT  
		  		A.CORP_CD                     AS corpCd            
              , A.RS_NO                       AS rsNo              
              , A.BRANCH_CD                   AS branchCd          
              , F.BRANCH_NAME                 AS branchName        
              , A.RS_CD         	          AS rsCd            
              , A.REG_DT                      AS regDt             
              , A.RS_STDT                     AS rsStdt            
              , A.RS_ENDT                     AS rsEndt            
              , A.RS_PTC                      AS rsPtc          
              , A.RS_PPS    	              AS rsPps         
              , A.RS_NO3                      AS rsNo3
              , K.CD_NAME                     AS rsNo3Nm
              , A.RS_DRT                      AS rsDrt        
              , A.RS_SCNT                     AS rsScnt          
              , A.RS_MSCNT                    AS rsMscnt       
              , A.RSST_CLS                    AS rsstCls          
              , G.CD_NAME                     AS rsstClsNm        
              , A.REP_DT                      AS repDt             
              , A.VISIT_CNT                   AS visitCnt          
              , A.DUPL_YN                     AS duplYn            
              , A.RS_NAME                     AS rsName            
              , A.RS_PAY                      AS rsPay             
              , A.IRBSM_YN                    AS irbsmYn       
              , A.ITEM_CLS                    AS itemCls
              , U.CD_NAME 	                  AS itemClsNm
              , A.ITEM_NAME                   AS itemName
              , A.VEND_NO					  AS vendNo
              , V.VEND_NAME 				  AS vendName
              , A.DATA_LOCK_YN                AS dataLockYn
              , A.DEL_YN                      AS delYn   
              , (SELECT count(*) from CR4000M cm 
              WHERE cm.CORP_CD = A.CORP_CD 
              AND cm.RS_NO = A.RS_NO
              AND cm.PRICF_YN = 'Y' ) AS pricfCount
              , (SELECT count(*) from CR4000M cm 
              WHERE cm.CORP_CD = A.CORP_CD 
              AND cm.RS_NO = A.RS_NO
              AND cm.RSICF_YN = 'Y' ) AS rsicfCount
              , (SELECT count(distinct(rm.RSI_NO))
					FROM RS2000M rm
					INNER JOIN CT7000M cm2
					ON cm2.BOARD_NO = CONCAT(rm.CORP_CD,rm.RS_NO,rm.RSI_NO)
					AND cm2.FILE_KEY = 'survey'
					WHERE rm.CORP_CD = A.CORP_CD
					AND rm.RS_NO = A.RS_NO) AS svyCount
			  , (SELECT count(distinct(rm.RSI_NO))
					FROM RS2000M rm
					INNER JOIN CT7000M cm2
					ON cm2.BOARD_NO = CONCAT(rm.CORP_CD,rm.RS_NO,rm.RSI_NO)
					AND cm2.FILE_KEY = 'survey_1'
					WHERE rm.CORP_CD = A.CORP_CD
					AND rm.RS_NO = A.RS_NO) AS svy2Count		
              , (SELECT count(distinct(RSJ_NO)) 
					FROM CR3100M cm
					WHERE cm.CORP_CD = A.CORP_CD
					AND cm.RS_NO = A.RS_NO) AS skinCount
               , (SELECT count(distinct(RSJ_NO)) 
					FROM CR3240M cm
					WHERE cm.CORP_CD = A.CORP_CD
					AND cm.RS_NO = A.RS_NO) AS useCount
				]]>
		<include refid="where_rs1000mRes" />	
		<![CDATA[
			AND A.DEL_YN = 'N'
		]]>
		
		
		<![CDATA[
				
			) Z 
			ORDER BY Z.rsNo DESC
			
		]]>	
	</select>


	<!-- 시험결과추출 cnt -->
	<select id="Ech0401DAO.selectEch0401ListCnt" parameterClass="searchVO"
		resultClass="int">
		/*Ech0401DAO.selectEch0401ListCnt */
	<![CDATA[
		SELECT
			count(*) totalCnt
	]]>
		<include refid="where_rs1000mRes" />
		
		<![CDATA[
			AND A.DEL_YN = 'N'
		]]>
	</select>

	<!-- 연구과제 상세보기 -->
	<select id="Ech0401DAO.selectEch0401View" parameterClass="rs1000mVO"
		resultClass="rs1000mVO">
		/* Ech0401DAO.selectEch0401View */
	<![CDATA[
    				SELECT
     	               A.CORP_CD                     AS corpCd            
	             , A.RS_NO                       AS rsNo              
	             , A.BRANCH_CD                   AS branchCd          
	             , F.BRANCH_NAME                 AS branchNm        
	             , A.RS_CD         	          	 AS rsCd            
	             , A.REG_DT                      AS regDt             
	             , A.RS_STDT                     AS rsStdt            
	             , A.RS_ENDT                     AS rsEndt            
	             , A.RS_PTC                      AS rsPtc          
	             , A.RS_PPS    	                 AS rsPps         
	             , A.RS_NO3                      AS rsNo3
	             , K.CD_NAME                     AS rsNo3Nm
	             , A.RS_DRT                      AS rsDrt        
	             , A.RS_SCNT                     AS rsScnt          
	             , A.RS_MSCNT                    AS rsMscnt       
	             , A.RSST_CLS                    AS rsstCls          
	             , G.CD_NAME                     AS rsstClsNm        
	             , A.REP_DT                      AS repDt             
	             , A.VISIT_CNT                   AS visitCnt          
	             , A.DUPL_YN                     AS duplYn            
	             , A.RS_NAME                     AS rsName            
	             , A.RS_PAY                      AS rsPay             
	             , A.IRBSM_YN                    AS irbsmYn       
	             , A.ITEM_CLS                    AS itemCls
	             , U.CD_NAME 	                 AS itemClsNm
	             , A.ITEM_NAME                   AS itemName
	             , A.VEND_NO					 AS vendNo
	             , V.VEND_NAME 	 				 AS vendName
	             , A.VMNG_NAME					 AS vmngName
	             , A.DEL_YN                      AS delYn
	             , A.VMNGHP_NO					 AS vmnghpno
	             , A.VMNG_EMAIL					 AS vmngEmail
	             , A.DATA_LOCK_YN                AS dataLockYn
	             , A.ECRF_STATE                  AS ecrfState
	             , A.RS_NO7						 AS rsNo7
	             , (SELECT COUNT(*)
						FROM RS2010M M
						WHERE M.CORP_CD = A.CORP_CD
						AND M.RS_NO		= A.RS_NO
						AND M.DOUT_YN 	= 'Y'
					) AS doutCnt
	      		FROM    RS1010M A
	           	LEFT OUTER JOIN RS5000M H 
	        ON H.CORP_CD       = A.CORP_CD
	        AND H.RS_NO  = A.RS_NO 
	                INNER JOIN CT1020M F
	        ON      F.CORP_CD       = A.CORP_CD
	        AND     F.BRANCH_CD     = A.BRANCH_CD
	                INNER JOIN CM4000M G
	        ON      G.CORP_CD       = A.CORP_CD
	        AND     G.CD_CLS        = 'CT2050'
	        AND     G.CLS_CAT       = '3'
	        AND     G.CD            = A.RSST_CLS
			INNER JOIN CM4000M K
	        ON      K.CORP_CD       = A.CORP_CD
	        AND     K.CD_CLS        = 'CT2030'
	        AND     K.CLS_CAT       = '3'
	        AND     K.CD            = A.RS_NO3
	        LEFT OUTER JOIN CM4000M U
	        ON      U.CORP_CD       = A.CORP_CD
	        AND     U.CD_CLS        = 'CT2040'
	        AND     U.CLS_CAT       = '3'
	        AND     U.CD            = A.ITEM_CLS
	        LEFT OUTER JOIN CT2000M V
	        ON V.CORP_CD = A.CORP_CD 
	        AND V.VEND_NO = A.VEND_NO        
	        WHERE   A.CORP_CD       = #corpCd#              
	      		AND     A.RS_NO     = #rsNo# 
	      		AND A.DEL_YN = 'N'
	]]>
	</select>

	<sql id="where_rs2000mRes">
		FROM    RS2010M A
    		LEFT OUTER JOIN SB1000M B
        	ON      B.CORP_CD       = A.CORP_CD
        	AND     B.RSJ_NO     = A.RSJ_NO  
            LEFT OUTER JOIN CR4000M F
	        ON      F.CORP_CD       = A.CORP_CD
	        AND		F.RS_NO = A.RS_NO
	        AND		F.SUB_NO = A.SUB_NO
	    WHERE A.CORP_CD = #corpCd#
	    	AND A.RS_NO = #rsNo#
	    	AND A.CFM_YN = 'Y'
			AND A.RSI_NO3 IS NOT NULL    
	</sql>

	<!-- 피험자별 연구동의서관리 리스트 -->
	<select id="Ech0401DAO.selectEch0401ResList" parameterClass="searchVO"
		resultClass="egovMap">
		/* Ech0401DAO.selectEch0401ResList */
	<![CDATA[
	SELECT
		Z.* FROM 
		(
			SELECT 
				ROW_NUMBER() OVER(order by A.RS_NO DESC) rownum
              , A.CORP_CD                     AS corpCd            
              , A.RS_NO                       AS rsNo
              , A.SUB_NO					  AS subNo
              , A.RSI_NO					  AS rsiNo
              , A.RSJ_NAME 					  AS rsjName
              , B.BR_DT 					  AS brDt
              , CASE B.GEN_YN
              		WHEN '1' THEN '남' 
              		WHEN '2' THEN '여'
              	END 						  AS genYnNm
              , B.HP_NO					  	  AS hpNo 					 	
              , F.ICF_DT					  AS icfDt
              , CASE F.PRICF_YN
              		WHEN 'Y' THEN '제출' 
              		WHEN 'N' THEN '미제출'
              		ELSE '미등록'
              	END 						  AS pricfYnNm 
              , CASE F.RSICF_YN 
	           		WHEN 'Y' THEN '제출' 
	           		WHEN 'N' THEN '미제출'
	           		ELSE '미등록'
           		END 						  AS rsicfYnNm
              , F.PRICF_YN					  AS pricfYn
			  , F.RSICF_YN					  AS rsicfYn
			  , FLOOR(CAST(DATEDIFF(DAY,B.BR_DT,GETDATE()) AS INTEGER)/365.2422) AS age
			  , CONCAT(LOWER(A.CORP_CD),A.RS_NO,A.SUB_NO) AS mapKey
			  , CONCAT(LOWER(A.CORP_CD),A.RS_NO,A.RSI_NO) AS mapKey2
			  ]]>
		<include refid="where_rs2000mRes" />	<![CDATA[				
			) Z 
			ORDER   BY
	                Z.corpCd
             	  , z.rsNo
             	  , z.subNo			
		]]>	
	</select>
	
	<!-- 피험자별 연구동의서관리 cnt -->
	<select id="Ech0401DAO.selectEch0401ResListCnt" parameterClass="searchVO"
		resultClass="int">
		/*Ech0401DAO.selectEch0401ResListCnt */
	<![CDATA[
		SELECT
			count(*) totalCnt
	]]>
		<include refid="where_rs2000mRes" />
	</select>
	
	<!-- 피험자별 피부자극 리스트 -->
	<sql id="where_cr3100mVl">
		FROM RS2000M A
		LEFT OUTER JOIN CR3100M B 
		ON B.CORP_CD = A.CORP_CD 
		AND B.RS_NO = A.RS_NO 
		AND B.RSJ_NO = A.RSJ_NO
		INNER JOIN SB1000M C
		ON C.CORP_CD = A.CORP_CD 
		AND C.RSJ_NO = A.RSJ_NO
		INNER JOIN RS1040M D
		ON D.CORP_CD = A.CORP_CD 
		AND D.RS_NO = A.RS_NO
		AND D.MTL_NO = B.MTL_NO
		WHERE A.CORP_CD = #corpCd#
		AND A.RS_NO = #rsNo#
		AND A.CFM_YN = 'Y'
		AND A.RSI_NO3 IS NOT NULL
	</sql>

	<!-- 피험자별 피부자극 리스트 -->
	<select id="Ech0401DAO.selectEch0401VlList" parameterClass="searchVO"
		resultClass="egovMap">
		/* Ech0401DAO.selectEch0401VlList */
	<![CDATA[
	SELECT
		Z.* FROM 
		(
			SELECT
				ROW_NUMBER() OVER(order by A.RS_NO DESC) rownum
				, A.CORP_CD AS corpCd 
				, A.RS_NO AS rsNo
				, A.SUB_NO AS subNo 
				, A.RSJ_NO AS rsjNo
				, A.RSI_NO AS rsiNo 
				, C.RSJ_NAME AS rsjName
				, C.BR_DT AS brDt
				, FLOOR(CAST(DATEDIFF(DAY,C.BR_DT,GETDATE()) AS INTEGER)/365.2422) AS age
				, C.GEN_YN AS genYn
				, CASE C.GEN_YN 
					WHEN '1' THEN '남'
					WHEN '2' THEN '여'
				  END AS genYnNm		
				, C.HP_NO AS hpNo
				, CONCAT(C.RSJ_NAME,'(',CASE C.GEN_YN 
					WHEN '1' THEN '남'
					WHEN '2' THEN '여'
				  END,',',BR_DT,',',FLOOR(CAST(DATEDIFF(DAY,C.BR_DT,GETDATE()) AS INTEGER)/365.2422),'세)') AS rsjInfo 
				, CONVERT(DECIMAL(3,1), B.M30_VL1) AS m30Vl1
				, CONVERT(DECIMAL(3,1), B.M30_VL2) AS m30Vl2
				, CONVERT(DECIMAL(3,1), B.M30_VL3) AS m30Vl3
				, CONVERT(DECIMAL(3,1), B.H24_VL1) AS h24Vl1
				, CONVERT(DECIMAL(3,1), B.H24_VL2) AS h24Vl2
				, CONVERT(DECIMAL(3,1), B.H24_VL3) AS h24Vl3
				, D.MTL_DSP				AS mtlDsp 
				, D.MTL_NAME			AS mtlName 
				, D.LOT_NO				AS lotNo 
				, D.MTL_SHP				AS mtlShp 
				, D.REMK				AS remk
				, D.NC_YN				AS ncYn
				, A.FIRST_ST_NO 		AS firstStNo 
			  ]]>
		<include refid="where_cr3100mVl" />	<![CDATA[				
			) Z 
			ORDER   BY
	                Z.corpCd
             	  , z.rsNo
             	  , z.rsiNo			
		]]>	
	</select>
	
	<!-- 피험자별 피부자극목록 cnt -->
	<select id="Ech0401DAO.selectEch0401VlListCnt" parameterClass="searchVO"
		resultClass="int">
		/*Ech0401DAO.selectEch0401VlListCnt */
	<![CDATA[
		SELECT
			count(*) totalCnt
	]]>
		<include refid="where_cr3100mVl" />
	</select>

	<!-- 리포트 리스트 -->
	<sql id="where_rs5020mRpt">
		FROM RS5020M A
		INNER JOIN CT7000M B
		ON B.FILE_KEY = A.RPT_CLS 
		AND B.BOARD_NO = A.RS_NO
		WHERE A.CORP_CD = #corpCd#
		AND A.RS_NO = #rsNo#
	</sql>

	<!-- 리포트 리스트 -->
	<select id="Ech0401DAO.selectEch0401RptList" parameterClass="searchVO" resultClass="egovMap">
		/* Ech0401DAO.selectEch0401RptList */
	<![CDATA[
	SELECT
		Z.* FROM 
		(
			SELECT
				ROW_NUMBER() OVER(order by A.RPT_CLS DESC) rownum
				, A.CORP_CD 			AS corpCd 
				, A.RS_NO 				AS rsNo
				, A.RPT_DT				AS rptDt
				, A.RPT_CLS				AS rptCls
				, CASE WHEN A.RPT_CLS = 'korRpt'     THEN '국문보고서' 
                       WHEN A.RPT_CLS = 'engRpt'     THEN '영문보고서'
                       WHEN A.RPT_CLS = 'draftRpt'   THEN '초안보고서'
                       WHEN A.RPT_CLS = 'finalRpt'   THEN '최종보고서'
                       WHEN A.RPT_CLS = 'summary'    THEN '최종요약문'
                       WHEN A.RPT_CLS = 'rsImage'    THEN '연구이미지'
                       WHEN A.RPT_CLS = 'rsPlan'     THEN '연구계획서'
                       WHEN A.RPT_CLS = 'gita1'      THEN '기타1'
                       WHEN A.RPT_CLS = 'gita2'      THEN '기타2'
                       WHEN A.RPT_CLS = 'irbplan'    THEN 'IRB신규계획서'
                       WHEN A.RPT_CLS = 'irbresult'  THEN 'IRB결과보고서' 
                       WHEN A.RPT_CLS = 'irbcfm'     THEN 'IRB승인통보서'
                       WHEN A.RPT_CLS = 'irbrj'      THEN 'IRB보완통보서'    
                   END 					AS rptClsNm
                , B.ATTACH_NO			AS attachNo
                , B.BOARD_TYPE			AS boardType     
			  ]]>
		<include refid="where_rs5020mRpt" />	<![CDATA[				
			) Z 
			ORDER   BY
	                Z.corpCd
             	  , z.rptCls			
		]]>	
	</select>
	
	<!-- 리포트 목록 cnt -->
	<select id="Ech0401DAO.selectEch0401RptListCnt" parameterClass="searchVO"
		resultClass="int">
		/*Ech0401DAO.selectEch0401RptListCnt */
	<![CDATA[
		SELECT
			count(*) totalCnt
	]]>
		<include refid="where_rs5020mRpt" />
	</select>

	<!-- 연구대상자 피부자극결과 일괄생성 대상 선별 -->
	<select id="Ech0401DAO.selectEch0401RsiCodeBat" parameterClass="egovMap" resultClass="cr3100mVO">
	/* Ech0401DAO.selectEch0401RsiCodeBat */
	<![CDATA[
		SELECT  
		 	A.CORP_CD				AS corpCd	
			, A.RS_NO				AS rsNo
			, A.RSJ_NO			AS rsjNo
			, A.MTL_DSP			AS mtlDsp
			, A.BRSJ_NO			AS brsjNo
			, A.M30_DT			AS m30Dt
			, A.M30_VL1			AS m30Vl1
			, A.M30_VL2			AS m30Vl2
			, A.M30_VL3			AS m30Vl3
			, A.H24_DT			AS h24Dt
			, A.H24_VL1			AS h24Vl1
			, A.H24_VL2			AS h24Vl2
			, A.H24_VL3			AS h24Vl3
			, A.DATA_REGDT		AS dataRegdt
			, A.DATA_REGNT		AS dataRegnt
			, B.NC_YN			AS ncYn 	
		FROM  CR3100M A
		INNER JOIN RS1040M B
		ON B.CORP_CD 	= A.CORP_CD 
		AND B.RS_NO 	= A.RS_NO
		AND B.MTL_DSP 	= A.MTL_DSP
		INNER JOIN RS2000M C 
		ON C.CORP_CD 	= A.CORP_CD 
		AND C.RSI_NO 	= A.BRSJ_NO
		AND C.RS_NO 	= A.RS_NO
		INNER JOIN RS2010M D 
		ON D.CORP_CD 	= A.CORP_CD 
		AND D.RSI_NO 	= C.MRSI_NO 
		AND D.DOUT_YN 	= 'N'
		AND D.RS_NO		= #rsNo#
		WHERE A.CORP_CD	= #corpCd#
		AND A.MRS_NO 	= #rsNo#
		ORDER BY A.CORP_CD, A.RS_NO, A.BRSJ_NO, B.NC_YN DESC, A.MTL_DSP 
			]]>	
	</select>

	<insert id="Ech0401DAO.insertEch0401AjaxSaveRst" parameterClass="cr3150mVO">
	/* Ech0401DAO.insertEch0401AjaxSaveRst */
	<![CDATA[
		    INSERT  CR3150M(
   		 	CORP_CD	
			, RS_NO
			, RSI_NO
			, PCH_CLS
			, MTL_DSP
			, PCH_RST
			, CLS
			, DATA_REGDT
			, DATA_REGNT
			, MRS_NO                  
        ) VALUES(
   		 	#corpCd#	
			, #rsNo#
			, #rsiNo#
			, #pchCls#
			, #mtlDsp#
			, #pchRst#
			, #cls#
			, GETDATE()
			, #dataRegnt#
			, #mrsNo#
        )
	]]>
	
	</insert>
	
	
	<!-- 연구대상자 피부자극결과 일괄생성 대상 선별  음성대조군물질만 선별 -->
	<select id="Ech0401DAO.selectEch0401RsiCodeBat2" parameterClass="egovMap" resultClass="cr3100mVO">
	/* Ech0401DAO.selectEch0401RsiCodeBat2 */
	<![CDATA[
		SELECT  
		 	A.CORP_CD				AS corpCd	
			, A.RS_NO				AS rsNo
			, A.RSJ_NO			AS rsjNo
			, A.MTL_DSP			AS mtlDsp
			, A.BRSJ_NO			AS brsjNo
			, A.M30_DT			AS m30Dt
			, A.M30_VL1			AS m30Vl1
			, A.M30_VL2			AS m30Vl2
			, A.M30_VL3			AS m30Vl3
			, A.H24_DT			AS h24Dt
			, A.H24_VL1			AS h24Vl1
			, A.H24_VL2			AS h24Vl2
			, A.H24_VL3			AS h24Vl3
			, A.DATA_REGDT		AS dataRegdt
			, A.DATA_REGNT		AS dataRegnt 	
		FROM  CR3100M A
		INNER JOIN RS1040M B
		ON B.CORP_CD 	= A.CORP_CD 
		AND B.RS_NO 	= A.RS_NO
		AND B.MTL_DSP 	= A.MTL_DSP 
		AND B.NC_YN 	= 'Y'
		WHERE A.CORP_CD	= #corpCd#
		AND A.MRS_NO 	= #rsNo#
		AND A.BRSJ_NO 	= #rsiNo#
		ORDER BY A.CORP_CD, A.RS_NO, B.NC_YN DESC, A.MTL_DSP
		
			]]>	
	</select>
	
	<!-- 연구대상자 피부자극결과 일괄생성 데이터 삭제 -->
	<delete id="Ech0401DAO.deleteEch0401Rst" parameterClass="egovMap">
		/* Ech0401DAO.deleteEch0401Rst */
	<![CDATA[
		DELETE
        FROM
                CR3150M
        WHERE
                CORP_CD		= #corpCd#              
        AND     MRS_NO		= #rsNo#    
	]]>
	</delete>
	
	<!-- 연구대상자 특성결과 일괄생성 대상 선별 -->
	<select id="Ech0401DAO.selectEch0401SkinPropBat" parameterClass="egovMap" resultClass="cr3010mVO">
	/* Ech0401DAO.selectEch0401SkinPropBat */
	<![CDATA[
		SELECT 
			A.CORP_CD		AS corpCd
			, A.RS_NO		AS rsNo 
			, A.RSI_NO		AS rsiNo 
			, A.TEMP_NO		AS tempNo 
			, A.QUES_NO		AS quesNo 
			, A.ANSW_CON	AS answCon 
			, A.ANSW_NUM	AS answNum 
		FROM CR3010M A
		INNER JOIN RS2010M C 
		ON C.CORP_CD 	= A.CORP_CD 
		AND C.RSI_NO 	= A.RSI_NO
		AND C.DOUT_YN 	= 'N'
		AND C.RS_NO		= A.RS_NO
		INNER JOIN CR2020M B 
		ON B.CORP_CD	= A.CORP_CD 
		AND B.TEMP_NO 	= A.TEMP_NO 
		AND B.TEMP_TYPE = '1030'
		INNER JOIN CR2050M D 
		ON D.CORP_CD 	= A.CORP_CD 
		AND D.TEMP_NO 	= A.TEMP_NO 
		AND D.QUES_NO 	= A.QUES_NO
		WHERE A.CORP_CD = #corpCd#
		AND A.RS_NO 	= #rsNo#
		ORDER BY A.RSI_NO, A.QUES_NO  
			]]>	
	</select>
	
	<!-- 연구대상자 특성결과 일괄생성 데이터 삭제 -->
	<delete id="Ech0401DAO.deleteEch0401SkinProp" parameterClass="egovMap">
		/* Ech0401DAO.deleteEch0401SkinProp */
	<![CDATA[
		DELETE
        FROM
                CR3160M
        WHERE
                CORP_CD		= #corpCd#              
        AND     RS_NO		= #rsNo#    
	]]>
	</delete>
	
	<!-- 연구대상자 특성결과 일괄생성 -->
	<insert id="Ech0401DAO.insertEch0401AjaxSaveSkinProp" parameterClass="cr3160mVO">
	/* Ech0401DAO.insertEch0401AjaxSaveSkinProp */
	<![CDATA[
		    INSERT  CR3160M(
   		 	CORP_CD	
			, RS_NO
			, RSI_NO
			, VAR1
			, VAR2
			, VAR3
			, VAR4
			, VAR5
			, VAR6
			, VAR7
			, VAR8
			, VAR9
			, VAR10
			, VAR11
			, VAR12
			, VAR13
			, VAR14
			, VAR15
			, DATA_REGDT
			, DATA_REGNT                  
        ) VALUES(
   		 	#corpCd#	
			, #rsNo#
			, #rsiNo#
			, #var1#
			, #var2#
			, #var3#
			, #var4#
			, #var5#
			, #var6#
			, #var7#
			, #var8#
			, #var9#
			, #var10#
			, #var11#
			, #var12#
			, #var13#
			, #var14#
			, #var15#
			, GETDATE()
			, #dataRegnt#
        )
	]]>
	
	</insert>
	
	<!-- 연구대상자 특성표제 일괄생성 대상 선별 -->
	<select id="Ech0401DAO.selectEch0401SkinPropBatTl" parameterClass="egovMap" resultClass="cr3010mVO">
	/* Ech0401DAO.selectEch0401SkinPropBatTl */
	<![CDATA[
		SELECT 
			A.CORP_CD		AS corpCd 
			, A.RS_NO		AS rsNo 
			, C.QUES_NO		AS quesNo 
			, C.QUES_ABB	AS quesAbb	 
		FROM CR2110M A
		INNER JOIN CR2020M B 
		ON B.CORP_CD	= A.CORP_CD 
		AND B.TEMP_NO 	= A.TEMP_NO 
		AND B.TEMP_TYPE = '1030'
		INNER JOIN CR2050M C
		ON C.CORP_CD	= A.CORP_CD 
		AND C.TEMP_NO 	= A.TEMP_NO 
		WHERE A.CORP_CD = #corpCd#
		AND A.RS_NO 	= #rsNo#
		ORDER BY C.QUES_NO  
			]]>	
	</select>
	
	<!-- 연구대상자 특성결과 일괄생성 -->
	<insert id="Ech0401DAO.insertEch0401AjaxSaveSkinPropTl" parameterClass="cr3170mVO">
	/* Ech0401DAO.insertEch0401AjaxSaveSkinPropTl */
	<![CDATA[
		    INSERT  CR3170M(
   		 	CORP_CD	
			, RS_NO
			, VAR1
			, VAR2
			, VAR3
			, VAR4
			, VAR5
			, VAR6
			, VAR7
			, VAR8
			, VAR9
			, VAR10
			, VAR11
			, VAR12
			, VAR13
			, VAR14
			, VAR15
			, DATA_REGDT
			, DATA_REGNT                  
        ) VALUES(
   		 	#corpCd#	
			, #rsNo#
			, #var1#
			, #var2#
			, #var3#
			, #var4#
			, #var5#
			, #var6#
			, #var7#
			, #var8#
			, #var9#
			, #var10#
			, #var11#
			, #var12#
			, #var13#
			, #var14#
			, #var15#
			, GETDATE()
			, #dataRegnt#
        )
	]]>
	
	</insert>
	
	<!-- 연구대상자 특성표제 일괄생성 데이터 삭제 -->
	<delete id="Ech0401DAO.deleteEch0401SkinPropTl" parameterClass="egovMap">
		/* Ech0401DAO.deleteEch0401SkinPropTl */
	<![CDATA[
		DELETE
        FROM
                CR3170M
        WHERE
                CORP_CD		= #corpCd#              
        AND     RS_NO		= #rsNo#    
	]]>
	</delete>
	
	
	<!-- 피험자별 연구동의서관리 리스트 -->
	<select id="Ech0401DAO.selectEch0401ListIcf" parameterClass="searchVO"
		resultClass="egovMap">
		/* Ech0401DAO.selectEch0401ListIcf */
	<![CDATA[
	SELECT
		Z.* FROM 
		(
			SELECT 
				ROW_NUMBER() OVER(order by A.RS_NO DESC) rownum
              , A.CORP_CD                     AS corpCd            
              , A.RS_NO                       AS rsNo
              , A.SUB_NO					  AS subNo
              , A.RSI_NO					  AS rsiNo
              , B.RSJ_NAME 					  AS rsjName
              , B.BR_DT 					  AS brDt
              , CASE B.GEN_YN
              		WHEN '1' THEN '남' 
              		WHEN '2' THEN '여'
              	END 						  AS genYnNm
              , B.HP_NO					  	  AS hpNo 					 	
              , F.ICF_DT					  AS icfDt
              , CASE F.PRICF_YN
              		WHEN 'Y' THEN '제출' 
              		WHEN 'N' THEN '미제출'
              		ELSE '미등록'
              	END 						  AS pricfYnNm 
              , CASE F.RSICF_YN 
	           		WHEN 'Y' THEN '제출' 
	           		WHEN 'N' THEN '미제출'
	           		ELSE '미등록'
           		END 						  AS rsicfYnNm
              , F.PRICF_YN					  AS pricfYn
			  , F.RSICF_YN					  AS rsicfYn
			  , FLOOR(CAST(DATEDIFF(DAY,B.BR_DT,GETDATE()) AS INTEGER)/365.2422) AS age
			  , CONCAT(LOWER(A.CORP_CD),A.RS_NO,A.SUB_NO) AS mapKey
			  , CONCAT(LOWER(A.CORP_CD),A.RS_NO,A.RSI_NO) AS mapKey2
			  ]]>
		<include refid="where_rs2000mRes" />	<![CDATA[				
			) Z 
			ORDER   BY
	                Z.corpCd
             	  , z.rsNo
             	  , z.subNo			
		]]>	
	</select>
	
	<!-- 연구대상자 특성 엑셀 리스트 -->
	<select id="Ech0401DAO.selectEch0401ExcelSkinProp" parameterClass="searchVO" resultClass="egovMap">
	/* Ech0401DAO.selectEch0401ExcelSkinProp */
	<![CDATA[
		SELECT 
			Z.* FROM 
			(		
			SELECT  
				A.CORP_CD                     AS corpCd            
			  , A.RS_NO                       AS rsNo
			  , A.RSI_NO                      AS rsiNo
			  , C.GEN_YN 					  AS genYn
			  , CASE C.GEN_YN
			  		WHEN '1' THEN 'M' 
			  		WHEN '2' THEN 'F'
			  	END 						  AS genYnNm
			  , C.AGE 						  AS age
			  , CONCAT(C.AGE,'세')			  AS ageNm	
			  , A.VAR1		                  AS var1
			  , A.VAR2		                  AS var2
			  , A.VAR3		                  AS var3
			  , A.VAR4		                  AS var4
			  , A.VAR5		                  AS var5
			  , A.VAR6		                  AS var6
			  , A.VAR7		                  AS var7
			  , A.VAR8		                  AS var8
			  , A.VAR9		                  AS var9
			  , A.VAR10		                  AS var10
			  , A.VAR11		                  AS var11
			  , A.VAR12		                  AS var12
			  , A.VAR13		                  AS var13
			  , A.VAR14		                  AS var14
			  , A.VAR15		                  AS var15
			  , B.RS_CD						  AS rsCd
			  , B.RS_NAME					  AS rsName
			  , C.RSI_NO3					  AS rsiNo3
			FROM CR3160M A
			INNER JOIN RS1010M B
			ON B.CORP_CD		= A.CORP_CD
			AND B.RS_NO			= A.RS_NO
			INNER JOIN RS2010M C 
			ON C.CORP_CD 		= A.CORP_CD 
			AND C.RS_NO 		= A.RS_NO 
			AND C.RSI_NO 		= A.RSI_NO			 
			WHERE A.CORP_CD		= #corpCd#
			AND A.RS_NO			= #rsNo#
            ) z
        ORDER BY z.rsiNo3   
	]]>
	</select>
	
	<!-- 연구대상자 사용성설문 일괄생성 대상 선별 중도탈락자 제외 -->
	<select id="Ech0401DAO.selectEch0401CrfSvyBat11" parameterClass="egovMap" resultClass="cr3010mVO">
	/* Ech0401DAO.selectEch0401CrfSvyBat11 */
	<![CDATA[
		SELECT 
			DISTINCT A.TEMP_NO  AS tempNo 
		FROM CR3010M A
		INNER JOIN RS2010M C 
		ON C.CORP_CD 	= A.CORP_CD 
		AND C.RSI_NO 	= A.RSI_NO
		AND C.DOUT_YN 	= 'N'
		INNER JOIN CR2020M B 
		ON B.CORP_CD	= A.CORP_CD 
		AND B.TEMP_NO 	= A.TEMP_NO 
		AND B.TEMP_TYPE = '1010'
		AND A.RS_NO 	= #rsNo#
			]]>	
	</select>
	
	<!-- 연구대상자 사용성설문 일괄생성 대상 선별 중도탈락자 제외 -->
	<select id="Ech0401DAO.selectEch0401CrfSvyBat1" parameterClass="egovMap" resultClass="cr3010mVO">
	/* Ech0401DAO.selectEch0401CrfSvyBat1 */
	<![CDATA[
		SELECT 
			A.CORP_CD		AS corpCd
			, A.RS_NO		AS rsNo 
			, A.RSI_NO		AS rsiNo 
			, A.TEMP_NO		AS tempNo 
			, A.QUES_NO		AS quesNo 
			, A.ANSW_CON	AS answCon 
			, A.ANSW_NUM	AS answNum 
		FROM CR3010M A
		INNER JOIN RS2010M C 
		ON C.CORP_CD 	= A.CORP_CD 
		AND C.RSI_NO 	= A.RSI_NO
		AND C.DOUT_YN 	= 'N'
		AND C.RS_NO		= A.RS_NO
		INNER JOIN CR2020M B 
		ON B.CORP_CD	= A.CORP_CD 
		AND B.TEMP_NO 	= A.TEMP_NO 
		AND B.TEMP_TYPE = '1010'
		INNER JOIN CR2050M D 
		ON D.CORP_CD 	= A.CORP_CD 
		AND D.TEMP_NO 	= A.TEMP_NO 
		AND D.QUES_NO 	= A.QUES_NO
		WHERE A.CORP_CD	= #corpCd#
		AND A.RS_NO 	= #rsNo#
		AND A.TEMP_NO 	= #tempNo#
		ORDER BY A.RSI_NO, A.QUES_NO
			]]>	
	</select>
	
	<!-- 연구대상자 사용성설문 일괄생성 데이터 삭제 -->
	<delete id="Ech0401DAO.deleteEch0401CrfSvy1" parameterClass="egovMap">
		/* Ech0401DAO.deleteEch0401CrfSvy1 */
	<![CDATA[
		DELETE
        FROM
                CR3180M
        WHERE
                CORP_CD		= #corpCd#              
        AND     RS_NO		= #rsNo#
        AND		TEMP_NO		= #tempNo#
	]]>
	</delete>
	
	<!-- 연구대상자 사용성설문 표제 일괄생성 데이터 삭제 -->
	<delete id="Ech0401DAO.deleteEch0401CrfSvyTl1" parameterClass="egovMap">
		/* Ech0401DAO.deleteEch0401CrfSvyTl1 */
	<![CDATA[
		DELETE
        FROM
                CR3190M
        WHERE
                CORP_CD		= #corpCd#              
        AND     RS_NO		= #rsNo#        
        AND		TEMP_NO		= #tempNo#
	]]>
	</delete>
	
	<!-- 연구대상자 사용성설문표제 일괄생성 대상 선별 -->
	<select id="Ech0401DAO.selectEch0401CrfSvyBatTl1" parameterClass="egovMap" resultClass="cr3010mVO">
	/* Ech0401DAO.selectEch0401CrfSvyBatTl1 */
	<![CDATA[			 
		SELECT 
			A.CORP_CD		AS corpCd 
			, A.RS_NO		AS rsNo 
			, C.QUES_NO		AS quesNo 
			, C.QUES_ABB	AS quesAbb	 
		FROM CR2110M A
		INNER JOIN CR2020M B 
		ON B.CORP_CD	= A.CORP_CD 
		AND B.TEMP_NO 	= A.TEMP_NO 
		AND B.TEMP_TYPE = '1010'		
		INNER JOIN CR2050M C
		ON C.CORP_CD 	= A.CORP_CD 
		AND C.TEMP_NO 	= A.TEMP_NO 
		WHERE A.CORP_CD = #corpCd#
		AND A.RS_NO 	= #rsNo#
		AND A.TEMP_NO 	= #tempNo#
		ORDER BY C.QUES_NO
	]]>	
	</select>
	
	<!-- 연구대상자 사용성설문 결과 표제 일괄생성 -->
	<insert id="Ech0401DAO.insertEch0401AjaxSaveCrfSvyTl1" parameterClass="cr3190mVO">
	/* Ech0401DAO.insertEch0401AjaxSaveCrfSvyTl1 */
	<![CDATA[
		    INSERT  CR3190M(
   		 	CORP_CD	
			, RS_NO
			, TERM_TYPE
			, TEMP_NO
			, VAR1
			, VAR2
			, VAR3
			, VAR4
			, VAR5
			, VAR6
			, VAR7
			, VAR8
			, VAR9
			, VAR10
			, DATA_REGDT
			, DATA_REGNT                  
        ) VALUES(
   		 	#corpCd#	
			, #rsNo#
			, #termType#
			, #tempNo#
			, #var1#
			, #var2#
			, #var3#
			, #var4#
			, #var5#
			, #var6#
			, #var7#
			, #var8#
			, #var9#
			, #var10#
			, GETDATE()
			, #dataRegnt#
        )
	]]>
	
	</insert>
	
	<!-- 연구대상자 사용성설문 결과 일괄생성 -->
	<insert id="Ech0401DAO.insertEch0401AjaxSaveCrfSvy1" parameterClass="cr3180mVO">
	/* Ech0401DAO.insertEch0401AjaxSaveCrfSvy1 */
	<![CDATA[
		    INSERT  CR3180M(
   		 	CORP_CD	
			, RS_NO
			, TERM_TYPE
			, TEMP_NO
			, RSI_NO
			, VAR1
			, VAR2
			, VAR3
			, VAR4
			, VAR5
			, VAR6
			, VAR7
			, VAR8
			, VAR9
			, VAR10
			, DATA_REGDT
			, DATA_REGNT                  
        ) VALUES(
   		 	#corpCd#	
			, #rsNo#
			, #termType#
			, #tempNo#
			, #rsiNo#
			, #var1#
			, #var2#
			, #var3#
			, #var4#
			, #var5#
			, #var6#
			, #var7#
			, #var8#
			, #var9#
			, #var10#
			, GETDATE()
			, #dataRegnt#
        )
	]]>
	
	</insert>
	
	<!-- 연구대상자 사용성설문 엑셀 리스트 -->
	<select id="Ech0401DAO.selectEch0401ExcelCrfSvy1" parameterClass="searchVO" resultClass="egovMap">
	/* Ech0401DAO.selectEch0401ExcelCrfSvy1 */
	<![CDATA[
		SELECT 
			Z.* FROM 
			(		
			SELECT  
		  		A.CORP_CD                     AS corpCd            
              , A.RS_NO                       AS rsNo
              , CASE A.TERM_TYPE
              		WHEN '1' THEN '사전' 
              		WHEN '2' THEN '사후'
              	END 						  AS termTypeNm2
              , C.TITLE						  AS termTypeNm	
              , A.TERM_TYPE                   AS termType
              , A.RSI_NO                      AS rsiNo              
              , A.VAR1		                  AS var1
              , A.VAR2		                  AS var2
              , A.VAR3		                  AS var3
              , A.VAR4		                  AS var4
              , A.VAR5		                  AS var5
              , A.VAR6		                  AS var6
              , A.VAR7		                  AS var7
              , A.VAR8		                  AS var8
              , A.VAR9		                  AS var9
              , A.VAR10		                  AS var10
              , A.VAR11		                  AS var11
              , A.VAR12		                  AS var12
              , A.VAR13		                  AS var13
              , A.VAR14		                  AS var14
              , A.VAR15		                  AS var15
              , B.RS_CD						  AS rsCd
              , B.RS_NAME					  AS rsName
              , D.RSI_NO3					  AS rsiNo3 
        	FROM CR3180M A
        	INNER JOIN RS1010M B
            ON B.CORP_CD 		= A.CORP_CD
            AND B.RS_NO			= A.RS_NO
            INNER JOIN CR2110M C 
            ON C.CORP_CD 		= A.CORP_CD
            AND C.RS_NO 		= A.RS_NO
            AND C.TEMP_NO 		= A.TEMP_NO
            INNER JOIN RS2010M D 
            ON D.CORP_CD		= A.CORP_CD
            AND D.RS_NO 		= A.RS_NO
            AND D.RSI_NO 		= A.RSI_NO
            WHERE A.CORP_CD		= #corpCd#
            AND A.RS_NO			= #rsNo#
            ) z
        ORDER BY z.termTypeNm, z.rsiNo3     
	]]>
	</select>
	
	<!-- 연구대상자 효능설문 일괄생성 대상 선별 중도탈락자 제외-->
	<select id="Ech0401DAO.selectEch0401CrfSvyBat21" parameterClass="egovMap" resultClass="cr3010mVO">
	/* Ech0401DAO.selectEch0401CrfSvyBat21 */
	<![CDATA[
		SELECT 
			DISTINCT A.TEMP_NO AS tempNo  
		FROM CR3010M A
		INNER JOIN RS2010M C 
		ON C.CORP_CD 	= A.CORP_CD 
		AND C.RSI_NO 	= A.RSI_NO
		AND C.DOUT_YN 	= 'N'
		INNER JOIN CR2020M B 
		ON B.CORP_CD	= A.CORP_CD 
		AND B.TEMP_NO 	= A.TEMP_NO 
		AND B.TEMP_TYPE = '1020'
		AND A.RS_NO 	= #rsNo#  
			]]>	
	</select>
	
	<!-- 연구대상자 효능설문 일괄생성 대상 선별 중도탈락자 제외-->
	<select id="Ech0401DAO.selectEch0401CrfSvyBat2" parameterClass="egovMap" resultClass="cr3010mVO">
	/* Ech0401DAO.selectEch0401CrfSvyBat2 */
	<![CDATA[
		SELECT 
			A.CORP_CD		AS corpCd
			, A.RS_NO		AS rsNo 
			, A.RSI_NO		AS rsiNo 
			, A.TEMP_NO		AS tempNo 
			, A.QUES_NO		AS quesNo 
			, A.ANSW_CON	AS answCon 
			, A.ANSW_NUM	AS answNum 
		FROM CR3010M A
		INNER JOIN RS2010M C 
		ON C.CORP_CD 	= A.CORP_CD 
		AND C.RSI_NO 	= A.RSI_NO
		AND C.DOUT_YN 	= 'N'
		AND C.RS_NO		= A.RS_NO
		INNER JOIN CR2020M B 
		ON B.CORP_CD	= A.CORP_CD 
		AND B.TEMP_NO 	= A.TEMP_NO 
		AND B.TEMP_TYPE = '1020'
		INNER JOIN CR2050M D 
		ON D.CORP_CD 	= A.CORP_CD 
		AND D.TEMP_NO 	= A.TEMP_NO 
		AND D.QUES_NO 	= A.QUES_NO
		WHERE A.CORP_CD	= #corpCd#
		AND A.RS_NO 	= #rsNo#
		AND A.TEMP_NO 	= #tempNo#
		ORDER BY A.RSI_NO, A.QUES_NO  
			]]>	
	</select>
	
	
	<!-- 연구대상자 효능설문 일괄생성 데이터 삭제 -->
	<delete id="Ech0401DAO.deleteEch0401CrfSvy2" parameterClass="egovMap">
		/* Ech0401DAO.deleteEch0401CrfSvy2 */
	<![CDATA[
		DELETE
        FROM
                CR3280M
        WHERE
                CORP_CD		= #corpCd#              
        AND     RS_NO		= #rsNo# 
        AND		TEMP_NO		= #tempNo#
	]]>
	</delete>
	
	<!-- 연구대상자 효능설문 표제 일괄생성 데이터 삭제 -->
	<delete id="Ech0401DAO.deleteEch0401CrfSvyTl2" parameterClass="egovMap">
		/* Ech0401DAO.deleteEch0401CrfSvyTl2 */
	<![CDATA[
		DELETE
        FROM
                CR3290M
        WHERE
                CORP_CD		= #corpCd#              
        AND     RS_NO		= #rsNo#
        AND		TEMP_NO		= #tempNo#    
	]]>
	</delete>
	
	<!-- 연구대상자 효능설문표제 일괄생성 대상 선별  템플릿번호 추가 21.8.4-->
	<select id="Ech0401DAO.selectEch0401CrfSvyBatTl2" parameterClass="egovMap" resultClass="cr3010mVO">
	/* Ech0401DAO.selectEch0401CrfSvyBatTl2 */
	<![CDATA[
		SELECT 
			A.CORP_CD		AS corpCd 
			, A.RS_NO		AS rsNo
			, A.TEMP_NO		AS tempNo 
			, C.QUES_NO		AS quesNo 
			, C.QUES_ABB	AS quesAbb	 
		FROM CR2110M A
		INNER JOIN CR2020M B 
		ON B.CORP_CD	= A.CORP_CD 
		AND B.TEMP_NO 	= A.TEMP_NO 
		AND B.TEMP_TYPE = '1020'
		INNER JOIN CR2050M C
		ON C.CORP_CD	= A.CORP_CD 
		AND C.TEMP_NO 	= A.TEMP_NO 
		WHERE A.CORP_CD = #corpCd#
		AND A.RS_NO 	= #rsNo#
		AND A.TEMP_NO 	= #tempNo#
		ORDER BY C.QUES_NO  
			]]>	
	</select>
	
	<!-- 연구대상자 효능설문 결과 표제 일괄생성 템플릿번호 추가 21.8.4-->
	<insert id="Ech0401DAO.insertEch0401AjaxSaveCrfSvyTl2" parameterClass="cr3290mVO">
	/* Ech0401DAO.insertEch0401AjaxSaveCrfSvyTl2 */
	<![CDATA[
		    INSERT  CR3290M(
   		 	CORP_CD	
			, RS_NO
			, TERM_TYPE
			, TEMP_NO
			, VAR1
			, VAR2
			, VAR3
			, VAR4
			, VAR5
			, VAR6
			, VAR7
			, VAR8
			, VAR9
			, VAR10
			, DATA_REGDT
			, DATA_REGNT                  
        ) VALUES(
   		 	#corpCd#	
			, #rsNo#
			, #termType#
			, #tempNo#
			, #var1#
			, #var2#
			, #var3#
			, #var4#
			, #var5#
			, #var6#
			, #var7#
			, #var8#
			, #var9#
			, #var10#
			, GETDATE()
			, #dataRegnt#
        )
	]]>
	
	</insert>
	
	<!-- 연구대상자 효능설문 결과 일괄생성 템플릿번호 추가 21.8.4-->
	<insert id="Ech0401DAO.insertEch0401AjaxSaveCrfSvy2" parameterClass="cr3280mVO">
	/* Ech0401DAO.insertEch0401AjaxSaveCrfSvy2 */
	<![CDATA[
		    INSERT  CR3280M(
   		 	CORP_CD	
			, RS_NO
			, TERM_TYPE
			, TEMP_NO
			, RSI_NO
			, VAR1
			, VAR2
			, VAR3
			, VAR4
			, VAR5
			, VAR6
			, VAR7
			, VAR8
			, VAR9
			, VAR10
			, DATA_REGDT
			, DATA_REGNT                  
        ) VALUES(
   		 	#corpCd#	
			, #rsNo#
			, #termType#
			, #tempNo#
			, #rsiNo#
			, #var1#
			, #var2#
			, #var3#
			, #var4#
			, #var5#
			, #var6#
			, #var7#
			, #var8#
			, #var9#
			, #var10#
			, GETDATE()
			, #dataRegnt#
        )
	]]>
	
	</insert>
	
	<!-- 연구대상자 효능설문 엑셀 리스트 -->
	<select id="Ech0401DAO.selectEch0401ExcelCrfSvy2" parameterClass="searchVO" resultClass="egovMap">
	/* Ech0401DAO.selectEch0401ExcelCrfSvy2 */
	<![CDATA[
		SELECT 
			Z.* FROM 
			(		
			SELECT  
		  		A.CORP_CD                     AS corpCd            
              , A.RS_NO                       AS rsNo
              , CASE A.TERM_TYPE
              		WHEN '1' THEN '사전' 
              		WHEN '2' THEN '사후'
              	END 						  AS termTypeNm2
              , C.TITLE						  AS termTypeNm	
              , A.TERM_TYPE                   AS termType
              , A.RSI_NO                      AS rsiNo              
              , A.VAR1		                  AS var1
              , A.VAR2		                  AS var2
              , A.VAR3		                  AS var3
              , A.VAR4		                  AS var4
              , A.VAR5		                  AS var5
              , A.VAR6		                  AS var6
              , A.VAR7		                  AS var7
              , A.VAR8		                  AS var8
              , A.VAR9		                  AS var9
              , A.VAR10		                  AS var10
              , A.VAR11		                  AS var11
              , A.VAR12		                  AS var12
              , A.VAR13		                  AS var13
              , A.VAR14		                  AS var14
              , A.VAR15		                  AS var15
              , B.RS_CD						  AS rsCd
              , B.RS_NAME					  AS rsName
              , D.RSI_NO3					  AS rsiNo3 
            FROM CR3280M A
            INNER JOIN RS1010M B
            ON B.CORP_CD 		= A.CORP_CD
            AND B.RS_NO			= A.RS_NO
            INNER JOIN CR2110M C 
            ON C.CORP_CD 		= A.CORP_CD
            AND C.RS_NO 		= A.RS_NO
            AND C.TEMP_NO 		= A.TEMP_NO
            INNER JOIN RS2010M D 
            ON D.CORP_CD		= A.CORP_CD
            AND D.RS_NO 		= A.RS_NO
            AND D.RSI_NO 		= A.RSI_NO
            WHERE A.CORP_CD		= #corpCd#
            AND A.RS_NO			= #rsNo#
            ) z
        ORDER BY z.termTypeNm, z.rsiNo3      
	]]>
	</select>
	
	<sql id="where_rs1010mRsSeq">
    	FROM    RS1000M A
		LEFT OUTER JOIN CT2000M B 
		ON B.CORP_CD 			= A.CORP_CD 
		AND B.VEND_NO 			= A.VEND_NO 
		WHERE   A.CORP_CD       = #corpCd#              
		AND     A.MRS_NO        = #rsNo#   
    </sql>
	
	<!-- 연구차수 리스트 -->
	<select id="Ech0401DAO.selectEch0401RsSeqList" parameterClass="searchVO" resultClass="egovMap">
	/* Ech0401DAO.selectEch0401RsSeqList */
	<![CDATA[
		SELECT 
			Z.* FROM 
			(		
			SELECT
				ROW_NUMBER() OVER(order by A.RS_NO DESC) rownum  
           		, A.CORP_CD			AS corpCd
           		, A.RS_NO7			AS rsNo7
           		, A.RS_NO			AS rsNo
           		, A.RS_CD			AS rsCd
				, A.RS_NAME			AS rsName
				, A.VMNG_NAME		AS vmngName 
				, B.VEND_NAME		AS vendName
				, A.MRS_NO			AS mrsNo 
            ]]>      
		<include refid="where_rs1010mRsSeq" />	<![CDATA[
				
			) Z 
	        ORDER   BY
                Z.corpCd
              , Z.rsNo7
		]]>	
	</select>
	
	 <!-- 연구차수 리스트 Cnt -->
    <select id="Ech0401DAO.selectEch0401RsSeqListCnt" parameterClass="searchVO" resultClass="int">
    /* Ech0401DAO.selectEch0401RsSeqListCnt */
    <![CDATA[
        SELECT  COUNT(*)
    ]]>
        <include refid="where_rs1010mRsSeq" />
    </select>
	
	<!-- 연구차수 연구대상자 특성결과 일괄생성 데이터 삭제 -->
	<delete id="Ech0401DAO.deleteEch0401SkinPropRsSeq" parameterClass="egovMap">
		/* Ech0401DAO.deleteEch0401SkinPropRsSeq.deleteEch0401SkinProp */
	<![CDATA[
		DELETE
        FROM
                CR3162M
        WHERE
                CORP_CD		= #corpCd#              
        AND     MRS_NO		= #rsNo#    
	]]>
	</delete>
	
	<!-- 연구차수 연구대상자 특성결과 일괄생성 -->
	<insert id="Ech0401DAO.insertEch0401AjaxSaveSkinPropRsSeq" parameterClass="egovMap">
	/* Ech0401DAO.insertEch0401AjaxSaveSkinPropRsSeq */
	<![CDATA[
		INSERT INTO CR3162M 
		SELECT A.CORP_CD 
				, C.RS_NO 
				, CONCAT(C.RS_NO5,C.RS_NO6,'-',C.RS_NO7,'-',D.RSI_NO3)
				, A.VAR1 
				, A.VAR2
				, A.VAR3
				, A.VAR4
				, A.VAR5
				, A.VAR6
				, A.VAR7
				, A.VAR8
				, A.VAR9
				, A.VAR10
				, A.VAR11
				, A.VAR12
				, A.VAR13
				, A.VAR14
				, A.VAR15
				, GETDATE()
				, #dataRegnt#
				, B.RS_NO 
		FROM CR3160M A
		INNER JOIN RS1010M B 
		ON B.CORP_CD 	= A.CORP_CD 
		AND B.RS_NO	 	= A.RS_NO
		INNER JOIN RS1000M C
		ON C.CORP_CD 	= A.CORP_CD 
		AND C.MRS_NO 	= A.RS_NO
		INNER JOIN RS2010M D 
		ON D.CORP_CD 	= A.CORP_CD
		AND D.RS_NO		= A.RS_NO 
		AND D.RSI_NO 	= A.RSI_NO 
		WHERE A.CORP_CD = #corpCd#
		AND A.RS_NO 	= #rsNo#
	]]>
	</insert>
				
	<!-- /시험결과추출****************************************************************************************************************************************** -->

</sqlMap>