@using HALLA_PM.Models;
@using HALLA_PM.Util;
@using HALLA_PM.Core;
@using HALLA_PM.Util;

@{
    ViewBag.Title = "NewIndex";


    Search search = ViewBag.search;

    //DashBoard
    GroupMain groupMainFCF = Model.groupMainFCF;
    //2022-06-16
    GroupMain groupMainFCFExcept = Model.groupMainFCFExcept;
    GroupMain salesCr = Model.groupPmMonthlyCr;

    List<GroupMain> groupMainSalesList = Model.groupMainSalesList;
    List<GroupMain> groupMainEbitList = Model.groupMainEbitList;
    List<GroupMain> groupMainPbtList = Model.groupMainPbtList;
    GroupMain groupMainRoic = Model.groupMainRoic;

    //KPI 종합
    List<GroupMain> KpiSignalFCF = Model.KpiSignalFCF;
    List<GroupMain> KpiSignal = Model.KpiSignal;
    List<GroupMain> kpiSignalLiabilitiesRate = Model.kpiSignalLiabilitiesRate;

    //손익 목표 달성 현황
    List<GroupMain> KpiGraph = Model.KpiGraph;

    if (search.year != "2018")
    {
        KpiSignalFCF = KpiSignalFCF.Where(w => w.companyName != "만도").ToList();
        KpiSignal = KpiSignal.Where(w => w.companyName != "만도").ToList();
        kpiSignalLiabilitiesRate = kpiSignalLiabilitiesRate.Where(w => w.companyName != "만도").ToList();
        KpiGraph = KpiGraph.Where(w => w.KpiGraphCompanyName != "만도").ToList();
    }
    else if (search.year == "2018" && search.mm == "12")
    {
        KpiSignalFCF = KpiSignalFCF.Where(w => w.companyName != "만도(BU)").ToList();
        KpiSignal = KpiSignal.Where(w => w.companyName != "만도(BU)").ToList();
        kpiSignalLiabilitiesRate = kpiSignalLiabilitiesRate.Where(w => w.companyName != "만도(BU)").ToList();
        KpiGraph = KpiGraph.Where(w => w.KpiGraphCompanyName != "만도(BU)").ToList();
    }

    //CashFlow
    List<GroupMain> cashFlowPlan = Model.CashFlowPlan;
    List<GroupMain> cashFlowResult = Model.cashFlowResult;

    //당월/누계 손익

    //당월
    List<GroupMain> salesCalcList = Model.salesCalcList;
    List<GroupMain> preYearSalesCalcList = Model.preYearSalesCalcList;

    List<GroupMain> salesCalcSubChart = Model.salesCalcSubChart;

    List<GroupMain> ebitCalcList = Model.ebitCalcList;
    List<GroupMain> preYearEbitCalcList = Model.preYearEbitCalcList;

    List<GroupMain> ebitCalcSubChart = Model.ebitCalcSubChart;

    //누계
    List<GroupMain> SalesSumCalcList = Model.SalesSumCalcList;
    List<GroupMain> preYearSalesSumCalcList = Model.preYearSalesSumCalcList;

    List<GroupMain> salesSumCalcSubChart = Model.salesSumCalcSubChart;

    List<GroupMain> EbitSumCalcList = Model.EbitSumCalcList;
    List<GroupMain> preYearEbitSumCalcList = Model.preYearEbitSumCalcList;

    List<GroupMain> ebitSumCalcSubChart = Model.ebitSumCalcSubChart;

    //손익 (연간예상)

    //Sales
    List<GroupMain> expectSalesList = Model.expectSalesList;
    List<GroupMain> preYearExpectSalesList = Model.preYearExpectSalesList;

    List<GroupMain> expectYearSalesList = Model.expectYearSalesList;
    List<GroupMain> preYearExpectYearSalesList = Model.preYearExpectYearSalesList;

    //Sales - 잔여월
    List<GroupMain> expectRestSalesList = Model.expectRestSalesList;
    List<GroupMain> preYearExpectRestSalesList = Model.preYearExpectRestSalesList;

    //EBIT
    List<GroupMain> expectEbitList = Model.expectEbitList;
    List<GroupMain> preYearExpectEbitList = Model.preYearExpectEbitList;

    List<GroupMain> expectYearEbitList = Model.expectYearEbitList;
    List<GroupMain> preYearExpectYearEbitList = Model.preYearExpectYearEbitList;

    //Ebit - 잔여월
    List<GroupMain> expectRestEbitList = Model.expectRestEbitList;
    //Ebit - 잔여월(젼년)
    List<GroupMain> preYearExpectRestEbitList = Model.preYearExpectRestEbit;

    //Table
    List<GroupMain> expectYearHeadTable = Model.expectYearHeadTable;
    List<GroupMain> expectYearRestBodyTable = Model.expectYearRestBodyTable;
    List<GroupMain> expectYearBodyTable = Model.expectYearBodyTable;

    //ROIC
    List<GroupMain> groupMainPlanRoic = Model.groupMainPlanRoic;
    List<GroupMain> groupMainResultRoic = Model.groupMainResultRoic;

    //투자, 인원
    //누계
    GroupMain investPlanPieChart = Model.investPlanPieChart;
    GroupMain investResultPieChart = Model.investResultPieChart;
    //연간
    GroupMain investYearPlanPieChart = Model.investYearPlanPieChart;
    GroupMain investYearResultPieChart = Model.investYearResultPieChart;
    //인원
    List<GroupMain> personnelResultChart = Model.personnelResultChart;

    List<RegistYearList> registYearPm = Model.registYearPm;

    var y = registYearPm
        .GroupBy(g => g.RegistYear)
        .Select(cl => new RegistYearList
        {
            RegistYear = cl.First().RegistYear
        })
        .ToList();

    if (string.IsNullOrWhiteSpace(search.year))
    {
        search.year = y.Last().RegistYear;
    }

    var m = registYearPm.Where(w => w.RegistYear == search.year).ToList();

    if (string.IsNullOrWhiteSpace(search.mm))
    {
        search.mm = m.Last().RegistMonth;
    }

    decimal month = Convert.ToDecimal(search.mm);

    //var year = SessionManager.GetMemberSession().planYear.First().RegistYear;
    CommentList commentList = new CommentList();
    commentList.CommentYear = search.year;
    commentList.CommentMonth = search.mm;
    commentList.AttachTableName = "GROUP";
    commentList.AttachTableSeq = 0;
    commentList.UserKey = SessionManager.GetMemberSession().insaUserV.userKey;
    commentList.EmpNo = SessionManager.GetMemberSession().insaUserV.empNo;
    commentList.UserKorName = SessionManager.GetMemberSession().insaUserV.userKorName;
    commentList.CompKorName = SessionManager.GetMemberSession().insaDeptV == null ? "소속검색안됨" : SessionManager.GetMemberSession().insaDeptV.Compkorname;
    commentList.DeptKorName = SessionManager.GetMemberSession().insaDeptV == null ? "소속검색안됨" : SessionManager.GetMemberSession().insaDeptV.Deptkorname;
    commentList.CompanyName = "그룹";

    //DashBoard - Sales
    decimal dashBoardCashSales = 0;
    decimal dashBoardPlanSales = 0;
    decimal dashBoardRateSales = 0;
    decimal dashBoardSumCashSales = 0;
    decimal dashBoardSumPlanSales = 0;
    decimal dashBoardSumRateSales = 0;

    if (groupMainSalesList != null)
    {
        dashBoardCashSales = groupMainSalesList[0].dashBoardCashSales;
        dashBoardPlanSales = groupMainSalesList[0].DashBoardPlanSales;
        dashBoardRateSales = groupMainSalesList[0].dashBoardRateSales;
        dashBoardSumCashSales = groupMainSalesList[1].dashBoardCashSales;
        dashBoardSumPlanSales = groupMainSalesList[1].DashBoardPlanSales;
        dashBoardSumRateSales = groupMainSalesList[1].dashBoardRateSales;
    }

    //DashBoard - Ebit
    decimal dashBoardCashEbit = 0;
    decimal dashBoardCashPlanEbit = 0;
    decimal dashBoardRateEbit = 0;

    decimal dashBoardSumCashEbit = 0;
    decimal dashBoardSumCashPlanEbit = 0;
    decimal dashBoardSumRateEbit = 0;

    if (groupMainEbitList != null)
    {
        dashBoardCashEbit = groupMainEbitList[0].dashBoardCashEbit;
        dashBoardCashPlanEbit = groupMainEbitList[0].DashBoardCashPlanEbit;
        dashBoardRateEbit = groupMainEbitList[0].dashBoardRateEbit;
        dashBoardSumCashEbit = groupMainEbitList[1].dashBoardCashEbit;
        dashBoardSumCashPlanEbit = groupMainEbitList[1].DashBoardCashPlanEbit;
        dashBoardSumRateEbit = groupMainEbitList[1].dashBoardRateEbit;
    }

    //DashBoard - PBT
    decimal dashBoardCashPbt = 0;
    decimal dashBoardCashPlanPbt = 0;
    decimal dashBoardRatePbt = 0;

    decimal dashBoardSumCashPbt = 0;
    decimal dashBoardSumCashPlanPbt = 0;
    decimal dashBoardSumRatePbt = 0;

    /* if (groupMainPbtList != null)
     {
         dashBoardCashPbt = groupMainPbtList[0].dashBoardCashPbt;
         dashBoardCashPlanPbt = groupMainPbtList[0].DashBoardCashPlanPbt;
         dashBoardRatePbt = groupMainPbtList[0].dashBoardRatePbt;

         dashBoardSumCashPbt = groupMainPbtList[1].dashBoardCashPbt;
         dashBoardSumCashPlanPbt = groupMainPbtList[1].DashBoardCashPlanPbt;
         dashBoardSumRatePbt = groupMainPbtList[1].dashBoardRatePbt;
     }*/

    //DashBoard - ROIC
    decimal dashBoardRoic = 0;
    decimal dashBoardPlanRoic = 0;
    decimal dashBoardRateRoic = 0;


    if (groupMainRoic != null)
    {
        dashBoardRoic = groupMainRoic.dashBoardRoic;
        dashBoardPlanRoic = groupMainRoic.dashBoardplanRoic;
        dashBoardRateRoic = groupMainRoic.dashBoardRateRoic;

    }


    //Kpi종합 계획이 음수일때 셋팅하는값
    decimal kpiPlanMinusValue = 200;
}

<section class="group_wrap">
    <div class="top_wrap">
        <h2>그룹메인</h2>
    </div><!--//top_wrap-->

    <form name="frmForm" method="post">
        <div class="top_wrap">
            <div class="style_select">
                <label class="">
                    <span>@(search.year)년</span>
                    <select name="year" id="year" onchange="onChangeDate();">
                        @foreach (var item in y)
                        {
                            <option value="@item.RegistYear" @(search.year == item.RegistYear ? " selected" : "")>@(item.RegistYear)년</option>
                        }
                    </select>
                </label>
            </div>

            <div class="style_select">
                <label class="">
                    <span>@(Convert.ToInt32(search.mm))월</span>
                    <select name="mm" id="mm" onchange="onChangeDate();">
                        @foreach (var item in m)
                        {
                            <option value="@item.RegistMonth" @(search.mm == item.RegistMonth ? " selected" : "")>@(Convert.ToInt32(item.RegistMonth))월</option>
                        }
                    </select>
                </label>
            </div>
        </div><!--//top_wrap-->
    </form>

    <div class="monthly_total_box">

        <div class="monthly_total col mtotal01">
            <h3>FCF</h3>
            <div class="monthly_info">
                <dl>
                    <dt>누계</dt>
                    <dd class="total_info"><span class="total">@WebUtil.NCommaRound(groupMainFCF.dashBoardCashFcf, 0)</span>억</dd>
                    <dd class="rate_info">달성률  <span class="rate">@(groupMainFCF.DashBoardPlanFcf == 0 ? "N/A" : Convert.ToString(Math.Round(groupMainFCF.dashBoardRateFcf, 0, MidpointRounding.AwayFromZero)) + "%")</span></dd>
                </dl>
            </div>
        </div><!--//monthly_total-->

        <div class="monthly_total col2 mtotal02">
            <h3>SALES</h3>
            <div class="monthly_info">
                <dl>
                    <dt>당월</dt>
                    <dd class="total_info"><span class="total">@WebUtil.NCommaRound(dashBoardCashSales, 0)</span>억</dd>
                    <dd class="rate_info">달성률  <span class="rate">@(dashBoardPlanSales == 0 ? "N/A" : Convert.ToString(Math.Round(dashBoardRateSales, 0, MidpointRounding.AwayFromZero)) + "%")</span></dd>
                </dl>
                <dl>
                    <dt>누계</dt>
                    <dd class="total_info"><span class="total">@WebUtil.NCommaRound(dashBoardSumCashSales, 0)</span>억</dd>
                    <dd class="rate_info">달성률  <span class="rate">@(dashBoardSumPlanSales == 0 ? "N/A" : Convert.ToString(Math.Round(dashBoardSumRateSales, 0, MidpointRounding.AwayFromZero)) + "%")</span></dd>
                </dl>
            </div>
        </div><!--//monthly_total-->

        <div class="monthly_total col2 mtotal03">
            <h3>EBIT</h3>
            <div class="monthly_info">
                @{
                    decimal dashBoardEbitRate = 0;
                    decimal dashBoardEbitRateTotal = 0;

                    //dashBoardEbitRate = groupMainEbitList[0].dashBoardCashEbit == 0 ? 0 : groupMainEbitList[0].dashBoardCashEbit / dashBoardCashSales * 100;
                    //dashBoardEbitRateTotal = groupMainEbitList[1].dashBoardCashEbit == 0 ? 0 : groupMainEbitList[1].dashBoardCashEbit / dashBoardSumCashSales * 100;
                    dashBoardEbitRate = dashBoardCashSales == 0 ? 0 : groupMainEbitList[0].dashBoardCashEbit / dashBoardCashSales * 100;
                    dashBoardEbitRateTotal = dashBoardSumCashSales == 0 ? 0 : groupMainEbitList[1].dashBoardCashEbit / dashBoardSumCashSales * 100;
                }
                <dl>
                    <dt>당월</dt>
                    <dd class="total_info"><span class="total">@WebUtil.NCommaRound(dashBoardCashEbit, 0)</span>억 (@Math.Round(dashBoardEbitRate, 1, MidpointRounding.AwayFromZero)%)</dd>
                    <dd class="rate_info">달성률  <span class="rate">@(dashBoardCashPlanEbit == 0 ? "N/A" : Convert.ToString(Math.Round(dashBoardRateEbit, 0, MidpointRounding.AwayFromZero)) + "%")</span></dd>
                </dl>
                <dl>
                    <dt>누계</dt>
                    <dd class="total_info"><span class="total">@WebUtil.NCommaRound(dashBoardSumCashEbit, 0)</span>억 (@Math.Round(dashBoardEbitRateTotal, 1, MidpointRounding.AwayFromZero)%)</dd>
                    <dd class="rate_info">달성률  <span class="rate">@(dashBoardSumCashPlanEbit == 0 ? "N/A" : Convert.ToString(Math.Round(dashBoardSumRateEbit, 0, MidpointRounding.AwayFromZero)) + "%")</span></dd>
                </dl>
            </div>
        </div><!--//monthly_total-->
        @*2019.02.19 2019년 1월에는 손익 예상과 roic 안 보이게 변경 : 2019.02.20 다시 보이게 변경*@
        @if (search.year + search.mm != "201901ㅁ")
        {
            <div class="monthly_total col mtotal04">
                <h3>ROIC</h3>
                <div class="monthly_info">
                    <dl>
                        <dt>누계</dt>
                        <dd class="total_info"><span class="total">@WebUtil.NCommaRound(dashBoardRoic, 1)%</span></dd>
                        <dd class="rate_info">달성률<span class="rate">@(dashBoardPlanRoic == 0 ? "N/A" : Convert.ToString(Math.Round(dashBoardRateRoic, 0, MidpointRounding.AwayFromZero)) + "%")</span></dd>
                    </dl>
                </div>
            </div><!--//monthly_total-->
        }
    </div><!--//monthly_total_box-->
    <!--S: KPI 종합-->
    <div class="graph_box_wrap open">
        <!--첫번째 섹션은 open 클래스 추가-->
        <h2><a href="#">KPI 종합</a></h2>
        <div class="graph_box">

            <div class="box">
                <div class="graph">
                    <p class="unit">(단위 : %)</p>

                    <div class="tbl_scroll_wrap" id="kpiTable">
                        <div class="tbl_box">
                            <table class="tbl th_hor tblfix">
                                <thead>
                                    <tr>
                                        <th scope="col" colspan="2" class="row2">구분</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <th scope="row">FCF</th>
                                        <th scope="row">누계</th>
                                    </tr>
                                    <tr>
                                        <th scope="row" rowspan="2">매출</th>
                                        <th scope="row">당월</th>
                                    </tr>
                                    <tr>
                                        <th scope="row" class="bg">누계</th>
                                    </tr>
                                    <tr>
                                        <th scope="row" rowspan="2">EBIT</th>
                                        <th scope="row">당월</th>
                                    </tr>
                                    <tr>
                                        <th scope="row" class="bg">누계</th>
                                    </tr>
                                    <tr>
                                        <th scope="row" rowspan="2">PBT</th>
                                        <th scope="row">당월</th>
                                    </tr>
                                    <tr>
                                        <th scope="row" class="bg">누계</th>
                                    </tr>
                                    <tr>
                                        <th scope="row">부채비율</th>
                                        <th scope="row">누계</th>
                                    </tr>
                                    <tr>
                                        <th scope="row">ROIC</th>
                                        <th scope="row">누계</th>
                                    </tr>
                                </tbody>
                            </table><!--tbl-->
                        </div><!--//tbl_box-->

                        <div class="tbl_scroll">
                            <div class="tbl_add">
                                <table class="tbl th_hor">
                                    <thead>
                                        <tr>
                                            @{
                                                List<GroupMain> GroupUnion = KpiSignalFCF.GroupBy(g => g.unionName)
                                                    .Select(cl => new GroupMain
                                                    {
                                                        unionName = cl.First().unionName,
                                                        unionSeq = cl.Count()
                                                    }).ToList();

                                                foreach (var item in GroupUnion)
                                                {
                                                    <th colspan="@(item.unionSeq)" class="ld">@(item.unionName)</th>
                                                }
                                            }
                                            @*<th colspan="3" class="ld">지주</th>
                                                <th colspan="3" class="ld">자동차</th>
                                                <th colspan="2" class="ld">건설</th>*@
                                            <th rowspan="2" class="ld">그룹<br>Total</th>
                                        </tr>
                                        <tr>
                                            @{
                                                List<GroupMain> GroupCompany = KpiSignalFCF.GroupBy(g => g.companyName)
                                                   .Select(cl => new GroupMain
                                                   {
                                                       unionName = cl.First().unionName,
                                                       companyName = cl.First().companyName
                                                   }).ToList();
                                                string beforeUnion = "";

                                                foreach (var item in GroupCompany)
                                                {
                                                    if (beforeUnion != item.unionName)
                                                    {
                                                        <th class="ld">@(item.companyName)</th>
                                                        beforeUnion = item.unionName;
                                                    }
                                                    else
                                                    {
                                                        <th>@(item.companyName)</th>
                                                    }
                                                }
                                            }
                                            @*<th class="ld">한라홀딩스(사업)</th>
                                                <th>한라홀딩스(지주)</th>
                                                <th>JJ한라</th>
                                                <th class="ld">만도</th>
                                                <th>만도헬라</th>
                                                <th>만도브로제</th>
                                                <th class="ld">㈜한라</th>
                                                <th>한라엔컴</th>*@
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            @{
                                                //FCF
                                                var fcfCount = 1;
                                                decimal fcfTotal = 0;
                                                var fcfStatus = string.Empty;
                                                var fcfClass = string.Empty;
                                                var strCursor = "style='cursor: pointer'";
                                                decimal planfcfTotal = 0;
                                                decimal resultfcfTotal = 0;

                                                foreach (var item in KpiSignalFCF)
                                                {
                                                    var planFcf2 = Math.Round(item.kpiPlanFcf2, 2, MidpointRounding.AwayFromZero);
                                                    var resultFcf2 = Math.Round(item.kpiResultFcf2, 2, MidpointRounding.AwayFromZero);
                                                    var strEvent = "onclick='funItemLink(" + item.companySeq.ToString() + ",1)'";

                                                    if (planFcf2 > 0)
                                                    {
                                                        var fcfvalue = WebUtil.NumberRound(item.kpiResultFcf2, item.kpiPlanFcf2, 100, 0);

                                                        if (fcfvalue >= 100)
                                                        {
                                                            fcfStatus = "class='cgreen'";
                                                        }
                                                        else if (fcfvalue >= 90)
                                                        {
                                                            fcfStatus = "class='corg'";
                                                        }
                                                        else
                                                        {
                                                            fcfStatus = "class='cred'";
                                                        }

                                                        if (fcfCount == 1 || fcfCount == 4 || fcfCount == 7)
                                                        {
                                                            fcfClass = "class='ld'";
                                                        }
                                                        else
                                                        {
                                                            fcfClass = "";
                                                        }

                                                        <td @Html.Raw(fcfClass) @Html.Raw(strEvent)><span @Html.Raw(fcfStatus) @Html.Raw(strCursor)>@(fcfvalue)% </span></td>
                                                    }
                                                    else if (planFcf2 < 0)
                                                    {
                                                        var fcfvalue = kpiPlanMinusValue - WebUtil.NumberRound(item.kpiResultFcf2, item.kpiPlanFcf2, 100, 0);

                                                        if (fcfvalue >= 100)
                                                        {
                                                            fcfStatus = "class='cgreen'";
                                                        }
                                                        else if (fcfvalue >= 90)
                                                        {
                                                            fcfStatus = "class='corg'";
                                                        }
                                                        else
                                                        {
                                                            fcfStatus = "class='cred'";
                                                        }

                                                        if (fcfCount == 1 || fcfCount == 4 || fcfCount == 7)
                                                        {
                                                            fcfClass = "class='ld'";
                                                        }
                                                        else
                                                        {
                                                            fcfClass = "";
                                                        }

                                                        <td @Html.Raw(fcfClass) @Html.Raw(strEvent)><span @Html.Raw(fcfStatus) @Html.Raw(strCursor)>@(fcfvalue)%</span></td>
                                                    }
                                                    else if (planFcf2 == 0)
                                                    {
                                                        fcfStatus = "class='cred'";

                                                        if (fcfCount == 1 || fcfCount == 4 || fcfCount == 7)
                                                        {
                                                            fcfClass = "class='ld'";
                                                        }
                                                        else
                                                        {
                                                            fcfClass = "";
                                                        }
                                                        @*<td @Html.Raw(fcfClass)><span @Html.Raw(fcfStatus)>N/A</span></td>*@
                                                        <td @Html.Raw(fcfClass)><span>N/A</span></td>

                                                    }
                                                    if(item.companySeq.Equals("14") || item.companySeq.Equals("19"))
                                                    {
                                                        planFcf2 = 0;
                                                        resultFcf2 = 0;
                                                        planfcfTotal += planFcf2;
                                                        resultfcfTotal += resultFcf2;
                                                        fcfCount++;
                                                    }
                                                    else
                                                    {

                                                        planfcfTotal += planFcf2;
                                                        resultfcfTotal += resultFcf2;
                                                        fcfCount++;
                                                    }
                                                }

                                                if (planfcfTotal > 0)
                                                {
                                                    var fcfTotalValue = WebUtil.NumberRound(resultfcfTotal, planfcfTotal, 100, 0);

                                                    if (fcfTotalValue >= 100)
                                                    {
                                                        fcfStatus = "class='cgreen'";
                                                    }
                                                    else if (fcfTotalValue >= 90)
                                                    {
                                                        fcfStatus = "class='corg'";
                                                    }
                                                    else
                                                    {
                                                        fcfStatus = "class='cred'";
                                                    }

                                                    //Total
                                                    //<td class="ld"><span @Html.Raw(fcfStatus)>@fcfTotalValue%</span></td>
                                                    <td class="ld"><span @Html.Raw(fcfStatus)>@(groupMainFCF.DashBoardPlanFcf == 0 ? "N/A" : Convert.ToString(Math.Round(groupMainFCF.dashBoardRateFcf, 0, MidpointRounding.AwayFromZero)) + "%")</span></td>
                                                }
                                                else if (planfcfTotal < 0)
                                                {
                                                    var fcfTotalValue = kpiPlanMinusValue - WebUtil.NumberRound(resultfcfTotal, planfcfTotal, 100, 0);

                                                    if (fcfTotalValue >= 100)
                                                    {
                                                        fcfStatus = "class='cgreen'";
                                                    }
                                                    else if (fcfTotalValue >= 90)
                                                    {
                                                        fcfStatus = "class='corg'";
                                                    }
                                                    else
                                                    {
                                                        fcfStatus = "class='cred'";
                                                    }

                                                    //Total
                                                    <td class="ld"><span @Html.Raw(fcfStatus)>@fcfTotalValue%</span></td>
                                                }
                                                else if (planfcfTotal == 0)
                                                {
                                                    fcfStatus = "class='cred'";

                                                    //Total
                                                    @*<td class="ld"><span @Html.Raw(fcfStatus)>N/A</span></td>*@
                                                    <td class="ld"><span>N/A</span></td>
                                                }
                                            }
                                        </tr>
                                        <tr>
                                            @{
                                                var salesMonthCount = 1;
                                                decimal salesMonthTotal = 0;
                                                var salesMonthStatus = string.Empty;
                                                var salesMonthClass = string.Empty;
                                                decimal planSalesMonthTotal = 0;
                                                decimal resultSalesMonthTotal = 0;
                                                //매출
                                                foreach (var item in KpiSignal)
                                                {
                                                    // 2018.12.17 사용하지 않는 회사는 표시되지 않게 하단 처리
                                                    if (item.KpiKind == Define.MONTHLY_TYPE.GetKey("당월"))
                                                    {
                                                        var planSales = Math.Round(item.kpiPlanSales, 2, MidpointRounding.AwayFromZero);
                                                        var resultSales = Math.Round(item.kpiResultSales, 2, MidpointRounding.AwayFromZero);
                                                        var strEvent = "onclick='funItemLink(" + item.companySeq.ToString() + ",2)'";

                                                        if (planSales > 0 && item.isUse == "Y")
                                                        {
                                                            var salesMonth = WebUtil.NumberRound(item.kpiResultSales, item.kpiPlanSales, 100, 0);

                                                            if (salesMonth >= 100)
                                                            {
                                                                salesMonthStatus = "class='cgreen'";
                                                            }
                                                            else if (salesMonth >= 90)
                                                            {
                                                                salesMonthStatus = "class='corg'";
                                                            }
                                                            else
                                                            {
                                                                salesMonthStatus = "class='cred'";
                                                            }

                                                            if (salesMonthCount == 1 || salesMonthCount == 4 || salesMonthCount == 7)
                                                            {
                                                                salesMonthClass = "class='ld'";
                                                            }
                                                            else
                                                            {
                                                                salesMonthClass = "";
                                                            }

                                                            <td @Html.Raw(salesMonthClass) @Html.Raw(strEvent)><span @Html.Raw(salesMonthStatus) @Html.Raw(strCursor)>@(salesMonth)%</span></td>
                                                        }
                                                        else if (planSales < 0 && item.isUse == "Y")
                                                        {
                                                            var salesMonth = kpiPlanMinusValue - WebUtil.NumberRound(item.kpiResultSales, item.kpiPlanSales, 100, 0);

                                                            if (planSales >= 0)
                                                            {
                                                                if (salesMonth >= 100)
                                                                {
                                                                    salesMonthStatus = "class='cgreen'";
                                                                }
                                                                else if (salesMonth >= 90)
                                                                {
                                                                    salesMonthStatus = "class='corg'";
                                                                }
                                                                else
                                                                {
                                                                    salesMonthStatus = "class='cred'";
                                                                }

                                                                if (salesMonthCount == 1 || salesMonthCount == 4 || salesMonthCount == 7)
                                                                {
                                                                    salesMonthClass = "class='ld'";
                                                                }
                                                                else
                                                                {
                                                                    salesMonthClass = "";
                                                                }

                                                                <td @Html.Raw(salesMonthClass) @Html.Raw(strEvent)><span @Html.Raw(salesMonthStatus) @Html.Raw(strCursor)>@(salesMonth)%</span></td>
                                                            }
                                                        }
                                                        else if (planSales == 0 && item.isUse == "Y")
                                                        {
                                                            salesMonthStatus = "class='cred'";

                                                            if (salesMonthCount == 1 || salesMonthCount == 4 || salesMonthCount == 7)
                                                            {
                                                                salesMonthClass = "class='ld'";
                                                            }
                                                            else
                                                            {
                                                                salesMonthClass = "";
                                                            }

                                                            @*<td @Html.Raw(salesMonthClass)><span @Html.Raw(salesMonthStatus)>N/A</span></td>*@
                                                            <td @Html.Raw(salesMonthClass)><span>N/A</span></td>
                                                        }
                                                        if(item.companySeq.Equals("14") || item.companySeq.Equals("19"))
                                                        {
                                                            planSales = 0;
                                                            resultSales = 0;
                                                            planSalesMonthTotal += planSales;
                                                            resultSalesMonthTotal += resultSales;
                                                            salesMonthCount++;
                                                        }
                                                        else
                                                        {
                                                            planSalesMonthTotal += planSales;
                                                            resultSalesMonthTotal += resultSales;
                                                            salesMonthCount++;
                                                        }
                                                    }
                                                }

                                                if (planSalesMonthTotal > 0)
                                                {
                                                    var salesMonthTotalValue = WebUtil.NumberRound(resultSalesMonthTotal, planSalesMonthTotal, 100, 0);

                                                    if (salesMonthTotalValue >= 100)
                                                    {
                                                        salesMonthStatus = "class='cgreen'";
                                                    }
                                                    else if (salesMonthTotalValue >= 90)
                                                    {
                                                        salesMonthStatus = "class='corg'";
                                                    }
                                                    else
                                                    {
                                                        salesMonthStatus = "class='cred'";
                                                    }

                                                    //Total PlanSale
                                                    //<td class="ld"><span @Html.Raw(salesMonthStatus)>@salesMonthTotalValue%</span></td> 
                                                    <td class="ld"><span @Html.Raw(salesMonthStatus)>@(dashBoardPlanSales == 0 ? "N/A" : Convert.ToString(Math.Round(dashBoardRateSales, 0, MidpointRounding.AwayFromZero)) + "%")</span></td>
                                                }
                                                else if (planSalesMonthTotal < 0)
                                                {
                                                    var salesMonthTotalValue = kpiPlanMinusValue - WebUtil.NumberRound(resultSalesMonthTotal, planSalesMonthTotal, 100, 0);

                                                    if (salesMonthTotalValue >= 100)
                                                    {
                                                        salesMonthStatus = "class='cgreen'";
                                                    }
                                                    else if (salesMonthTotalValue >= 90)
                                                    {
                                                        salesMonthStatus = "class='corg'";
                                                    }
                                                    else
                                                    {
                                                        salesMonthStatus = "class='cred'";
                                                    }

                                                    //Total
                                                    //<td class="ld"><span @Html.Raw(salesMonthStatus)>@salesMonthTotalValue%</span></td>
                                                    <td class="ld"><span @Html.Raw(salesMonthStatus)>@(dashBoardPlanSales == 0 ? "N/A" : Convert.ToString(Math.Round(dashBoardRateSales, 0, MidpointRounding.AwayFromZero)) + "%")</span></td>
                                                }
                                                else if (planSalesMonthTotal == 0)
                                                {
                                                    salesMonthStatus = "class='cred'";

                                                    //Total
                                                    @*<td class="ld"><span @Html.Raw(salesMonthStatus)>N/A</span></td>*@
                                                    <td class="ld"><span>N/A</span></td>
                                                }
                                            }
                                        </tr>
                                        <tr>
                                            @{
                                                var salesAccumulateCount = 1;
                                                decimal salesAccumulateTotal = 0;
                                                var salesAccumulateStatus = string.Empty;
                                                var salesAccumulateClass = string.Empty;
                                                decimal planSalesTotal = 0;
                                                decimal resultSalesTotal = 0;

                                                //누계
                                                foreach (var item in KpiSignal)
                                                {
                                                    if (item.KpiKind == Define.MONTHLY_TYPE.GetKey("누계"))
                                                    {
                                                        var planSales = Math.Round(item.kpiPlanSales, 2, MidpointRounding.AwayFromZero);
                                                        var resultSales = Math.Round(item.kpiResultSales, 2, MidpointRounding.AwayFromZero);
                                                        var strEvent = "onclick='funItemLink(" + item.companySeq.ToString() + ",2)'";

                                                        // 2018.12.17 사용중인회사면 표기한다 여기서 처리.. 합계는 넣어야 하니..
                                                        if (planSales > 0 && item.isUse == "Y")
                                                        {
                                                            var salesAccumulate = WebUtil.NumberRound(item.kpiResultSales, item.kpiPlanSales, 100, 0);

                                                            if (salesAccumulate >= 100)
                                                            {
                                                                salesAccumulateStatus = "class='cgreen'";
                                                            }
                                                            else if (salesAccumulate >= 90)
                                                            {
                                                                salesAccumulateStatus = "class='corg'";
                                                            }
                                                            else
                                                            {
                                                                salesAccumulateStatus = "class='cred'";
                                                            }

                                                            if (salesAccumulateCount == 1 || salesAccumulateCount == 4 || salesAccumulateCount == 7)
                                                            {
                                                                salesAccumulateClass = "class='ld bg'";
                                                            }
                                                            else
                                                            {
                                                                salesAccumulateClass = "class='bg'";
                                                            }

                                                            <td @Html.Raw(salesAccumulateClass) @Html.Raw(strEvent)><span @Html.Raw(salesAccumulateStatus) @Html.Raw(strCursor)>@(salesAccumulate)%</span></td>

                                                        }
                                                        else if (planSales < 0 && item.isUse == "Y")
                                                        {
                                                            var salesAccumulate = kpiPlanMinusValue - WebUtil.NumberRound(item.kpiResultSales, item.kpiPlanSales, 100, 0);

                                                            if (salesAccumulate >= 100)
                                                            {
                                                                salesAccumulateStatus = "class='cgreen'";
                                                            }
                                                            else if (salesAccumulate >= 90)
                                                            {
                                                                salesAccumulateStatus = "class='corg'";
                                                            }
                                                            else
                                                            {
                                                                salesAccumulateStatus = "class='cred'";
                                                            }

                                                            if (salesAccumulateCount == 1 || salesAccumulateCount == 4 || salesAccumulateCount == 7)
                                                            {
                                                                salesAccumulateClass = "class='ld bg'";
                                                            }
                                                            else
                                                            {
                                                                salesAccumulateClass = "class='bg'";
                                                            }

                                                            <td @Html.Raw(salesAccumulateClass)><span @Html.Raw(salesAccumulateStatus) @Html.Raw(strCursor)>@(salesAccumulate)%</span></td>
                                                            salesAccumulateTotal += salesAccumulate;
                                                        }
                                                        else if (planSales == 0 && item.isUse == "Y")
                                                        {
                                                            var salesAccumulate = kpiPlanMinusValue - WebUtil.NumberRound(item.kpiResultSales, item.kpiPlanSales, 100, 0);

                                                            salesAccumulateStatus = "class='cred'";

                                                            if (salesAccumulateCount == 1 || salesAccumulateCount == 4 || salesAccumulateCount == 7)
                                                            {
                                                                salesAccumulateClass = "class='ld bg'";
                                                            }
                                                            else
                                                            {
                                                                salesAccumulateClass = "class='bg'";
                                                            }

                                                            @*<td @Html.Raw(salesAccumulateClass)><span @Html.Raw(salesAccumulateStatus)>N/A</span></td>*@
                                                            <td @Html.Raw(salesAccumulateClass)><span>N/A</span></td>
                                                            salesAccumulateTotal += salesAccumulate;
                                                        }
                                                        if(item.companySeq.Equals("14") || item.companySeq.Equals("19"))
                                                        {
                                                            planSales = 0;
                                                            resultSales = 0;
                                                            planSalesTotal += planSales;
                                                            resultSalesTotal += resultSales;
                                                            salesAccumulateCount++;
                                                        }
                                                        else
                                                        {
                                                            planSalesTotal += planSales;
                                                            resultSalesTotal += resultSales;
                                                            salesAccumulateCount++;
                                                        }
                                                    }
                                                }

                                                if (planSalesTotal > 0)
                                                {
                                                    var salesAccumulateTotalValue = WebUtil.NumberRound(resultSalesTotal, planSalesTotal, 100, 0);

                                                    if (salesAccumulateTotalValue >= 100)
                                                    {
                                                        salesAccumulateStatus = "class='cgreen'";
                                                    }
                                                    else if (salesAccumulateTotalValue >= 90)
                                                    {
                                                        salesAccumulateStatus = "class='corg'";
                                                    }
                                                    else
                                                    {
                                                        salesAccumulateStatus = "class='cred'";
                                                    }

                                                    //Total Sale 누계
                                                    //<td class="ld bg"><span @Html.Raw(salesAccumulateStatus)>@salesAccumulateTotalValue%</span></td>
                                                    <td class="ld bg"><span @Html.Raw(salesAccumulateStatus)>@(dashBoardSumPlanSales == 0 ? "N/A" : Convert.ToString(Math.Round(dashBoardSumRateSales, 0, MidpointRounding.AwayFromZero)) + "%")</span></td>

                                                    
                                                }
                                                else if (planSalesTotal < 0)
                                                {
                                                    var salesAccumulateTotalValue = kpiPlanMinusValue - WebUtil.NumberRound(resultSalesTotal, planSalesTotal, 100, 0);

                                                    if (salesAccumulateTotalValue >= 100)
                                                    {
                                                        salesAccumulateStatus = "class='cgreen'";
                                                    }
                                                    else if (salesAccumulateTotalValue >= 90)
                                                    {
                                                        salesAccumulateStatus = "class='corg'";
                                                    }
                                                    else
                                                    {
                                                        salesAccumulateStatus = "class='cred'";
                                                    }

                                                    //Total Sale 누계
                                                    //<td class="ld bg"><span @Html.Raw(salesAccumulateStatus)>@salesAccumulateTotalValue%</span></td>
                                                    <td class="ld bg"><span @Html.Raw(salesAccumulateStatus)>@(dashBoardSumPlanSales == 0 ? "N/A" : Convert.ToString(Math.Round(dashBoardSumRateSales, 0, MidpointRounding.AwayFromZero)) + "%")</span></td>

                                                    
                                                }
                                                else if (planSalesTotal == 0)
                                                {
                                                    var salesAccumulateTotalValue = kpiPlanMinusValue - WebUtil.NumberRound(resultSalesTotal, planSalesTotal, 100, 0);

                                                    salesAccumulateStatus = "class='cred'";

                                                    //Total
                                                    @*<td class="ld bg"><span @Html.Raw(salesAccumulateStatus)>N/A</span></td>*@
                                                    <td class="ld bg"><span>N/A</span></td>
                                                }
                                            }
                                        </tr>
                                        <tr>
                                            @{
                                                var ebitMonthCount = 1;
                                                decimal ebitMonthTotal = 0;
                                                var ebitMonthStatus = string.Empty;
                                                var ebitMonthClass = string.Empty;
                                                decimal planMonthEbitTotal = 0;
                                                decimal resultMonthEbitTotal = 0;

                                                //EBIT
                                                foreach (var item in KpiSignal)
                                                {
                                                    // 2018.12.17 사용하지 않는 회사는 하단에서 안 보이게 처리
                                                    if (item.KpiKind == Define.MONTHLY_TYPE.GetKey("당월"))
                                                    {
                                                        var planEbit = Math.Round(item.kpiPlanEbit, 2, MidpointRounding.AwayFromZero);
                                                        var resultEbit = Math.Round(item.kpiResultEbit, 2, MidpointRounding.AwayFromZero);
                                                        var strEvent = "onclick='funItemLink(" + item.companySeq.ToString() + ",3)'";

                                                        if (planEbit > 0 && item.isUse == "Y")
                                                        {
                                                            var ebitMonth = WebUtil.NumberRound(item.kpiResultEbit, item.kpiPlanEbit, 100, 0);

                                                            if (ebitMonth >= 100)
                                                            {
                                                                ebitMonthStatus = "class='cgreen'";
                                                            }
                                                            else if (ebitMonth >= 90)
                                                            {
                                                                ebitMonthStatus = "class='corg'";
                                                            }
                                                            else
                                                            {
                                                                ebitMonthStatus = "class='cred'";
                                                            }

                                                            if (ebitMonthCount == 1 || ebitMonthCount == 4 || ebitMonthCount == 7)
                                                            {
                                                                ebitMonthClass = "class='ld'";
                                                            }
                                                            else
                                                            {
                                                                ebitMonthClass = "";
                                                            }

                                                            <td @Html.Raw(ebitMonthClass) @Html.Raw(strEvent)><span @Html.Raw(ebitMonthStatus) @Html.Raw(strCursor)>@(ebitMonth)%</span></td>
                                                            ebitMonthTotal += ebitMonth;
                                                        }
                                                        else if (planEbit < 0 && item.isUse == "Y")
                                                        {
                                                            var ebitMonth = kpiPlanMinusValue - WebUtil.NumberRound(item.kpiResultEbit, item.kpiPlanEbit, 100, 0);

                                                            if (ebitMonth >= 100)
                                                            {
                                                                ebitMonthStatus = "class='cgreen'";
                                                            }
                                                            else if (ebitMonth >= 90)
                                                            {
                                                                ebitMonthStatus = "class='corg'";
                                                            }
                                                            else
                                                            {
                                                                ebitMonthStatus = "class='cred'";
                                                            }

                                                            if (ebitMonthCount == 1 || ebitMonthCount == 4 || ebitMonthCount == 7)
                                                            {
                                                                ebitMonthClass = "class='ld'";
                                                            }
                                                            else
                                                            {
                                                                ebitMonthClass = "";
                                                            }

                                                            <td @Html.Raw(ebitMonthClass) @Html.Raw(strEvent)><span @Html.Raw(ebitMonthStatus) @Html.Raw(strCursor)>@(ebitMonth)%</span></td>
                                                            ebitMonthTotal += ebitMonth;
                                                        }
                                                        else if (planEbit == 0 && item.isUse == "Y")
                                                        {
                                                            var ebitMonth = kpiPlanMinusValue - WebUtil.NumberRound(item.kpiResultEbit, item.kpiPlanEbit, 100, 0);

                                                            ebitMonthStatus = "class='cred'";

                                                            if (ebitMonthCount == 1 || ebitMonthCount == 4 || ebitMonthCount == 7)
                                                            {
                                                                ebitMonthClass = "class='ld'";
                                                            }
                                                            else
                                                            {
                                                                ebitMonthClass = "";
                                                            }

                                                            @*<td @Html.Raw(ebitMonthClass)><span @Html.Raw(ebitMonthStatus)>N/A</span></td>*@
                                                            <td @Html.Raw(ebitMonthClass)><span>N/A</span></td>
                                                            ebitMonthTotal += ebitMonth;
                                                        }
                                                        if (item.companySeq.Equals("14") || item.companySeq.Equals("19"))
                                                        {
                                                            planEbit = 0;
                                                            resultEbit = 0;
                                                            planMonthEbitTotal += planEbit;
                                                            resultMonthEbitTotal += resultEbit;
                                                            ebitMonthCount++;
                                                        }
                                                        else
                                                        {

                                                            planMonthEbitTotal += planEbit;
                                                            resultMonthEbitTotal += resultEbit;
                                                            ebitMonthCount++;
                                                        }
                                                    }
                                                }

                                                if (planMonthEbitTotal > 0)
                                                {
                                                    var ebitMonthTotalValue = WebUtil.NumberRound(resultMonthEbitTotal, planMonthEbitTotal, 100, 0);

                                                    if (ebitMonthTotalValue >= 100)
                                                    {
                                                        ebitMonthStatus = "class='cgreen'";
                                                    }
                                                    else if (ebitMonthTotalValue >= 90)
                                                    {
                                                        ebitMonthStatus = "class='corg'";
                                                    }
                                                    else
                                                    {
                                                        ebitMonthStatus = "class='cred'";
                                                    }

                                                    //Total EBit 당월 
                                                    //<td class="ld"><span @Html.Raw(ebitMonthStatus)>@(ebitMonthTotalValue)%</span></td>
                                                    <td class="ld"><span @Html.Raw(ebitMonthStatus)>@(dashBoardCashPlanEbit == 0 ? "N/A" : Convert.ToString(Math.Round(dashBoardRateEbit, 0, MidpointRounding.AwayFromZero)) + "%")</span></td>                                                   
                                                }
                                                else if (planMonthEbitTotal < 0)
                                                {
                                                    var ebitMonthTotalValue = kpiPlanMinusValue - WebUtil.NumberRound(resultMonthEbitTotal, planMonthEbitTotal, 100, 0);

                                                    if (ebitMonthTotalValue >= 100)
                                                    {
                                                        ebitMonthStatus = "class='cgreen'";
                                                    }
                                                    else if (ebitMonthTotalValue >= 90)
                                                    {
                                                        ebitMonthStatus = "class='corg'";
                                                    }
                                                    else
                                                    {
                                                        ebitMonthStatus = "class='cred'";
                                                    }

                                                    //Total EBit 당월 
                                                    //<td class="ld"><span @Html.Raw(ebitMonthStatus)>@(ebitMonthTotalValue)%</span></td>
                                                    <td class="ld"><span @Html.Raw(ebitMonthStatus)>@(dashBoardCashPlanEbit == 0 ? "N/A" : Convert.ToString(Math.Round(dashBoardRateEbit, 0, MidpointRounding.AwayFromZero)) + "%")</span></td>
                                                }
                                                else if (planMonthEbitTotal == 0)
                                                {
                                                    var ebitMonthTotalValue = kpiPlanMinusValue - WebUtil.NumberRound(resultMonthEbitTotal, planMonthEbitTotal, 100, 0);

                                                    ebitMonthStatus = "class='cred'";

                                                    //Total
                                                    @*<td class="ld"><span @Html.Raw(ebitMonthStatus)>N/A</span></td>*@
                                                    <td class="ld"><span>N/A</span></td>
                                                }
                                            }
                                        </tr>
                                        <tr>
                                            @{

                                                var ebitAccumulateCount = 1;
                                                decimal ebitAccumulateTotal = 0;
                                                var ebitAccumulateStatus = string.Empty;
                                                var ebitAccumulateClass = string.Empty;
                                                decimal planEbitTotal = 0;
                                                decimal resultEbitTotal = 0;

                                                //누계
                                                foreach (var item in KpiSignal)
                                                {
                                                    // 2018.12.17 사용하지 않는 회사는 안보이게 하단에서 처리
                                                    if (item.KpiKind == Define.MONTHLY_TYPE.GetKey("누계"))
                                                    {
                                                        var planEbit = Math.Round(item.kpiPlanEbit, 2, MidpointRounding.AwayFromZero);
                                                        var resultEbit = Math.Round(item.kpiResultEbit, 2, MidpointRounding.AwayFromZero);
                                                        var strEvent = "onclick='funItemLink(" + item.companySeq.ToString() + ",3)'";

                                                        if (planEbit > 0 && item.isUse == "Y")
                                                        {
                                                            var ebitAccumulate = WebUtil.NumberRound(item.kpiResultEbit, item.kpiPlanEbit, 100, 0);

                                                            if (ebitAccumulate >= 100)
                                                            {
                                                                ebitAccumulateStatus = "class='cgreen'";
                                                            }
                                                            else if (ebitAccumulate >= 90)
                                                            {
                                                                ebitAccumulateStatus = "class='corg'";
                                                            }
                                                            else
                                                            {
                                                                ebitAccumulateStatus = "class='cred'";
                                                            }

                                                            if (ebitAccumulateCount == 1 || ebitAccumulateCount == 4 || ebitAccumulateCount == 7)
                                                            {
                                                                ebitAccumulateClass = "class='ld bg'";
                                                            }
                                                            else
                                                            {
                                                                ebitAccumulateClass = "class='bg'";
                                                            }

                                                            <td @Html.Raw(ebitAccumulateClass) @Html.Raw(strEvent)><span @Html.Raw(ebitAccumulateStatus) @Html.Raw(strCursor)>@(ebitAccumulate)%</span></td>

                                                        }
                                                        else if (planEbit < 0 && item.isUse == "Y")
                                                        {
                                                            var ebitAccumulate = kpiPlanMinusValue - WebUtil.NumberRound(item.kpiResultEbit, item.kpiPlanEbit, 100, 0);

                                                            if (ebitAccumulate >= 100)
                                                            {
                                                                ebitAccumulateStatus = "class='cgreen'";
                                                            }
                                                            else if (ebitAccumulate >= 90)
                                                            {
                                                                ebitAccumulateStatus = "class='corg'";
                                                            }
                                                            else
                                                            {
                                                                ebitAccumulateStatus = "class='cred'";
                                                            }

                                                            if (ebitAccumulateCount == 1 || ebitAccumulateCount == 4 || ebitAccumulateCount == 7)
                                                            {
                                                                ebitAccumulateClass = "class='ld bg'";
                                                            }
                                                            else
                                                            {
                                                                ebitAccumulateClass = "class='bg'";
                                                            }

                                                            <td @Html.Raw(ebitAccumulateClass) @Html.Raw(strEvent)><span @Html.Raw(ebitAccumulateStatus) @Html.Raw(strCursor)>@(ebitAccumulate)%</span></td>

                                                        }
                                                        else if (planEbit == 0 && item.isUse == "Y")
                                                        {
                                                            var ebitAccumulate = kpiPlanMinusValue - WebUtil.NumberRound(item.kpiResultEbit, item.kpiPlanEbit, 100, 0);

                                                            ebitAccumulateStatus = "class='cred'";

                                                            if (ebitAccumulateCount == 1 || ebitAccumulateCount == 4 || ebitAccumulateCount == 7)
                                                            {
                                                                ebitAccumulateClass = "class='ld bg'";
                                                            }
                                                            else
                                                            {
                                                                ebitAccumulateClass = "class='bg'";
                                                            }

                                                            @*<td @Html.Raw(ebitAccumulateClass)><span @Html.Raw(ebitAccumulateStatus)>N/A</span></td>*@
                                                            <td @Html.Raw(ebitAccumulateClass)><span>N/A</span></td>

                                                        }
                                                        if (item.companySeq.Equals("14") || item.companySeq.Equals("19"))
                                                        {

                                                            planEbit = 0;
                                                            resultEbit = 0;
                                                            planEbitTotal += planEbit;
                                                            resultEbitTotal += resultEbit;
                                                            ebitAccumulateCount++;
                                                        }
                                                        else
                                                        {
                                                            planEbitTotal += planEbit;
                                                            resultEbitTotal += resultEbit;
                                                            ebitAccumulateCount++;
                                                        }

                                                    }
                                                }

                                                if (planEbitTotal > 0)
                                                {
                                                    var ebitAccumulateTotalValue = WebUtil.NumberRound(resultEbitTotal, planEbitTotal, 100, 0);

                                                    if (ebitAccumulateTotalValue >= 100)
                                                    {
                                                        ebitAccumulateStatus = "class='cgreen'";
                                                    }
                                                    else if (ebitAccumulateTotalValue >= 90)
                                                    {
                                                        ebitAccumulateStatus = "class='corg'";
                                                    }
                                                    else
                                                    {
                                                        ebitAccumulateStatus = "class='cred'";
                                                    }

                                                    //Total EBIT 누계
                                                    //<td class="ld bg"><span @Html.Raw(ebitAccumulateStatus)>@ebitAccumulateTotalValue%</span></td>
                                                    <td class="ld bg"><span @Html.Raw(ebitAccumulateStatus)>@(dashBoardSumCashPlanEbit == 0 ? "N/A" : Convert.ToString(Math.Round(dashBoardSumRateEbit, 0, MidpointRounding.AwayFromZero)) + "%")</span></td>
                                                    
                                                }
                                                else if (planEbitTotal < 0)
                                                {
                                                    var ebitAccumulateTotalValue = kpiPlanMinusValue - WebUtil.NumberRound(resultEbitTotal, planEbitTotal, 100, 0);

                                                    if (ebitAccumulateTotalValue >= 100)
                                                    {
                                                        ebitAccumulateStatus = "class='cgreen'";
                                                    }
                                                    else if (ebitAccumulateTotalValue >= 90)
                                                    {
                                                        ebitAccumulateStatus = "class='corg'";
                                                    }
                                                    else
                                                    {
                                                        ebitAccumulateStatus = "class='cred'";
                                                    }
                                                    
                                                    //Total EBIT 누계
                                                    //<td class="ld bg"><span @Html.Raw(ebitAccumulateStatus)>@ebitAccumulateTotalValue%</span></td>
                                                    <td class="ld bg"><span @Html.Raw(ebitAccumulateStatus)>@(dashBoardSumCashPlanEbit == 0 ? "N/A" : Convert.ToString(Math.Round(dashBoardSumRateEbit, 0, MidpointRounding.AwayFromZero)) + "%")</span></td>

                                                }
                                                else if (planEbitTotal == 0)
                                                {
                                                    ebitAccumulateStatus = "class='cred'";

                                                    //Total
                                                    @*<td class="ld bg"><span @Html.Raw(ebitAccumulateStatus)>N/A</span></td>*@
                                                    <td class="ld bg"><span>N/A</span></td>
                                                }
                                            }
                                        </tr>
                                        <tr>
                                            @{
                                                var pbtMonthCount = 1;
                                                decimal pbtMonthTotal = 0;
                                                var pbtMonthStatus = string.Empty;
                                                var pbtMonthClass = string.Empty;
                                                decimal planMonthPbtTotal = 0;
                                                decimal resultMonthPbtTotal = 0;

                                                //당월 PBT
                                                foreach (var item in KpiSignal)
                                                {
                                                    // 2018.12.17 사용하지 않는 회사는 안 보이게 하단에서 처리
                                                    if (item.KpiKind == Define.MONTHLY_TYPE.GetKey("당월"))
                                                    {
                                                        var planPbt = Math.Round(item.kpiPlanPbt, 2, MidpointRounding.AwayFromZero);
                                                        var resultEbit = Math.Round(item.kpiResultPbt, 2, MidpointRounding.AwayFromZero);
                                                        var strEvent = "onclick='funItemLink(" + item.companySeq.ToString() + ",4)'";

                                                        if (planPbt > 0 && item.isUse == "Y")
                                                        {
                                                            var pbtAccumulate = WebUtil.NumberRound(item.kpiResultPbt, item.kpiPlanPbt, 100, 0);

                                                            if (pbtAccumulate >= 100)
                                                            {
                                                                pbtMonthStatus = "class='cgreen'";
                                                            }
                                                            else if (pbtAccumulate >= 90)
                                                            {
                                                                pbtMonthStatus = "class='corg'";
                                                            }
                                                            else
                                                            {
                                                                pbtMonthStatus = "class='cred'";
                                                            }

                                                            if (pbtMonthCount == 1 || pbtMonthCount == 4 || pbtMonthCount == 7)
                                                            {
                                                                pbtMonthClass = "class='ld'";
                                                            }
                                                            else
                                                            {
                                                                pbtMonthClass = "";
                                                            }

                                                            <td @Html.Raw(pbtMonthClass) @Html.Raw(strEvent)><span @Html.Raw(pbtMonthStatus) @Html.Raw(strCursor)>@(pbtAccumulate)%</span></td>

                                                        }
                                                        else if (planPbt < 0 && item.isUse == "Y")
                                                        {
                                                            var pbtAccumulate = kpiPlanMinusValue - WebUtil.NumberRound(item.kpiResultPbt, item.kpiPlanPbt, 100, 0);

                                                            if (pbtAccumulate >= 100)
                                                            {
                                                                pbtMonthStatus = "class='cgreen'";
                                                            }
                                                            else if (pbtAccumulate >= 90)
                                                            {
                                                                pbtMonthStatus = "class='corg'";
                                                            }
                                                            else
                                                            {
                                                                pbtMonthStatus = "class='cred'";
                                                            }

                                                            if (pbtMonthCount == 1 || pbtMonthCount == 4 || pbtMonthCount == 7)
                                                            {
                                                                pbtMonthClass = "class='ld'";
                                                            }
                                                            else
                                                            {
                                                                pbtMonthClass = "";
                                                            }

                                                            <td @Html.Raw(pbtMonthClass) @Html.Raw(strEvent)><span @Html.Raw(pbtMonthStatus) @Html.Raw(strCursor)>@(pbtAccumulate)%</span></td>
                                                        }
                                                        else if (planPbt == 0 && item.isUse == "Y")
                                                        {
                                                            pbtMonthStatus = "class='cred'";

                                                            if (pbtMonthCount == 1 || pbtMonthCount == 4 || pbtMonthCount == 7)
                                                            {
                                                                pbtMonthClass = "class='ld'";
                                                            }
                                                            else
                                                            {
                                                                pbtMonthClass = "";
                                                            }

                                                            @*<td @Html.Raw(pbtMonthClass)><span @Html.Raw(pbtMonthStatus)>N/A</span></td>*@
                                                            <td @Html.Raw(pbtMonthClass)><span>N/A</span></td>
                                                        }
                                                        if (item.companySeq.Equals("14") || item.companySeq.Equals("19"))
                                                        {
                                                            planPbt = 0;
                                                            resultEbit = 0;
                                                            planMonthPbtTotal += planPbt;
                                                            resultMonthPbtTotal += resultEbit;
                                                            pbtMonthCount++;
                                                        }
                                                        else
                                                        {

                                                            planMonthPbtTotal += planPbt;
                                                            resultMonthPbtTotal += resultEbit;
                                                            pbtMonthCount++;
                                                        }
                                                    }
                                                }

                                                if (planMonthPbtTotal > 0)
                                                {
                                                    var pbtMonthTotalValue = WebUtil.NumberRound(resultMonthPbtTotal, planMonthPbtTotal, 100, 0);

                                                    if (pbtMonthTotalValue >= 100)
                                                    {
                                                        pbtMonthStatus = "class='cgreen'";
                                                    }
                                                    else if (pbtMonthTotalValue >= 90)
                                                    {
                                                        pbtMonthStatus = "class='corg'";
                                                    }
                                                    else
                                                    {
                                                        pbtMonthStatus = "class='cred'";
                                                    }

                                                    //Total Pbt 당월
                                                    <td class="ld"><span @Html.Raw(pbtMonthStatus)>@pbtMonthTotalValue%</span></td>
                                                    <!--<td class="ld"><span @Html.Raw(pbtMonthStatus)>@(dashBoardRatePbt == 0 ? "N/A" : Convert.ToString(Math.Round(dashBoardRatePbt, 0, MidpointRounding.AwayFromZero)) + "%")</span></td>-->

                                                }
                                                else if (planMonthPbtTotal < 0)
                                                {
                                                    //var pbtMonthTotalValue = kpiPlanMinusValue - WebUtil.NumberRound(pbtMonthTotal, pbtMonthCount, 100, 0);
                                                    var pbtMonthTotalValue = kpiPlanMinusValue - WebUtil.NumberRound(resultMonthPbtTotal, planMonthPbtTotal, 100, 0);

                                                    if (pbtMonthTotalValue >= 100)
                                                    {
                                                        pbtMonthStatus = "class='cgreen'";
                                                    }
                                                    else if (pbtMonthTotalValue >= 90)
                                                    {
                                                        pbtMonthStatus = "class='corg'";
                                                    }
                                                    else
                                                    {
                                                        pbtMonthStatus = "class='cred'";
                                                    }

                                                    //Total Pbt 당월
                                                    <td class="ld"><span @Html.Raw(pbtMonthStatus)>@pbtMonthTotalValue%</span></td>
                                                    <!--<td class="ld"><span @Html.Raw(pbtMonthStatus)>@(dashBoardRatePbt == 0 ? "N/A" : Convert.ToString(Math.Round(dashBoardRatePbt, 0, MidpointRounding.AwayFromZero)) + "%")</span></td>-->

                                                }
                                                else if (planMonthPbtTotal == 0)
                                                {
                                                    pbtMonthStatus = "class='cred'";

                                                    //Total
                                                    <td class="ld"><span @Html.Raw(pbtMonthStatus)>N/A</span></td>
                                                }
                                                <!--/*Total Pbt 당월 resultMonthPbtTotal : @(resultMonthPbtTotal) , planMonthPbtTotal : @(planMonthPbtTotal) , Rate : @(kpiPlanMinusValue - WebUtil.NumberRound(resultMonthPbtTotal, planMonthPbtTotal, 100, 0)) */-->
                                            }
                                          
                                        </tr>
                                        <tr>
                                            @{
                                                var pbtAccumulateCount = 1;
                                                decimal pbtAccumulateTotal = 0;
                                                var pbtAccumulateStatus = string.Empty;
                                                var pbtAccumulateClass = string.Empty;
                                                decimal planPbtTotal = 0;
                                                decimal resultPbtTotal = 0;

                                                //누계 PBT
                                                foreach (var item in KpiSignal)
                                                {
                                                    // 2018.12.17 사용하지 않는 회사는 안 보이게 하단에서 처리
                                                    if (item.KpiKind == Define.MONTHLY_TYPE.GetKey("누계"))
                                                    {
                                                        var planPbt = Math.Round(item.kpiPlanPbt, 2, MidpointRounding.AwayFromZero); // WebUtil.NumberRound(item.kpiResultPbt, item.kpiPlanPbt, 100, 0);
                                                        var resultPbt = Math.Round(item.kpiResultPbt, 2, MidpointRounding.AwayFromZero);
                                                        var strEvent = "onclick='funItemLink(" + item.companySeq.ToString() + ",4)'";

                                                        if (planPbt > 0 && item.isUse == "Y")
                                                        {
                                                            var pbtAccumulate = WebUtil.NumberRound(item.kpiResultPbt, item.kpiPlanPbt, 100, 0);//Math.Round(item.KpiSignalRatePbt, 0);

                                                            if (pbtAccumulate >= 100)
                                                            {
                                                                pbtAccumulateStatus = "class='cgreen'";
                                                            }
                                                            else if (pbtAccumulate >= 90)
                                                            {
                                                                pbtAccumulateStatus = "class='corg'";
                                                            }
                                                            else
                                                            {
                                                                pbtAccumulateStatus = "class='cred'";
                                                            }

                                                            if (pbtAccumulateCount == 1 || pbtAccumulateCount == 4 || pbtAccumulateCount == 7)
                                                            {
                                                                pbtAccumulateClass = "class='ld bg'";
                                                            }
                                                            else
                                                            {
                                                                pbtAccumulateClass = "class='bg'";
                                                            }

                                                            <td @Html.Raw(pbtAccumulateClass) @Html.Raw(strEvent)><span @Html.Raw(pbtAccumulateStatus) @Html.Raw(strCursor)>@(pbtAccumulate)%</span></td>

                                                            pbtAccumulateTotal += pbtAccumulate;
                                                        }
                                                        else if (planPbt < 0 && item.isUse == "Y")
                                                        {
                                                            var pbtAccumulate = kpiPlanMinusValue - WebUtil.NumberRound(item.kpiResultPbt, item.kpiPlanPbt, 100, 0);

                                                            if (pbtAccumulate >= 100)
                                                            {
                                                                pbtAccumulateStatus = "class='cgreen'";
                                                            }
                                                            else if (pbtAccumulate >= 90)
                                                            {
                                                                pbtAccumulateStatus = "class='corg'";
                                                            }
                                                            else
                                                            {
                                                                pbtAccumulateStatus = "class='cred'";
                                                            }

                                                            if (pbtAccumulateCount == 1 || pbtAccumulateCount == 4 || pbtAccumulateCount == 7)
                                                            {
                                                                pbtAccumulateClass = "class='ld bg'";
                                                            }
                                                            else
                                                            {
                                                                pbtAccumulateClass = "class='bg'";
                                                            }

                                                            <td @Html.Raw(pbtAccumulateClass) @Html.Raw(strEvent)><span @Html.Raw(pbtAccumulateStatus) @Html.Raw(strCursor)>@(pbtAccumulate)%</span></td>

                                                            pbtAccumulateTotal += pbtAccumulate;
                                                        }
                                                        else if (planPbt == 0 && item.isUse == "Y")
                                                        {
                                                            var pbtAccumulate = kpiPlanMinusValue - WebUtil.NumberRound(item.kpiResultPbt, item.kpiPlanPbt, 100, 0);

                                                            pbtAccumulateStatus = "class='cred'";

                                                            if (pbtAccumulateCount == 1 || pbtAccumulateCount == 4 || pbtAccumulateCount == 7)
                                                            {
                                                                pbtAccumulateClass = "class='ld bg'";
                                                            }
                                                            else
                                                            {
                                                                pbtAccumulateClass = "class='bg'";
                                                            }

                                                            @*<td @Html.Raw(pbtAccumulateClass)><span @Html.Raw(pbtAccumulateStatus)>N/A</span></td>*@
                                                            <td @Html.Raw(pbtAccumulateClass)><span>N/A</span></td>

                                                            pbtAccumulateTotal += pbtAccumulate;
                                                        }
                                                        if (item.companySeq.Equals("14") || item.companySeq.Equals("19"))
                                                        {
                                                            planPbt = 0;
                                                            resultPbt= 0;
                                                            planPbtTotal += planPbt;
                                                            resultPbtTotal += resultPbt;
                                                            pbtAccumulateCount++;
                                                        }
                                                        else
                                                        {

                                                            planPbtTotal += planPbt;
                                                            resultPbtTotal += resultPbt;
                                                            pbtAccumulateCount++;
                                                        }
                                                    }
                                                }

                                                if (planPbtTotal > 0)
                                                {


                                                    var pbtAccumulateTotalValue = WebUtil.NumberRound(resultPbtTotal, planPbtTotal, 100, 0);

                                                    if (pbtAccumulateTotalValue >= 100)
                                                    {
                                                        pbtAccumulateStatus = "class='cgreen'";
                                                    }
                                                    else if (pbtAccumulateTotalValue >= 90)
                                                    {
                                                        pbtAccumulateStatus = "class='corg'";
                                                    }
                                                    else
                                                    {
                                                        pbtAccumulateStatus = "class='cred'";
                                                    }

                                                    //Total Pbt 누적 @WebUtil.NumberRound(resultPbtTotal, planPbtTotal, 100, 0);
                                                    <td class="ld bg"><span @Html.Raw(pbtAccumulateStatus)>@pbtAccumulateTotalValue%</span></td>
                                                    <!--<td class="ld bg"><span @Html.Raw(ebitAccumulateStatus)>@(dashBoardSumRatePbt == 0 ? "N/A" : Convert.ToString(Math.Round(dashBoardSumRatePbt, 0, MidpointRounding.AwayFromZero)) + "%")</span></td>-->
                                                }
                                                else if (planPbtTotal < 0)
                                                {
                                                    var pbtAccumulateTotalValue = kpiPlanMinusValue - WebUtil.NumberRound(resultPbtTotal, planPbtTotal, 100, 0);

                                                    if (pbtAccumulateTotalValue >= 100)
                                                    {
                                                        pbtAccumulateStatus = "class='cgreen'";
                                                    }
                                                    else if (pbtAccumulateTotalValue >= 90)
                                                    {
                                                        pbtAccumulateStatus = "class='corg'";
                                                    }
                                                    else
                                                    {
                                                        pbtAccumulateStatus = "class='cred'";
                                                    }

                                                    //Total Pbt 누적 @WebUtil.NumberRound(resultPbtTotal, planPbtTotal, 100, 0)
                                                     <td class="ld bg"><span @Html.Raw(pbtAccumulateStatus)>@pbtAccumulateTotalValue%</span></td>
                                                    <!--<td class="ld bg"><span @Html.Raw(ebitAccumulateStatus)>@(dashBoardSumRatePbt == 0 ? "N/A" : Convert.ToString(Math.Round(dashBoardSumRatePbt, 0, MidpointRounding.AwayFromZero)) + "%")</span></td>-->

                                                }
                                                else if (planPbtTotal == 0)
                                                {
                                                    pbtAccumulateStatus = "class='cred'";

                                                    //Total
                                                    @*<td class="ld bg"><span @Html.Raw(pbtAccumulateStatus)>N/A</span></td>*@
                                                    <td class="ld bg"><span>N/A</span></td>
                                                }
                                            }
                                            <!--*Total Pbt 누계 resultPbtTotal : @(resultPbtTotal) , planPbtTotal : @(planPbtTotal) , Rate : @(WebUtil.NumberRound(resultPbtTotal, planPbtTotal, 100, 0)) */-->
                                        </tr>
                                        <tr>
                                            @{
                                                var KpiLiabilitiesCount = 1;
                                                decimal KpiLiabilitiesTotal = 0;
                                                var KpiLiabilitiesStatus = string.Empty;
                                                var KpiLiabilitiesClass = string.Empty;
                                                decimal planLiabilitiesTotal = 0;
                                                decimal resultLiabilitiesTotal = 0;

                                                //누계 부채비율
                                                foreach (var item in kpiSignalLiabilitiesRate)
                                                {
                                                    //계획 - 부채비율
                                                    var kpiPlanLiabilities = WebUtil.NumberRound(item.planLiabilities, item.planCapital, 100, 0);
                                                    //실적 - 부채비율
                                                    var kpiResultLiabilities = WebUtil.NumberRound(item.resultLiabilities, item.resultCapital, 100, 0);
                                                    var strEvent = "onclick='funItemLink(" + item.companySeq.ToString() + ",5)'";

                                                    if (kpiPlanLiabilities > 0)
                                                    {
                                                        var KpiSignalLiabilities = kpiPlanMinusValue - WebUtil.NumberRound(kpiResultLiabilities, kpiPlanLiabilities, 100, 0);

                                                        if (KpiSignalLiabilities >= 100)
                                                        {
                                                            KpiLiabilitiesStatus = "class='cgreen'";
                                                        }
                                                        else if (KpiSignalLiabilities >= 90)
                                                        {
                                                            KpiLiabilitiesStatus = "class='corg'";
                                                        }
                                                        else
                                                        {
                                                            KpiLiabilitiesStatus = "class='cred'";
                                                        }

                                                        if (KpiLiabilitiesCount == 1 || KpiLiabilitiesCount == 4 || KpiLiabilitiesCount == 7)
                                                        {
                                                            KpiLiabilitiesClass = "class='ld bg'";
                                                        }
                                                        else
                                                        {
                                                            KpiLiabilitiesClass = "class='bg'";
                                                        }

                                                        <td @Html.Raw(KpiLiabilitiesClass) @Html.Raw(strEvent)><span @Html.Raw(KpiLiabilitiesStatus) @Html.Raw(strCursor)>@(kpiPlanMinusValue - WebUtil.NumberRound(kpiResultLiabilities, kpiPlanLiabilities, 100, 0))%</span></td>
                                                    }
                                                    else if (kpiPlanLiabilities < 0)
                                                    {
                                                        var KpiSignalLiabilities = kpiPlanMinusValue - WebUtil.NumberRound(kpiResultLiabilities, kpiPlanLiabilities, 100, 0);

                                                        if (KpiSignalLiabilities >= 100)
                                                        {
                                                            KpiLiabilitiesStatus = "class='cgreen'";
                                                        }
                                                        else if (KpiSignalLiabilities >= 90)
                                                        {
                                                            KpiLiabilitiesStatus = "class='corg'";
                                                        }
                                                        else
                                                        {
                                                            KpiLiabilitiesStatus = "class='cred'";
                                                        }

                                                        if (KpiLiabilitiesCount == 1 || KpiLiabilitiesCount == 4 || KpiLiabilitiesCount == 7)
                                                        {
                                                            KpiLiabilitiesClass = "class='ld bg'";
                                                        }
                                                        else
                                                        {
                                                            KpiLiabilitiesClass = "class='bg'";
                                                        }

                                                        <td @Html.Raw(KpiLiabilitiesClass) @Html.Raw(strEvent)><span @Html.Raw(KpiLiabilitiesStatus) @Html.Raw(strCursor)>@(200 - WebUtil.NumberRound(kpiResultLiabilities, kpiPlanLiabilities, 100, 0))%</span></td>
                                                    }
                                                    else if (kpiPlanLiabilities == 0)
                                                    {
                                                        KpiLiabilitiesStatus = "class='cred'";

                                                        if (KpiLiabilitiesCount == 1 || KpiLiabilitiesCount == 4 || KpiLiabilitiesCount == 7)
                                                        {
                                                            KpiLiabilitiesClass = "class='ld bg'";
                                                        }
                                                        else
                                                        {
                                                            KpiLiabilitiesClass = "class='bg'";
                                                        }

                                                        @*<td @Html.Raw(KpiLiabilitiesClass)><span @Html.Raw(KpiLiabilitiesStatus)>N/A</span></td>*@
                                                        <td @Html.Raw(KpiLiabilitiesClass)><span>N/A</span></td>
                                                    }

                                                    planLiabilitiesTotal += kpiPlanLiabilities;
                                                    resultLiabilitiesTotal += kpiResultLiabilities;
                                                    KpiLiabilitiesCount++;
                                                }

                                                // 2018.12.26 부채비율 합계 안 보이게 삭제

                                                if (planLiabilitiesTotal > 0)
                                                {
                                                    var KpiLiabilitiesTotalValue = kpiPlanMinusValue - WebUtil.NumberRound(resultLiabilitiesTotal, planLiabilitiesTotal, 100, 0);

                                                    if (KpiLiabilitiesTotalValue >= 100)
                                                    {
                                                        KpiLiabilitiesStatus = "class='cgreen'";
                                                    }
                                                    else if (KpiLiabilitiesTotalValue >= 90)
                                                    {
                                                        KpiLiabilitiesStatus = "class='corg'";
                                                    }
                                                    else
                                                    {
                                                        KpiLiabilitiesStatus = "class='cred'";
                                                    }

                                                    //Total
                                                    <td class="ld bg">@*<span @Html.Raw(KpiLiabilitiesStatus)>@KpiLiabilitiesTotalValue%</span>*@</td>
                                                }
                                                else if (planLiabilitiesTotal < 0)
                                                {
                                                    var KpiLiabilitiesTotalValue = kpiPlanMinusValue - WebUtil.NumberRound(resultLiabilitiesTotal, planLiabilitiesTotal, 100, 0);

                                                    if (KpiLiabilitiesTotalValue >= 100)
                                                    {
                                                        KpiLiabilitiesStatus = "class='cgreen'";
                                                    }
                                                    else if (KpiLiabilitiesTotalValue >= 90)
                                                    {
                                                        KpiLiabilitiesStatus = "class='corg'";
                                                    }
                                                    else
                                                    {
                                                        KpiLiabilitiesStatus = "class='cred'";
                                                    }

                                                    //Total
                                                    <td class="ld bg">@*<span @Html.Raw(KpiLiabilitiesStatus)>@KpiLiabilitiesTotalValue%</span>*@</td>
                                                }
                                                else if (planLiabilitiesTotal < 0)
                                                {
                                                    KpiLiabilitiesStatus = "class='cred'";

                                                    //Totalqa
                                                    @*<td class="ld bg"><span @Html.Raw(KpiLiabilitiesStatus)>N/A</span></td>*@
                                                    <td class="ld bg">@*<span>N/A</span>*@</td>
                                                }
                                            }
                                        </tr>
                                        <tr>
                                            @{
                                                var gRoic = kpiSignalLiabilitiesRate.GroupBy(g => g.year).Select(sl => new GroupMain
                                                {
                                                    AfterTaxOperationProfit = sl.Sum(s => s.AfterTaxOperationProfit),
                                                    PainInCapital = sl.Sum(s => s.PainInCapital),
                                                    planAfterTaxOperationProfit = sl.Sum(s => s.planAfterTaxOperationProfit),
                                                    planPainInCapital = sl.Sum(s => s.planPainInCapital)
                                                }).FirstOrDefault() as GroupMain;

                                                int rowCount = 1;
                                                string kpiStatus = string.Empty;
                                                string kpiClass = string.Empty;
                                                foreach (var item in kpiSignalLiabilitiesRate)
                                                {
                                                    // 최대한 원본에 가깝기 하기 위헤 8자리 반올림
                                                    var roic = WebUtil.NumberRound(item.AfterTaxOperationProfit, item.PainInCapital, 100, 8);
                                                    var newroic = WebUtil.NewRoic(roic, month);
                                                    var planRoic = WebUtil.NumberRound(item.planAfterTaxOperationProfit, item.planPainInCapital, 100, 8);
                                                    var newPlanRoic = WebUtil.NewRoic(planRoic, month);
                                                    var strEvent = "onclick='funItemLink(" + item.companySeq.ToString() + ",5)'";

                                                    var kpiPlanroic = WebUtil.NumberRound(item.kpiPlanRoic, item.planCapital, 100, 0);
                                                    //실적 - 부채비율

                                                    if (newPlanRoic > 0)
                                                    {
                                                        var mNewRoic = WebUtil.NumberRound(newroic, newPlanRoic, 100, 0);

                                                        if (mNewRoic >= 100) { kpiStatus = "class='cgreen'"; }
                                                        else if (mNewRoic >= 90) { kpiStatus = "class='corg'"; }
                                                        else { kpiStatus = "class='cred'"; }

                                                        if (rowCount == 1 || rowCount == 4 || rowCount == 7) { kpiClass = "class='ld bg'"; }
                                                        else { kpiClass = "class='bg'"; }

                                                        <td @Html.Raw(kpiClass) @Html.Raw(strEvent)><span @Html.Raw(kpiStatus) @Html.Raw(strCursor)>@(mNewRoic)%</span></td>
                                                    }
                                                    else if (newPlanRoic < 0)
                                                    {
                                                        var mNewRoic = kpiPlanMinusValue - WebUtil.NumberRound(newroic, newPlanRoic, 100, 0);

                                                        if (mNewRoic >= 100) { kpiStatus = "class='cgreen'"; }
                                                        else if (mNewRoic >= 90) { kpiStatus = "class='corg'"; }
                                                        else { kpiStatus = "class='cred'"; }

                                                        if (rowCount == 1 || rowCount == 4 || rowCount == 7) { kpiClass = "class='ld bg'"; }
                                                        else { kpiClass = "class='bg'"; }

                                                        <td @Html.Raw(kpiClass) @Html.Raw(strEvent)><span @Html.Raw(kpiStatus) @Html.Raw(strCursor)>@(mNewRoic)%</span></td>

                                                    }
                                                    else if (newPlanRoic == 0)
                                                    {
                                                        if (rowCount == 1 || rowCount == 4 || rowCount == 7) { kpiClass = "class='ld bg'"; }
                                                        else { kpiClass = "class='bg'"; }
                                                        <td @Html.Raw(kpiClass)><span>N/A</span></td>
                                                    }
                                                    rowCount++;
                                                }

                                                decimal gPlanRoic = 0;
                                                decimal gResultRoic = 0;
                                                if (search.year == "2019")
                                                {
                                                    gPlanRoic = WebUtil.NewRoic(WebUtil.NumberRound(gRoic.planAfterTaxOperationProfit, gRoic.planPainInCapital, 100, 8), month);
                                                    gResultRoic = WebUtil.NewRoic(WebUtil.NumberRound(gRoic.AfterTaxOperationProfit, gRoic.PainInCapital, 100, 8), month);
                                                }
                                                else
                                                {

                                                    gPlanRoic = dashBoardPlanRoic;
                                                    gResultRoic = dashBoardRoic;
                                                }

                                                gPlanRoic = dashBoardPlanRoic;
                                                gResultRoic = dashBoardRoic;
                                                if (gPlanRoic > 0)
                                                {
                                                    var mNewRoic = WebUtil.NumberRound(gResultRoic, gPlanRoic, 100, 0);

                                                    if (mNewRoic >= 100) { kpiStatus = "class='cgreen'"; }
                                                    else if (mNewRoic >= 90) { kpiStatus = "class='corg'"; }
                                                    else { kpiStatus = "class='cred'"; }

                                                    <td class='ld bg'><span @Html.Raw(kpiStatus)>@(mNewRoic)%</span></td>
                                                }
                                                else if (gPlanRoic < 0)
                                                {
                                                    var mNewRoic = kpiPlanMinusValue - WebUtil.NumberRound(gResultRoic, gPlanRoic, 100, 0);

                                                    if (mNewRoic >= 100) { kpiStatus = "class='cgreen'"; }
                                                    else if (mNewRoic >= 90) { kpiStatus = "class='corg'"; }
                                                    else { kpiStatus = "class='cred'"; }

                                                    <td class='ld bg'><span @Html.Raw(kpiStatus)>@(mNewRoic)%</span></td>
                                                }
                                                else if (gPlanRoic == 0)
                                                {
                                                    <td class="ld bg"><span>N/A</span></td>
                                                }
                                            }
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>

                    @*<div class="tbl_scroll_wrap" id="kpiTable">
                            <div class="tbl_box">
                                <table class="tbl th_hor tblfix">
                                    <thead>
                                        <tr>
                                            <th scope="col" colspan="2" class="row2">구분</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <th scope="row">FCF</th>
                                            <th scope="row">누계</th>
                                        </tr>
                                        <tr>
                                            <th scope="row" rowspan="2">매출</th>
                                            <th scope="row">당월</th>
                                        </tr>
                                        <tr>
                                            <th scope="row" class="bg">누계</th>
                                        </tr>
                                        <tr>
                                            <th scope="row" rowspan="2">EBIT</th>
                                            <th scope="row">당월</th>
                                        </tr>
                                        <tr>
                                            <th scope="row" class="bg">누계</th>
                                        </tr>
                                        <tr>
                                            <th scope="row" rowspan="2">PBT</th>
                                            <th scope="row">당월</th>
                                        </tr>
                                        <tr>
                                            <th scope="row" class="bg">누계</th>
                                        </tr>
                                        <tr>
                                            <th scope="row">부채비율</th>
                                            <th scope="row">누계</th>
                                        </tr>
                                    </tbody>
                                </table><!--tbl-->
                            </div><!--//tbl_box-->

                            <div class="tbl_scroll">
                                <div class="tbl_add">
                                    <table class="tbl th_hor">
                                        <thead>
                                            <tr>
                                                <th colspan="3" class="ld">지주</th>
                                                <th colspan="3" class="ld">자동차</th>
                                                <th colspan="2" class="ld">건설</th>
                                                <th rowspan="2" class="ld">그룹<br>Total</th>
                                            </tr>
                                            <tr>
                                                <th class="ld">한라홀딩스(사업)</th>
                                                <th>한라홀딩스(지주)</th>
                                                <th>JJ한라</th>
                                                <th class="ld">만도</th>
                                                <th>만도헬라</th>
                                                <th>만도브로제</th>
                                                <th class="ld">㈜한라</th>
                                                <th>한라엔컴</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                <td class="ld"><span class="cred">89%</span></td>
                                                <td><span class="cgreen">163%</span></td>
                                                <td><span class="cgreen">163%</span></td>
                                                <td class="ld"><span class="cred">89%</span></td>
                                                <td><span class="cgreen">163%</span></td>
                                                <td><span class="cgreen">163%</span></td>
                                                <td class="ld"><span class="cred">89%</span></td>
                                                <td><span class="cgreen">163%</span></td>
                                                <td class="ld"><span class="cred">89%</span></td>
                                            </tr>
                                            <tr>
                                                <td class="ld"><span class="cred">89%</span></td>
                                                <td><span class="cgreen">163%</span></td>
                                                <td><span class="cgreen">163%</span></td>
                                                <td class="ld"><span class="cred">89%</span></td>
                                                <td><span class="cgreen">163%</span></td>
                                                <td><span class="cgreen">163%</span></td>
                                                <td class="ld"><span class="cred">89%</span></td>
                                                <td><span class="cgreen">163%</span></td>
                                                <td class="ld"><span class="cred">89%</span></td>
                                            </tr>
                                            <tr>
                                                <td class="ld bg"><span class="cred">89%</span></td>
                                                <td class="bg"><span class="cgreen">163%</span></td>
                                                <td class="bg"><span class="cgreen">163%</span></td>
                                                <td class="ld bg"><span class="cred">89%</span></td>
                                                <td class="bg"><span class="cgreen">163%</span></td>
                                                <td class="bg"><span class="cgreen">163%</span></td>
                                                <td class="ld bg"><span class="cred">89%</span></td>
                                                <td class="bg"><span class="cgreen">163%</span></td>
                                                <td class="ld bg"><span class="cred">89%</span></td>
                                            </tr>
                                            <tr>
                                                <td class="ld"><span class="cred">89%</span></td>
                                                <td><span class="cgreen">163%</span></td>
                                                <td><span class="cgreen">163%</span></td>
                                                <td class="ld"><span class="cred">89%</span></td>
                                                <td><span class="cgreen">163%</span></td>
                                                <td><span class="cgreen">163%</span></td>
                                                <td class="ld"><span class="cred">89%</span></td>
                                                <td><span class="cgreen">163%</span></td>
                                                <td class="ld"><span class="cred">89%</span></td>
                                            </tr>
                                            <tr>
                                                <td class="ld bg"><span class="cred">89%</span></td>
                                                <td class="bg"><span class="cgreen">163%</span></td>
                                                <td class="bg"><span class="cgreen">163%</span></td>
                                                <td class="ld bg"><span class="cred">89%</span></td>
                                                <td class="bg"><span class="cgreen">163%</span></td>
                                                <td class="bg"><span class="cgreen">163%</span></td>
                                                <td class="ld bg"><span class="cred">89%</span></td>
                                                <td class="bg"><span class="cgreen">163%</span></td>
                                                <td class="ld bg"><span class="cred">89%</span></td>
                                            </tr>
                                            <tr>
                                                <td class="ld"><span class="cred">89%</span></td>
                                                <td><span class="cgreen">163%</span></td>
                                                <td><span class="cgreen">163%</span></td>
                                                <td class="ld"><span class="cred">89%</span></td>
                                                <td><span class="cgreen">163%</span></td>
                                                <td><span class="cgreen">163%</span></td>
                                                <td class="ld"><span class="cred">89%</span></td>
                                                <td><span class="cgreen">163%</span></td>
                                                <td class="ld"><span class="cred">89%</span></td>
                                            </tr>
                                            <tr>
                                                <td class="ld"><span class="cred">89%</span></td>
                                                <td><span class="cgreen">163%</span></td>
                                                <td><span class="cgreen">163%</span></td>
                                                <td class="ld"><span class="cred">89%</span></td>
                                                <td><span class="cgreen">163%</span></td>
                                                <td><span class="cgreen">163%</span></td>
                                                <td class="ld"><span class="cred">89%</span></td>
                                                <td><span class="cgreen">163%</span></td>
                                                <td class="ld"><span class="cred">89%</span></td>
                                            </tr>
                                            <tr>
                                                <td class="ld"><span class="cred">89%</span></td>
                                                <td><span class="cgreen">163%</span></td>
                                                <td><span class="cgreen">163%</span></td>
                                                <td class="ld"><span class="cred">89%</span></td>
                                                <td><span class="cgreen">163%</span></td>
                                                <td><span class="cgreen">163%</span></td>
                                                <td class="ld"><span class="cred">89%</span></td>
                                                <td><span class="cgreen">163%</span></td>
                                                <td class="ld"><span class="cred">89%</span></td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div><!--//tbl_scroll-->

                        </div><!--//tbl_scroll_wrap-->*@
                    <div class="tbl_info">
                        <strong>Signal : 목표대비 달성률</strong>
                        <span class="cgreen">100% 이상</span>
                        <span class="corg">90%~100% </span>
                        <span class="cred">90% 이하</span>
                    </div><!--//tbl_info-->

                </div><!--//graph-->
            </div><!--//box-->

        </div><!--//graph_box-->
    </div><!--//graph_box_wrap-->
    <!--S: 손익 목표 달성 현황-->
    <div class="graph_box_wrap">
        <h2><a href="#">손익 목표 달성 현황</a></h2>
        <div class="graph_box pd0">

            <div class="box">
                <div class="chart_box chart_box0">
                    <span class="p_unit">(단위: 억원, %)</span>
                    <span class="p_xaxis">EBIT 달성률</span>
                    <span class="p_yaxis">Sales<br />달성률</span>
                    <span class="p_standard">※ 누계실적 기준</span>
                    <!-- // TODO: 190411 -->
                    <!-- <span class="p_desc p_desc0">영업이익 미달</span> -->
                    <!-- <span class="p_desc p_desc1">매출 미달<br />영업이익 미달</span> -->
                    <!-- <span class="p_desc p_desc2">매출 미달</span> -->
                    <div class="chart chart_type6" id="chart1"></div>
                    <div class="p_navi">
                        <ul>
                            <li><a href="#"><span></span></a></li>
                        </ul>
                    </div>
                    @{
                        var kpiGraphText = string.Empty;

                        foreach (var item in KpiGraph)
                        {
                            kpiGraphText += "{key: '" + item.KpiGraphCompanyName + "', union : '" + item.unionName + "'," +
                                "values : [{ x : " + item.kpiGraphEbitRate + ", y : " + item.kpiGraphSalesRate + ", v0 : { k : 'EBIT', v : " + Math.Round(item.kpiGraphEbit, 0, MidpointRounding.AwayFromZero) + "}, v1 : { k : 'SALES', v : " + Math.Round(item.kpiGraphSales, 0, MidpointRounding.AwayFromZero) + "}, v2 : { k : '(%)', v : " + WebUtil.NumberRound(item.kpiGraphEbit, item.kpiGraphSales, 100, 1) + "}}]},";
                        }
                    }
                    <script>
                            ( function(){
                                var data = [
                                  //{ key: '한라홀딩스(사업)', values: [ { x: 101, y: 101, v0: { k: 'EBIT', v: 5000 }, v1: { k: 'SALES', v: 200 }, v2: { k: '(%)', v: 3.9 } } ] },
                                  //{ key: '한라홀딩스(지주)', values: [ { x: 101, y: 102, v0: { k: 'EBIT', v: 27805 }, v1: { k: 'SALES', v: 1091 }, v2: { k: '(%)', v: 3.9 } } ] },
                                  //{ key: 'JJ한라', values: [ { x: 120, y: 80, v0: { k: 'EBIT', v: 27805 }, v1: { k: 'SALES', v: 1091 }, v2: { k: '(%)', v: 3.9 } } ] },
                                  //{ key: '만도', values: [ { x: 20, y: 20, v0: { k: 'EBIT', v: 27805 }, v1: { k: 'SALES', v: 1091 }, v2: { k: '(%)', v: 3.9 } } ] },
                                  //{ key: '만도헬라', values: [ { x: 95, y: 90, v0: { k: 'EBIT', v: 27805 }, v1: { k: 'SALES', v: 1091 }, v2: { k: '(%)', v: 3.9 } } ] },
                                  //{ key: '만도브로제', values: [ { x: 180.6, y: 150, v0: { k: 'EBIT', v: 27805 }, v1: { k: 'SALES', v: 1091 }, v2: { k: '(%)', v: 3.9 } } ] },
                                  //{ key: '㈜한라', values: [ { x: 140, y: 103, v0: { k: 'EBIT', v: 27805 }, v1: { k: 'SALES', v: 1091 }, v2: { k: '(%)', v: 3.9 } } ] }
                                  @Html.Raw(kpiGraphText)
                                ];
                                data.map( function( obj0 ){
                                    obj0.values.map( function( obj1 ){
                                        obj1.x1 = obj1.x;
                                        obj1.x = obj1.x > 160 ? 160 : obj1.x < 40 ? 40 : obj1.x;
                                        obj1.y1 = obj1.y;
                                        obj1.y = obj1.y > 125 ? 125 : obj1.y < 75 ? 75 : obj1.y;
                                    } );
                                } );

                                MYAPP.graph.type6( data, '#chart1', '.chart_box0 .p_navi' );
                            } )();
                    </script>
                </div>
                <!-- chart_box -->
            </div><!--//box-->

        </div><!--//graph_box-->
    </div><!--//graph_box_wrap-->
    <!--S: Cash Flow-->
    <div class="graph_box_wrap">
        <h2><a href="#">Cash Flow</a></h2>
        <div class="graph_box">

            <div class="box">
                <div class="chart_box chart_box1">
                    <span class="p_unit">(단위: 억원)</span>
                    <div class="chart chart_type1" id="chart2"></div>
                    @{
                        var planCashFlowText = string.Empty;
                        var resultCashFlowText = string.Empty;
                        var changeText = string.Empty;

                        foreach (var item in cashFlowPlan)
                        {
                            if (item.groupMainCashFlowName == "세후EBITDA")
                            {
                                changeText = "세후,EBITDA";
                            }
                            else if (item.groupMainCashFlowName == "WC변동")
                            {
                                changeText = "W/C,변동";
                            }
                            else if (item.groupMainCashFlowName == "영업기타")
                            {
                                changeText = "영업,기타";
                            }
                            else if (item.groupMainCashFlowName == "NetCAPEX")
                            {
                                changeText = "Net,CAPEX";
                            }
                            else if (item.groupMainCashFlowName == "순금융비용")
                            {
                                changeText = "순금융,비용";
                            }
                            else if (item.groupMainCashFlowName == "월말현금")
                            {
                                changeText = search.mm + "월, 월말현금";
                            }
                            else
                            {
                                changeText = item.groupMainCashFlowName;
                            }

                            planCashFlowText += "{";
                            planCashFlowText += "name : '" + changeText + "' ,";
                            planCashFlowText += "value :" + item.groupMainCashFlowValue + "},";
                        }

                        resultCashFlowText = planCashFlowText.Substring(0, planCashFlowText.Length - 1);


                        var planSumCashFlowText = "";
                        var resultSumCashFlowText = "";
                        var changeSumText = "";

                        foreach (var item in cashFlowResult)
                        {
                            if (item.groupMainCashFlowName == "세후EBITDA")
                            {
                                changeSumText = "세후,EBITDA";
                            }
                            else if (item.groupMainCashFlowName == "WC변동")
                            {
                                changeSumText = "W/C,변동";
                            }
                            else if (item.groupMainCashFlowName == "영업기타")
                            {
                                changeSumText = "영업,기타";
                            }
                            else if (item.groupMainCashFlowName == "NetCAPEX")
                            {
                                changeSumText = "Net,CAPEX";
                            }
                            else if (item.groupMainCashFlowName == "순금융비용")
                            {
                                changeSumText = "순금융,비용";
                            }
                            else if (item.groupMainCashFlowName == "월말현금")
                            {
                                changeSumText = search.mm + "월, 월말현금";
                            }
                            else
                            {
                                changeSumText = item.groupMainCashFlowName;
                            }

                            planSumCashFlowText += "{";
                            planSumCashFlowText += "name : '" + changeSumText + "' ,";
                            planSumCashFlowText += "value :" + item.groupMainCashFlowValue + "},";
                        }

                        resultSumCashFlowText = planSumCashFlowText.Substring(0, planSumCashFlowText.Length - 1);
                    }
                    <script>
                            ( function(){
                                var data = {
                                    plan: [
                                        @Html.Raw(resultCashFlowText)
                                        //{ name: "연초현금", value: 7071.6 },
                                        //{ name: "세후,EBITDA", value: 2491 },
                                        //{ name: "W/C,변동", value: -477 },
                                        //{ name: "영업,기타", value: -983 },
                                        //{ name: "Net,CAPEX", value: -2816 },
                                        //{ name: "순금융,비용", value: -364 },
                                        //{ name: "재무", value: 1854 },
                                        //{ name: "기말현금", value: 6776 },
                                        //{ name: "가용현금", value: 70000 }
                                    ],
                                    result: [
                                        @Html.Raw(resultSumCashFlowText)
                                    ]
                                };
                                data = ( function( data ) {
                                    var calc = function( arr ) {
                                        var cumulative = 0;
                                        var classArr = [ 'start', 'c0', 'c0', 'c0', 'c1', 'c2', 'c3 noline', 'end noline', 'etc noline' ];
                                        for( var i = 0; i < arr.length; i++ ) {
                                            arr[ i ].name0 = arr[ i ].name.split( ',' )[ 0 ];
                                            arr[ i ].name1 = arr[ i ].name.split( ',' )[ 1 ];

                                            arr[ i ].start = i < 7 ? cumulative : 0;
                                            cumulative += arr[ i ].value;
                                            arr[ i ].end = i < 7 ? cumulative : arr[ i ].value;

                                            arr[ i ].class = classArr[ i ] + ( ( arr[ i ].value >= 0 ) ? ' positive' : ' negative' );
                                        }
                                        var arrClone = arr.slice();
                                        arrClone.pop();
                                        arrClone.sort( function(a, b){ return a.end - b.end } );
                                        arr[ 8 ].end = arrClone[ 7 ].end / 2;

                                        return arr;
                                    };
                                    var calcFcf = function( arr ) {
                                        var fcf = 0;
                                        for( var i = 1; i < 6; i++ ) {
                                            fcf += arr[ i ].value;
                                        }
                                        return fcf;
                                    };

                                    var plan = calc( data.plan );
                                    var result = calc( data.result );

                                    var gap = plan.map( function( obj, i ) {
                                        return { name: obj.name, value: result[ i ].value - obj.value }
                                    } );

                                    var fcfPlan = calcFcf( plan );
                                    var fcfResult = calcFcf( result );

                                    return { plan: plan, result: result, gap: gap, fcfPlan: fcfPlan, fcfResult: fcfResult };
                                } )( data );

                                MYAPP.graph.type1( data, '#chart2' );
                            } )();
                    </script>
                </div>
                <!-- chart_box -->
            </div><!--//box-->

        </div><!--//graph_box-->
    </div><!--//graph_box_wrap-->
    <!--S: 손익 (당월/누계)-->
    <div class="graph_box_wrap">
        <h2><a href="#">손익 (당월/누계)</a></h2>

        <div class="graph_box">

            <div class="box">
                <h3>@search.mm 월</h3>
                <div class="box_col_wrap">
                    <div class="col2 fl graph">
                        <div class="chart_box chart_box2" id="chart3">
                            <p class="p_title">Sales</p>
                            <span class="p_unit">(단위: 억원)</span>
                            <div class="chart chart_type2"></div>
                            <a class="bt_percentage" href="#"></a>
                            <div class="percentage">
                                <img class="bg" src="~/Contents/user/Common/img/percentage_bg.png" alt="">
                                <p>실적 비중</p>
                                <div class="chart chart_type12"></div>
                            </div>
                            @{
                                var resultSalesText = string.Empty;
                                decimal totalPreYearPlanSalesText = 0;
                                decimal totalPlanSalesText = 0;
                                decimal totalResultSalesText = 0;

                                //전년도 합계
                                foreach (var item in salesCalcList)
                                {
                                    //전년
                                    decimal preYearResultSales = 0;
                                    var resultSales = preYearSalesCalcList.Where(w => w.unionSeq == item.unionSeq)
                                                            .Select(s => new GroupMain
                                                            {
                                                                groupMainResultSales = s.groupMainResultSales
                                                            }).FirstOrDefault();

                                    if (resultSales == null)
                                    {
                                        preYearResultSales = 0;
                                    }
                                    else
                                    {
                                        preYearResultSales = resultSales.groupMainResultSales;
                                    }

                                    totalPreYearPlanSalesText += preYearResultSales;
                                }

                                //현재년 합계
                                foreach (var item in salesCalcList)
                                {

                                    //totalPlanSalesText += item.groupMainPlanSales;
                                    //totalResultSalesText += item.groupMainResultSales;
                                    //totalPlanSalesText = item.groupMainPlanSalesSum;
                                    //totalResultSalesText = item.groupMainResultSalesSum;
                                    totalPlanSalesText += item.groupMainPlanSales;
                                    totalResultSalesText += item.groupMainResultSales;
                                }

                                foreach (var item in salesCalcList)
                                {
                                    //전년
                                    decimal preYearResultSales = 0;
                                    var resultSales = preYearSalesCalcList.Where(w => w.unionSeq == item.unionSeq)
                                                            .Select(s => new GroupMain
                                                            {
                                                                groupMainResultSales = s.groupMainResultSales
                                                            }).FirstOrDefault();

                                    if (resultSales == null)
                                    {
                                        preYearResultSales = 0;
                                    }
                                    else
                                    {
                                        preYearResultSales = resultSales.groupMainResultSales;
                                    }

                                    // 2018.12.17 사용중인 부문만 표시
                                    if (item.isUse == "Y")
                                    {
                                        resultSalesText += "{ key :'" + item.unionName + "'," +
                                                            "values : [ { x: '전년', y :" + preYearResultSales + " ,total: { y: " + totalPreYearPlanSalesText + " }}," +
                                                                    " { x: '계획', y : " + item.groupMainPlanSales + ",total: { y: " + totalPlanSalesText + " }}," +
                                                                    " { x: '실적', y : " + item.groupMainResultSales + ",total: { y: " + totalResultSalesText + " }} ] },";
                                    }
                                }


                                //SubChart
                                var resultSalesSubChartText = string.Empty;

                                if (salesCalcSubChart != null)
                                {
                                    foreach (var item in salesCalcSubChart)
                                    {
                                        resultSalesSubChartText = "{ key: '지주', y: " + item.groupMainCompanySales + " },{ key: '자동차', y: " + item.groupMainCarSales + " },{ key: '건설', y: " + item.groupMainBuildSales + " }";
                                    }
                                }

                            }
                            <script>
                                    ( function(){
                                        var data0 = [
                                            @Html.Raw(resultSalesText)
                                        ];

                                        var data1 = [
                                            //{ key: "지주", y: 50.5 },
                                            //{ key: "건설", y: 30 },
                                            //{ key: "자동차", y: 20 }
                                            @Html.Raw(resultSalesSubChartText)
                                        ];

                                        MYAPP.graph.type3( data0, data1, '#chart3' );
                                    } )();
                            </script>
                        </div>
                        <!-- chart_box -->
                    </div>
                    <div class="col2 fr graph">
                        <div class="chart_box chart_box2" id="chart4">
                            <p class="p_title">EBIT</p>
                            <span class="p_unit">(단위 : 억원, %)</span>
                            <div class="chart chart_type2"></div>
                            <!-- <a class="bt_percentage" href="#"></a> -->
                            <div class="percentage">
                                <img class="bg" src="~/Contents/user/Common/img/percentage_bg.png" alt="">
                                <p>실적 비중</p>
                                <div class="chart chart_type12"></div>
                            </div>
                            @{
                                var resultEbitText = string.Empty;
                                var ebitCount = 0;
                                decimal totalPreYearPlanEbitText = 0;
                                decimal totalPlanEbitText = 0;
                                decimal totalResultEbitText = 0;

                                //전년도 합계
                                foreach (var item in ebitCalcList)
                                {
                                    //전년
                                    decimal preYearResultEbit = 0;

                                    var resultSales = preYearEbitCalcList.Where(w => w.unionSeq == item.unionSeq)
                                                                        .Select(s => new GroupMain
                                                                        {
                                                                            groupMainResultSales = s.groupMainResultSales,
                                                                            groupMainResultEbit = s.groupMainResultEbit
                                                                        }).FirstOrDefault();

                                    if (resultSales == null)
                                    {
                                        preYearResultEbit = 0;
                                    }
                                    else
                                    {
                                        preYearResultEbit = resultSales.groupMainResultEbit;
                                    }

                                    totalPreYearPlanEbitText += preYearResultEbit;
                                }

                                //현재년 합계
                                foreach (var item in ebitCalcList)
                                {
                                    //totalPlanEbitText += item.groupMainPlanEbit;
                                    //totalResultEbitText += item.groupMainResultEbit;

                                    //totalPlanEbitText  = item.groupMainPlanEbitSum;
                                    //totalResultEbitText = item.groupMainResultEbitSum;
                                    //totalPlanSalesText = item.groupMainPlanSalesSum;
                                    //totalResultSalesText = item.groupMainResultSalesSum;
                                    totalPlanEbitText += item.groupMainPlanEbit;
                                    totalResultEbitText += item.groupMainResultEbit;
                                    totalPlanSalesText += item.groupMainPlanSales;
                                    totalResultSalesText += item.groupMainResultSales;
                                }

                                foreach (var item in ebitCalcList)
                                {
                                    //전년
                                    decimal preYearResultSales = 0;
                                    decimal preYearResultEbit = 0;

                                    var resultSales = preYearEbitCalcList.Where(w => w.unionSeq == item.unionSeq)
                                                                        .Select(s => new GroupMain
                                                                        {
                                                                            groupMainResultSales = s.groupMainResultSales,
                                                                            groupMainResultEbit = s.groupMainResultEbit
                                                                        }).FirstOrDefault();

                                    if (resultSales == null)
                                    {
                                        preYearResultSales = 0;
                                        preYearResultEbit = 0;
                                    }
                                    else
                                    {
                                        preYearResultSales = resultSales.groupMainResultSales;
                                        preYearResultEbit = resultSales.groupMainResultEbit;
                                    }

                                    // 값이 아예 없을때 처리 해줘야 합니다. 우선은 0으로 나누기면 처리
                                    decimal p = preYearResultEbit == 0 ? 0 : WebUtil.NumberRound(preYearResultEbit, preYearResultSales, 100, 1);

                                    // 2018.12.17 사용중인 부문만 표시
                                    if (item.isUse == "Y")
                                    {
                                        resultEbitText += "{ key :'" + item.unionName + "'," +
                                                                                    //"values : [ { x: '전년', y :" + preYearResultEbit + ",p: " + WebUtil.NumberRound(preYearEbitCalcList[ebitCount].groupMainResultEbit , preYearEbitCalcList[ebitCount].groupMainResultSales , 100, 1) + " ,total: { y: " + totalPreYearPlanEbitText + " }}," +
                                                                                    "values : [ { x: '전년', y :" + preYearResultEbit + ",p: " + p + " ,total: { y: " + totalPreYearPlanEbitText + ", p : " + WebUtil.NumberRound(totalPreYearPlanEbitText, totalPreYearPlanSalesText, 100, 1) + " }}," +
                                                                                            " { x: '계획', y : " + item.groupMainPlanEbit + ", p : " + WebUtil.NumberRound(item.groupMainPlanEbit, item.groupMainPlanSales, 100, 1) + ",total: { y: " + totalPlanEbitText + ", p : " + WebUtil.NumberRound(totalPlanEbitText, totalPlanSalesText, 100, 1) + " }}," +
                                                                                            " { x: '실적', y : " + item.groupMainResultEbit + ", p : " + WebUtil.NumberRound(item.groupMainResultEbit, item.groupMainResultSales, 100, 1) + ",total: { y: " + totalResultEbitText + ", p : " + WebUtil.NumberRound(totalResultEbitText, totalResultSalesText, 100, 1) + " }} ] },";
                                    }

                                    ebitCount++;
                                }

                                //SubChart
                                var resultEbitSubChartText = string.Empty;

                                if (ebitCalcSubChart != null)
                                {
                                    foreach (var item in ebitCalcSubChart)
                                    {
                                        resultSalesSubChartText = "{ key: '지주', y: " + item.groupMainCompanyEbit + " },{ key: '자동차', y: " + item.groupMainCarEbit + " },{ key: '건설', y: " + item.groupMainBuildEbit + " }";
                                    }
                                }
                            }
                            <script>
                                    ( function(){
                                        var data0 = [
                                              @Html.Raw(resultEbitText)
                                        ];

                                        var data1 = [
                                            @Html.Raw(resultSalesSubChartText)
                                        ];

                                        MYAPP.graph.type3( data0, data1, '#chart4' );
                                    } )();
                            </script>
                        </div>
                        <!-- chart_box -->
                    </div>
                </div><!--//box_col2_wrap-->
            </div><!--//box-->

            <div class="box">
                <h3>@search.mm 월 누계</h3>
                <div class="box_col_wrap">
                    <div class="col2 fl graph">
                        <div class="chart_box chart_box2" id="chart5">
                            <p class="p_title">Sales</p>
                            <span class="p_unit">(단위: 억원)</span>
                            <span class="sales" ><span style="color:black">(비고:</span> @salesCr.salesCr)</span>
                            <div class="chart chart_type2"></div>
                            <a class="bt_percentage" href="#"></a>
                            <div class="percentage">
                                <img class="bg" src="~/Contents/user/Common/img/percentage_bg.png" alt="">
                                <p>실적 비중</p>
                                <div class="chart chart_type12"></div>
                            </div>
                            @{
                                var resultSalesSumText = string.Empty;
                                decimal totalPreYearPlanSumSalesText = 0;
                                decimal totalPlanSumSalesText = 0;
                                decimal totalResultSumSalesText = 0;
                                decimal salesCrs = salesCr.salesCr;
                                var salesCrsText = string.Empty;

                                //전년도 합계
                                foreach (var item in SalesSumCalcList)
                                {
                                    //전년
                                    decimal preYearResultSales = 0;

                                    var resultSales = preYearSalesSumCalcList.Where(w => w.unionSeq == item.unionSeq)
                                                            .Select(s => new GroupMain
                                                            {
                                                                groupMainResultSales = s.groupMainResultSales
                                                            }).FirstOrDefault();

                                    if (resultSales == null)
                                    {
                                        preYearResultSales = 0;
                                    }
                                    else
                                    {
                                        preYearResultSales = resultSales.groupMainResultSales;
                                    }

                                    totalPreYearPlanSumSalesText += preYearResultSales;
                                }

                                //현재년 합계
                                foreach (var item in SalesSumCalcList)
                                {
                                    // totalPlanSumSalesText += item.groupMainPlanSales;
                                    //totalResultSumSalesText += item.groupMainResultSales;

                                    //totalPlanSumSalesText = item.groupMainPlanSalesSum;
                                    //totalResultSumSalesText  = item.groupMainResultSalesSum;
                                    totalPlanSumSalesText += item.groupMainPlanSales;
                                    totalResultSumSalesText += item.groupMainResultSales;

                                }
                                foreach (var item in SalesSumCalcList.OrderBy(o => o.unionSeq))
                                {
                                    //전년
                                    decimal preYearResultSales = 0;

                                    var resultSales = preYearSalesSumCalcList.Where(w => w.unionSeq == item.unionSeq)
                                                            .Select(s => new GroupMain
                                                            {
                                                                groupMainResultSales = s.groupMainResultSales
                                                            }).FirstOrDefault();

                                    if (resultSales == null)
                                    {
                                        preYearResultSales = 0;
                                    }
                                    else
                                    {
                                        preYearResultSales = resultSales.groupMainResultSales;
                                    }

                                    // 2018.12.17 사용중인 부문만 표시
                                    if (item.isUse == "Y")
                                    {
                                        resultSalesSumText += "{ key :'" + item.unionName + "'," +
                                                                                        //"values : [ { x: '전년', y :" + preYearSalesSumCalcList[salesSumCount].groupMainResultSales + " ,total: { y: " + totalPreYearPlanSumSalesText + " }}, " +
                                                                                        "values : [ { x: '전년', y :" + preYearResultSales + " ,total: { y: " + totalPreYearPlanSumSalesText + " }}, " +
                                                                                                    "{ x: '계획', y : " + item.groupMainPlanSales + " ,total: { y: " + item.groupMainPlanSalesSum + " }}, " +
                                                                                                    "{ x: '실적', y : " + item.groupMainResultSales + " ,total: { y: " + item.groupMainResultSalesSum + " }} ] },";

                                        salesCrsText += salesCrs;
                                    }
                                    @*<div>salesCr.salesCr</div>*@
                                }
                                //SubChart
                                var resultSumSalesSubChartText = string.Empty;

                                if (salesSumCalcSubChart != null)
                                {
                                    foreach (var item in salesSumCalcSubChart)
                                    {
                                        resultSumSalesSubChartText = "{ key: '지주', y: " + item.groupMainCompanySales + " },{ key: '자동차', y: " + item.groupMainCarSales + " },{ key: '건설', y: " + item.groupMainBuildSales + " }";
                                    }
                                }
                            }
                            <script>
                                    ( function(){
                                        var data0 = [
                                            //{ key: "지주", total: { y: 45158.6 }, values: [ { x: '전년', y: 31233 }, { x: '계획', y: 30963 }, { x: '실적', y: 31002 } ] },
                                            //{ key: "건설", total: { y: 43399 }, values: [ { x: '전년', y: 9457 }, { x: '계획', y: 7780 }, { x: '실적', y: 7703 } ] },
                                            //{ key: "자동차", total: { y: 43202 }, values: [ { x: '전년', y: 4769 }, { x: '계획', y: 5099 }, { x: '실적', y: 4946 } ] }
                                            @Html.Raw(resultSalesSumText)
                                        ];

                                        var data1 = [
                                          @Html.Raw(resultSumSalesSubChartText)
                                          //{ key: "지주", y: 50.5 },
                                          //{ key: "건설", y: 30 },
                                          //{ key: "자동차", y: 20 }
                                        ];

                                        MYAPP.graph.type3( data0, data1, '#chart5' );
                                    } )();
                            </script>
                        </div>
                        <!-- chart_box -->
                    </div>
                    <div class="col2 fr graph">
                        <div class="chart_box chart_box2" id="chart6">
                            <p class="p_title">EBIT</p>
                            <span class="p_unit">(단위 : 억원, %)</span>
                            <div class="chart chart_type2"></div>
                            <!-- <a class="bt_percentage" href="#"></a> -->
                            <div class="percentage">
                                <img class="bg" src="~/Contents/user/Common/img/percentage_bg.png" alt="">
                                <p>실적 비중</p>
                                <div class="chart chart_type12"></div>
                            </div>
                            @{
                                var resultEbitSumText = string.Empty;
                                var ebitSumCount = 0;
                                decimal totalPreYearPlanSumEbitText = 0;
                                decimal totalPlanSumEbitText = 0;
                                decimal totalResultSumEbitText = 0;

                                // 2018.10.13 전년도 합계 : 전년도는 실적인데 합계를 가져오네요..
                                //foreach (var item in preYearEbitSumCalcList)
                                //{
                                //    totalPreYearPlanSumEbitText += item.groupMainPlanEbit;
                                //}
                                foreach (var item in EbitSumCalcList)
                                {
                                    //전년
                                    decimal preYearResultEbit = 0;

                                    var resultSales = preYearEbitSumCalcList.Where(w => w.unionSeq == item.unionSeq)
                                                                                    .Select(s => new GroupMain
                                                                                    {
                                                                                        groupMainResultEbit = s.groupMainResultEbit
                                                                                    }).FirstOrDefault();

                                    if (resultSales == null)
                                    {
                                        preYearResultEbit = 0;
                                    }
                                    else
                                    {
                                        preYearResultEbit = resultSales.groupMainResultEbit;
                                    }

                                    totalPreYearPlanSumEbitText += preYearResultEbit;
                                }

                                //현재년 합계
                                foreach (var item in EbitSumCalcList)
                                {
                                    // totalPlanSumEbitText += item.groupMainPlanEbit;
                                    // totalResultSumEbitText += item.groupMainResultEbit;

                                    //totalPlanSumEbitText  = item.groupMainPlanEbitSum;
                                    //totalResultSumEbitText  = item.groupMainResultEbitSum;
                                    //totalPlanSumSalesText = item.groupMainPlanSalesSum;
                                    //totalResultSumSalesText = item.groupMainResultSalesSum;


                                    totalPlanSumEbitText += item.groupMainPlanEbit;
                                    totalResultSumEbitText += item.groupMainResultEbit;
                                    totalPlanSumSalesText += item.groupMainPlanSales;
                                    totalResultSumSalesText += item.groupMainResultSales;
                                }

                                // 상동..
                                //foreach (var item in EbitSumCalcList)
                                //{
                                //    resultEbitSumText += "{ key :'" + item.unionName + "'," +
                                //                         "values : [ { x: '전년', y :" + preYearEbitSumCalcList[ebitSumCount].groupMainPlanEbit + ", p : " + WebUtil.NumberRound(preYearEbitSumCalcList[ebitSumCount].groupMainPlanEbit / preYearEbitSumCalcList[ebitSumCount].groupMainPlanSales * 100, 1) + ", total : { y : " + totalPreYearPlanSumEbitText + " }}," +
                                //                                   " { x: '계획', y : " + item.groupMainPlanEbit + ", p : " + WebUtil.NumberRound(item.groupMainPlanEbit / item.groupMainPlanSales * 100, 1) + " , total : { y : " + totalPlanSumEbitText + " }}," +
                                //                                   " { x: '실적', y : " + item.groupMainResultEbit + ", p : " + WebUtil.NumberRound(item.groupMainResultEbit / item.groupMainPlanEbit * 100, 1) + " , total : { y : " + totalResultSumEbitText + " }} ] },";

                                //    ebitSumCount++;
                                //}
                                foreach (var item in EbitSumCalcList)
                                {
                                    //전년
                                    decimal preYearResultSales = 0;
                                    decimal preYearResultEbit = 0;

                                    var resultSales = preYearEbitSumCalcList.Where(w => w.unionSeq == item.unionSeq)
                                                                                    .Select(s => new GroupMain
                                                                                    {
                                                                                        groupMainResultSales = s.groupMainResultSales,
                                                                                        groupMainResultEbit = s.groupMainResultEbit
                                                                                    }).FirstOrDefault();

                                    if (resultSales == null)
                                    {
                                        preYearResultSales = 0;
                                        preYearResultEbit = 0;
                                    }
                                    else
                                    {
                                        preYearResultSales = resultSales.groupMainResultSales;
                                        preYearResultEbit = resultSales.groupMainResultEbit;
                                    }

                                    // 값이 아예 없을때 처리 해줘야 합니다. 우선은 0으로 나누기면 처리
                                    decimal p = preYearResultEbit == 0 ? 0 : WebUtil.NumberRound(preYearResultEbit, preYearResultSales, 100, 1);

                                    // 2018.12.17 사용중인 부문만 표시
                                    if (item.isUse == "Y")
                                    {
                                        resultEbitSumText += "{ key :'" + item.unionName + "'," +
                                                                                    //"values : [ { x: '전년', y :" + preYearEbitSumCalcList[ebitSumCount].groupMainResultEbit + ", p : " + WebUtil.NumberRound(preYearEbitSumCalcList[ebitSumCount].groupMainResultEbit , preYearEbitSumCalcList[ebitSumCount].groupMainResultSales , 100, 1) + ", total : { y : " + totalPreYearPlanSumEbitText + " }}," +
                                                                                    "values : [ { x: '전년', y :" + preYearResultEbit + ", p : " + p + ", total : { y : " + totalPreYearPlanSumEbitText + ", p : " + WebUtil.NumberRound(totalPreYearPlanSumEbitText, totalPreYearPlanSumSalesText, 100, 1) + " }}," +
                                                                                            " { x: '계획', y : " + item.groupMainPlanEbit + ", p : " + WebUtil.NumberRound(item.groupMainPlanEbit, item.groupMainPlanSales, 100, 1) + " , total : { y : " + totalPlanSumEbitText + ", p : " + WebUtil.NumberRound(totalPlanSumEbitText, totalPlanSumSalesText, 100, 1) + " }}," +
                                                                                            " { x: '실적', y : " + item.groupMainResultEbit + ", p : " + WebUtil.NumberRound(item.groupMainResultEbit, item.groupMainResultSales, 100, 1) + " , total : { y : " + totalResultSumEbitText + ", p : " + WebUtil.NumberRound(totalResultSumEbitText, totalResultSumSalesText, 100, 1) + " }} ] },";
                                    }

                                    ebitSumCount++;
                                }

                                //SubChart
                                var resultSumEbitSubChartText = string.Empty;

                                if (ebitSumCalcSubChart != null)
                                {
                                    foreach (var item in ebitSumCalcSubChart)
                                    {
                                        resultSumEbitSubChartText = "{ key: '지주', y: " + item.groupMainCompanyEbit + " },{ key: '자동차', y: " + item.groupMainCarEbit + " },{ key: '건설', y: " + item.groupMainBuildEbit + " }";
                                    }
                                }

                            }
                            <script>
                                    ( function(){
                                        var data0 = [
                                            //{ key: "지주", total: { y: 45158, p: 60 }, values: [ { x: '전년', y: 31233, p: 60 }, { x: '계획', y: 3063, p: 60 }, { x: '실적', y: 31002, p: 60 } ] },
                                            //{ key: "건설", total: { y: 15942, p: 60 }, values: [ { x: '전년', y: 9457, p: 60 }, { x: '계획', y: 7780, p: 60 }, { x: '실적', y: 7703, p: 60 } ] },
                                            //{ key: "자동차", total: { y: 43202, p: 60 }, values: [ { x: '전년', y: 4769, p: 60 }, { x: '계획', y: 5099, p: 60 }, { x: '실적', y: 4946, p: 60 } ] }
                                            @Html.Raw(resultEbitSumText)
                                        ];

                                        var data1 = [
                                            //{ key: "지주", y: 40 },
                                            //{ key: "건설", y: 30 },
                                            //{ key: "자동차", y: 30 }
                                            @Html.Raw(resultSumEbitSubChartText)
                                        ];

                                        MYAPP.graph.type3( data0, data1, '#chart6' );
                                    } )();
                            </script>
                        </div>
                        <!-- chart_box -->
                    </div>
                </div><!--//box_col2_wrap-->
            </div><!--//box-->

        </div><!--//graph_box-->
    </div><!--//graph_box_wrap-->
    <!--S: 손익 (연간예상)-->
    @*2019.02.19 2019년 1월에는 손익 예상과 roic 안 보이게 변경 : 2019.02.20 다시 보이게 변경*@
    @if (search.year + search.mm != "201901ㅁ")
    {
        @*다시보이게 변경 2019.04.24*@
    if (search.year + search.mm != "201903ㅁ")
    {
        <div class="graph_box_wrap">
            <h2><a href="#">손익 (연간예상)</a></h2>

            <div class="graph_box">

                <div class="box">
                    <h3>Sales</h3>
                    <div class="chart_box chart_box3">
                        <span class="p_unit">(단위 : 억원)</span>
                        <ul class="p_box">
                            <li>
                                <p class="p_title">@search.mm 월 누계</p>
                                <div class="chart chart_type2" id="chart7"></div>
                            </li>
                            @{
                                var resultExpectYearSalesText = string.Empty;
                                decimal totalPreYearExpectYearPlanSalesText = 0;
                                decimal totalExpectYearPlanSalesText = 0;
                                decimal totalExpectYearResultSalesText = 0;
                                var expectYearSalesCount = 0;

                                //전년도 합계
                                foreach (var item in expectYearSalesList)
                                {
                                    //전년
                                    decimal preYearResultSales = 0;

                                    var resultSales = preYearExpectYearSalesList.Where(w => w.unionSeq == item.unionSeq)
                                                                                .Select(s => new GroupMain
                                                                                {
                                                                                    groupMainExpectYearResultSales = s.groupMainExpectYearResultSales,

                                                                                }).FirstOrDefault();

                                    if (resultSales == null)
                                    {
                                        preYearResultSales = 0;
                                    }
                                    else
                                    {
                                        preYearResultSales = resultSales.groupMainExpectYearResultSales;
                                    }

                                    totalPreYearExpectYearPlanSalesText += preYearResultSales;
                                }

                                //현재년 합계
                                foreach (var item in expectYearSalesList)
                                {
                                    //totalExpectYearPlanSalesText += item.groupMainExpectYearPlanSales;
                                    // totalExpectYearResultSalesText += item.groupMainExpectYearResultSales;
                                    totalExpectYearPlanSalesText    = item.groupMainPlanSalesSum;
                                    totalExpectYearResultSalesText  = item.groupMainResultSalesSum;
                                }

                                //연간예상
                                foreach (var item in expectYearSalesList)
                                {
                                    //전년
                                    decimal preYearResultSales = 0;

                                    var resultSales = preYearExpectYearSalesList.Where(w => w.unionSeq == item.unionSeq)
                                                                                .Select(s => new GroupMain
                                                                                {
                                                                                    groupMainExpectYearResultSales = s.groupMainExpectYearResultSales,

                                                                                }).FirstOrDefault();

                                    if (resultSales == null)
                                    {
                                        preYearResultSales = 0;
                                    }
                                    else
                                    {
                                        preYearResultSales = resultSales.groupMainExpectYearResultSales;
                                    }

                                    // 2018.12.17 사용중인 부문만 표시
                                    if (item.isUse == "Y")
                                    {
                                        resultExpectYearSalesText += "{ key :'" + item.unionName + "'," +
                                                                                        //"values : [ { x: '전년', y :" + preYearExpectYearSalesList[expectYearSalesCount].groupMainExpectYearResultSales + ", total : { y : " + totalPreYearExpectYearPlanSalesText + " }}," +
                                                                                        "values : [ { x: '전년', y :" + preYearResultSales + ", total : { y : " + totalPreYearExpectYearPlanSalesText + " }}," +
                                                                                                "{ x: '계획', y : " + item.groupMainExpectYearPlanSales + ", total : { y : " + totalExpectYearPlanSalesText + " }}," +
                                                                                                "{ x: '예상', y : " + item.groupMainExpectYearResultSales + ", total : { y : " + totalExpectYearResultSalesText + " }} ] },";
                                    }

                                    expectYearSalesCount++;
                                }


                                //누계실적
                                var resultExpectSalesText = string.Empty;
                                decimal totalPreYearExpectPlanSalesText = 0;
                                decimal totalExpectPlanSalesText = 0;
                                decimal totalExpectResultSalesText = 0;
                                var expectSalesCount = 0;

                                //전년도 합계
                                foreach (var item in expectSalesList)
                                {
                                    //전년
                                    decimal preYearResultSales = 0;

                                    var resultSales = preYearExpectSalesList.Where(w => w.unionSeq == item.unionSeq)
                                                            .Select(s => new GroupMain
                                                            {
                                                                groupMainExpectResultSales = s.groupMainExpectResultSales
                                                            }).FirstOrDefault();

                                    if (resultSales == null)
                                    {
                                        preYearResultSales = 0;
                                    }
                                    else
                                    {
                                        preYearResultSales = resultSales.groupMainExpectResultSales;
                                    }

                                    totalPreYearExpectPlanSalesText += preYearResultSales;
                                }

                                //현재년 합계
                                foreach (var item in expectSalesList)
                                {
                                    //totalExpectPlanSalesText += item.groupMainExpectPlanSales;
                                    //totalExpectResultSalesText += item.groupMainExpectResultSales;

                                    totalExpectPlanSalesText  = item.groupMainPlanSalesSum;
                                    totalExpectResultSalesText  = item.groupMainResultSalesSum;

                                }

                                foreach (var item in expectSalesList)
                                {
                                    //전년
                                    decimal preYearResultSales = 0;

                                    var resultSales = preYearExpectSalesList.Where(w => w.unionSeq == item.unionSeq)
                                                            .Select(s => new GroupMain
                                                            {
                                                                groupMainExpectResultSales = s.groupMainExpectResultSales
                                                            }).FirstOrDefault();

                                    if (resultSales == null)
                                    {
                                        preYearResultSales = 0;
                                    }
                                    else
                                    {
                                        preYearResultSales = resultSales.groupMainExpectResultSales;
                                    }

                                    // 2018.12.17 사용중인 부문만 표시
                                    if (item.isUse == "Y")
                                    {
                                        resultExpectSalesText += "{ key :'" + item.unionName + "'," +
                                                                                    "values : [ { x: '전년', y :" + preYearResultSales + ",total : { y : " + totalPreYearExpectPlanSalesText + " }}, " +
                                                                                            "{ x: '계획', y :" + item.groupMainExpectPlanSales + ",total : { y : " + totalExpectPlanSalesText + " }}," +
                                                                                            "{ x: '실적', y :" + item.groupMainExpectResultSales + ",total : { y : " + totalExpectResultSalesText + " }} ] },";
                                    }

                                    expectSalesCount++;
                                }

                                //잔여월
                                var resultExpectRestSalesText = string.Empty;
                                decimal totalPreYearExpectResultRestSalesText = 0;
                                decimal totalExpectPlanRestSalesText = 0;
                                decimal totalExpectResultRestSalesText = 0;
                                var expectRestSalesCount = 0;

                                //전년도 합계
                                foreach (var item in expectRestSalesList)
                                {
                                    //전년
                                    decimal preYearResultSales = 0;

                                    var resultSales = preYearExpectRestSalesList.Where(w => w.unionSeq == item.unionSeq)
                                                            .Select(s => new GroupMain
                                                            {
                                                                groupMainExpectResultRestSales = s.groupMainExpectResultRestSales
                                                            }).FirstOrDefault();

                                    if (resultSales == null)
                                    {
                                        preYearResultSales = 0;
                                    }
                                    else
                                    {
                                        preYearResultSales = resultSales.groupMainExpectResultRestSales;
                                    }

                                    totalPreYearExpectResultRestSalesText += preYearResultSales;
                                }

                                //현재년 합계
                                foreach (var item in expectRestSalesList)
                                {
                                    // totalExpectPlanRestSalesText += item.groupMainExpectPlanRestSales;
                                    // totalExpectResultRestSalesText += item.groupMainExpectResultRestSales;

                                    totalExpectPlanRestSalesText = totalExpectYearPlanSalesText - totalExpectPlanSalesText;
                                    totalExpectResultRestSalesText = (totalExpectYearResultSalesText - totalExpectResultSalesText) < 0 ? 0: (totalExpectYearResultSalesText - totalExpectResultSalesText);
                                }

                                foreach (var item in expectRestSalesList)
                                {
                                    //전년
                                    decimal preYearResultSales = 0;

                                    var resultSales = preYearExpectRestSalesList.Where(w => w.unionSeq == item.unionSeq)
                                                            .Select(s => new GroupMain
                                                            {
                                                                groupMainExpectResultRestSales = s.groupMainExpectResultRestSales
                                                            }).FirstOrDefault();

                                    if (resultSales == null)
                                    {
                                        preYearResultSales = 0;
                                    }
                                    else
                                    {
                                        preYearResultSales = resultSales.groupMainExpectResultRestSales;
                                    }

                                    // 2018.12.17 사용중인 부문만 표시
                                    if (item.isUse == "Y")
                                    {
                                        resultExpectRestSalesText += "{ key :'" + item.unionName + "'," +
                                                                    //"values : [ { x: '전년', y :" + preYearExpectRestSalesList[expectRestSalesCount].groupMainExpectResultRestSales + ", total : { y : " + totalPreYearExpectResultRestSalesText + " }}," +
                                                                    "values : [ { x: '전년', y :" + preYearResultSales + ", total : { y : " + totalPreYearExpectResultRestSalesText + " }}," +
                                                                    "{ x: '계획', y : " + item.groupMainExpectPlanRestSales + ", total : { y : " + totalExpectPlanRestSalesText + " }}, " +
                                                                    "{ x: '예상', y : " + item.groupMainExpectResultRestSales + ", total : { y : " + totalExpectResultRestSalesText + " }} ] },";
                                    }

                                    expectRestSalesCount++;
                                }

                            }
                            <li>
                                <p class="p_title">잔여월@(search.mm == "12" ? "" : "(" + (Convert.ToInt32(search.mm) + 1) + "월 ~ 12월)")</p>
                                <div class="chart chart_type2" id="chart8"></div>
                            </li>
                            <li>
                                <p class="p_title">연간예상</p>
                                <div class="chart chart_type2" id="chart9"></div>
                            </li>
                        </ul>
                        <div class="legend">
                            <ul id="chart17">
                                <li><span class="rect"></span> <sapn class="txt"></sapn></li>
                            </ul>
                        </div>
                        <script>
                            ( function(){
                                var data0 = [
                                    @Html.Raw(resultExpectSalesText)
                                ];
                                var data1 = [
                                    @Html.Raw(resultExpectRestSalesText)
                                ];
                                var data2 = [
                                    @Html.Raw(resultExpectYearSalesText)
                                ];

                                MYAPP.graph.type2( data0, '#chart7' );
                                MYAPP.graph.type2( data1, '#chart8' );
                                MYAPP.graph.type2( data2, '#chart9' );
                                MYAPP.graph.type15( data0, '#chart17' );
                            } )();
                        </script>
                    </div>
                    <!-- chart_box -->
                </div><!--//box-->

                <div class="box">
                    <h3>EBIT</h3>
                    <div class="chart_box chart_box3">
                        <span class="p_unit">(단위 : 억원, %)</span>
                        <ul class="p_box">
                            @{
                                //연간예상
                                var resultExpectYearEbitText = string.Empty;
                                decimal totalPreYearExpectYearPlanEbitText = 0;
                                decimal totalExpectYearPlanEbitText = 0;
                                decimal totalExpectYearResultEbitText = 0;
                                var expectYearEbitCount = 0;

                                //전년도 합계
                                foreach (var item in expectYearEbitList)
                                {
                                    //전년
                                    decimal preYearResultEbit = 0;

                                    var resultSales = preYearExpectYearEbitList.Where(w => w.unionSeq == item.unionSeq)
                                                                                    .Select(s => new GroupMain
                                                                                    {
                                                                                        groupMainExpectYearResultEbit = s.groupMainExpectYearResultEbit
                                                                                    }).FirstOrDefault();

                                    if (resultSales == null)
                                    {
                                        preYearResultEbit = 0;
                                    }
                                    else
                                    {
                                        preYearResultEbit = resultSales.groupMainExpectYearResultEbit;
                                    }

                                    totalPreYearExpectYearPlanEbitText += preYearResultEbit;
                                }

                                //현재년 합계
                                foreach (var item in expectYearEbitList)
                                {
                                    //totalExpectYearPlanEbitText += item.groupMainExpectYearPlanEbit;
                                    //totalExpectYearResultEbitText += item.groupMainExpectYearResultEbit;
                                    totalExpectYearPlanEbitText = item.groupMainPlanEbitSum;
                                    totalExpectYearResultEbitText = item.groupMainResultEbitSum;
                                    totalExpectYearPlanSalesText = item.groupMainPlanSalesSum;
                                    totalExpectYearResultSalesText = item.groupMainResultSalesSum;

                                }

                                //연간예상
                                foreach (var item in expectYearEbitList)
                                {
                                    //전년
                                    decimal preYearResultSales = 0;
                                    decimal preYearResultEbit = 0;

                                    var resultSales = preYearExpectYearEbitList.Where(w => w.unionSeq == item.unionSeq)
                                                                                .Select(s => new GroupMain
                                                                                {
                                                                                    groupMainExpectYearResultEbit = s.groupMainExpectYearResultEbit,
                                                                                    groupMainExpectYearResultSales = s.groupMainExpectYearResultSales
                                                                                }).FirstOrDefault();

                                    if (resultSales == null)
                                    {
                                        preYearResultSales = 0;
                                        preYearResultEbit = 0;
                                    }
                                    else
                                    {
                                        preYearResultSales = resultSales.groupMainExpectYearResultSales;
                                        preYearResultEbit = resultSales.groupMainExpectYearResultEbit;
                                    }

                                    // 값이 아예 없을때 처리 해줘야 합니다. 우선은 0으로 나누기면 처리
                                    decimal p = preYearResultEbit == 0 ? 0 : WebUtil.NumberRound(preYearResultEbit, preYearResultSales, 100, 1);

                                    // 2018.12.17 사용중인 부문만 표시
                                    if (item.isUse == "Y")
                                    {
                                        resultExpectYearEbitText += "{ key :'" + item.unionName + "'," +
                                                                                        //"values : [ { x: '전년', y :" + preYearExpectYearEbitList[expectYearEbitCount].groupMainExpectYearResultEbit + ",p : "+ WebUtil.NumberRound(preYearExpectYearEbitList[expectYearEbitCount].groupMainExpectYearResultEbit , preYearExpectYearEbitList[expectYearEbitCount].groupMainExpectYearResultSales , 100, 1) + ", total : { y : " + totalPreYearExpectYearPlanEbitText + " }}," +
                                                                                        "values : [ { x: '전년', y :" + preYearResultEbit + ",p : " + p + ", total : { y : " + totalPreYearExpectYearPlanEbitText + ", p : " + WebUtil.NumberRound(totalPreYearExpectYearPlanEbitText, totalPreYearExpectYearPlanSalesText, 100, 1) + " }}," +
                                                                                                    "{ x: '계획', y : " + item.groupMainExpectYearPlanEbit + ", p : " + WebUtil.NumberRound(item.groupMainExpectYearPlanEbit, item.groupMainExpectYearPlanSales, 100, 1) + ", total : { y : " + totalExpectYearPlanEbitText + ", p : " + WebUtil.NumberRound(totalExpectYearPlanEbitText, totalExpectYearPlanSalesText, 100, 1) + " }}," +
                                                                                                    "{ x: '예상', y : " + item.groupMainExpectYearResultEbit + ", p : " + WebUtil.NumberRound(item.groupMainExpectYearResultEbit, item.groupMainExpectYearResultSales, 100, 1) + ", total : { y : " + totalExpectYearResultEbitText + ", p : " + WebUtil.NumberRound(totalExpectYearResultEbitText, totalExpectYearResultSalesText, 100, 1) + " }} ] },";
                                    }

                                    expectYearEbitCount++;
                                }

                                //누계실적
                                var resultExpectEbitText = string.Empty;
                                decimal totalPreYearExpectPlanEbitText = 0;
                                decimal totalExpectPlanEbitText = 0;
                                decimal totalExpectResultEbitText = 0;
                                var expectEbitCount = 0;

                                //전년도 합계
                                foreach (var item in expectEbitList)
                                {
                                    //전년
                                    decimal preYearResultEbit = 0;

                                    var resultSales = preYearExpectEbitList.Where(w => w.unionSeq == item.unionSeq)
                                                                                    .Select(s => new GroupMain
                                                                                    {
                                                                                        groupMainExpectYearResultEbit = s.groupMainExpectYearResultEbit
                                                                                    }).FirstOrDefault();

                                    if (resultSales == null)
                                    {
                                        preYearResultEbit = 0;
                                    }
                                    else
                                    {
                                        preYearResultEbit = resultSales.groupMainExpectYearResultEbit;
                                    }

                                    totalPreYearExpectPlanEbitText += preYearResultEbit;
                                }

                                //현재년 합계
                                foreach (var item in expectEbitList)
                                {
                                    // totalExpectPlanEbitText += item.groupMainExpectPlanEbit;
                                    // totalExpectResultEbitText += item.groupMainExpectResultEbit;

                                    totalExpectPlanEbitText = item.groupMainPlanEbitSum;
                                    totalExpectResultEbitText = item.groupMainResultEbitSum;
                                    totalExpectPlanSalesText = item.groupMainPlanSalesSum;
                                    totalExpectResultSalesText = item.groupMainResultSalesSum;
                                }

                                foreach (var item in expectEbitList)
                                {
                                    //전년
                                    decimal preYearResultSales = 0;
                                    decimal preYearResultEbit = 0;

                                    var resultSales = preYearExpectEbitList.Where(w => w.unionSeq == item.unionSeq)
                                                                                    .Select(s => new GroupMain
                                                                                    {
                                                                                        groupMainExpectYearResultEbit = s.groupMainExpectYearResultEbit,
                                                                                        groupMainExpectYearResultSales = s.groupMainExpectYearResultSales
                                                                                    }).FirstOrDefault();

                                    if (resultSales == null)
                                    {
                                        preYearResultSales = 0;
                                        preYearResultEbit = 0;
                                    }
                                    else
                                    {
                                        preYearResultSales = resultSales.groupMainExpectYearResultSales;
                                        preYearResultEbit = resultSales.groupMainExpectYearResultEbit;
                                    }

                                    // 값이 아예 없을때 처리 해줘야 합니다. 우선은 0으로 나누기면 처리
                                    decimal p = preYearResultEbit == 0 ? 0 : WebUtil.NumberRound(preYearResultEbit, preYearResultSales, 100, 1);

                                    // 2018.12.17 사용중인 부문만 표시
                                    if (item.isUse == "Y")
                                    {
                                        resultExpectEbitText += "{ key :'" + item.unionName + "'," +
                                                                                    //"values : [ { x: '전년', y :" + preYearExpectEbitList[expectEbitCount].groupMainExpectYearResultEbit + ", p : "+ WebUtil.NumberRound(preYearExpectEbitList[expectEbitCount].groupMainExpectYearResultEbit , preYearExpectEbitList[expectEbitCount].groupMainExpectYearResultSales , 100, 1) + ", total : { y : " + totalPreYearExpectPlanEbitText + " }}," +
                                                                                    "values : [ { x: '전년', y :" + preYearResultEbit + ", p : " + p + ", total : { y : " + totalPreYearExpectPlanEbitText + ", p : " + WebUtil.NumberRound(totalPreYearExpectPlanEbitText, totalPreYearExpectPlanSalesText, 100, 1) + " }}," +
                                                                                    "{ x: '계획', y : " + item.groupMainExpectPlanEbit + ", p : " + WebUtil.NumberRound(item.groupMainExpectPlanEbit, item.groupMainExpectPlanSales, 100, 1) + ", total : { y : " + totalExpectPlanEbitText + ", p : " + WebUtil.NumberRound(totalExpectPlanEbitText, totalExpectPlanSalesText, 100, 1) + "  }}," +
                                                                                    "{ x: '실적', y : " + item.groupMainExpectResultEbit + ", p : " + WebUtil.NumberRound(item.groupMainExpectResultEbit, item.groupMainExpectResultSales, 100, 1) + ", total : { y : " + totalExpectResultEbitText + ", p : " + WebUtil.NumberRound(totalExpectResultEbitText, totalExpectResultSalesText, 100, 1) + "  }} ] },";
                                    }

                                    expectEbitCount++;
                                }

                                //잔여월
                                var resultExpectRestEbitText = string.Empty;
                                decimal totalPreYearExpectResultRestEbitText = 0;
                                decimal totalExpectPlanRestEbitText = 0;
                                decimal totalExpectResultRestEbitText = 0;
                                var expectRestEbitCount = 0;

                                //전년도 합계
                                foreach (var item in expectRestEbitList)
                                {
                                    //전년
                                    decimal preYearResultEbit = 0;

                                    var resultSales = preYearExpectRestEbitList.Where(w => w.unionSeq == item.unionSeq)
                                                                                    .Select(s => new GroupMain
                                                                                    {
                                                                                        groupMainExpectResultRestEbit = s.groupMainExpectResultRestEbit
                                                                                    }).FirstOrDefault();

                                    if (resultSales == null)
                                    {
                                        preYearResultEbit = 0;
                                    }
                                    else
                                    {
                                        preYearResultEbit = resultSales.groupMainExpectResultRestEbit;
                                    }

                                    totalPreYearExpectResultRestEbitText += preYearResultEbit;
                                }

                                //현재년 합계
                                foreach (var item in expectRestEbitList)
                                {
                                    totalExpectPlanRestEbitText += item.groupMainExpectPlanRestEbit;
                                    totalExpectResultRestEbitText += item.groupMainExpectResultRestEbit;
                                }

                                foreach (var item in expectRestEbitList)
                                {
                                    //전년
                                    decimal preYearResultSales = 0;
                                    decimal preYearResultEbit = 0;

                                    var resultSales = preYearExpectRestEbitList.Where(w => w.unionSeq == item.unionSeq)
                                                                                    .Select(s => new GroupMain
                                                                                    {
                                                                                        groupMainExpectResultRestEbit = s.groupMainExpectResultRestEbit,
                                                                                        groupMainExpectResultRestSales = s.groupMainExpectResultRestSales
                                                                                    }).FirstOrDefault();

                                    if (resultSales == null)
                                    {
                                        preYearResultSales = 0;
                                        preYearResultEbit = 0;
                                    }
                                    else
                                    {
                                        preYearResultSales = resultSales.groupMainExpectResultRestSales;
                                        preYearResultEbit = resultSales.groupMainExpectResultRestEbit;
                                        totalExpectPlanRestSalesText = totalExpectYearPlanSalesText - totalExpectPlanSalesText;
                                        totalExpectResultRestEbitText = (totalExpectResultRestEbitText - totalExpectResultRestSalesText) < 0 ? 0 : (totalExpectResultRestEbitText - totalExpectResultRestSalesText);

                                    }

                                    // 값이 아예 없을때 처리 해줘야 합니다. 우선은 0으로 나누기면 처리
                                    decimal p = preYearResultEbit == 0 ? 0 : WebUtil.NumberRound(preYearResultEbit, preYearResultSales, 100, 1);

                                    // 2018.12.17 사용중인 부문만 표시
                                    if (item.isUse == "Y")
                                    {
                                        resultExpectRestEbitText += "{ key :'" + item.unionName + "'," +
                                                                                        //"values : [ { x: '전년', y :" + preYearExpectRestEbitList[expectRestEbitCount].groupMainExpectResultRestEbit + ", p : "+ WebUtil.NumberRound(preYearExpectRestEbitList[expectRestEbitCount].groupMainExpectResultRestEbit , preYearExpectRestEbitList[expectRestEbitCount].groupMainExpectResultRestSales , 100, 1) + ",total : { y : " + totalPreYearExpectResultRestEbitText + " }}," +
                                                                                        "values : [ { x: '전년', y :" + preYearResultEbit + ", p : " + p + ",total : { y : " + totalPreYearExpectResultRestEbitText + ", p : " + WebUtil.NumberRound(totalPreYearExpectResultRestEbitText, totalPreYearExpectResultRestSalesText, 100, 1) + " }}," +
                                                                                        " { x: '계획', y : " + item.groupMainExpectPlanRestEbit + ", p : " + WebUtil.NumberRound(item.groupMainExpectPlanRestEbit, item.groupMainExpectPlanRestSales, 100, 1) + ",total : { y : " + totalExpectPlanRestEbitText + ", p : " + WebUtil.NumberRound(totalExpectPlanRestEbitText, totalExpectPlanRestSalesText, 100, 1) + " }}," +
                                                                                        " { x: '예상', y : " + item.groupMainExpectResultRestEbit + ", p : " + WebUtil.NumberRound(item.groupMainExpectResultRestEbit, item.groupMainExpectResultRestSales, 100, 1) + ",total : { y : " + totalExpectResultRestEbitText + ", p : " + WebUtil.NumberRound(totalExpectResultRestEbitText, totalExpectResultRestSalesText, 100, 1) + " }} ] },";
                                    }

                                    expectRestEbitCount++;
                                }
                            }
                            <li>
                                <p class="p_title">@search.mm 월 누계</p>
                                <div class="chart chart_type2" id="chart10"></div>
                            </li>
                            <li>
                                <p class="p_title">잔여월@(search.mm == "12" ? "" : "(" + (Convert.ToInt32(search.mm) + 1) + "월 ~ 12월)")</p>
                                <div class="chart chart_type2" id="chart11"></div>
                            </li>
                            <li>
                                <p class="p_title">연간예상</p>
                                <div class="chart chart_type2" id="chart12"></div>
                            </li>
                        </ul>
                        <div class="legend">
                            <ul id="chart18">
                                <li><span class="rect"></span> <sapn class="txt"></sapn></li>
                            </ul>
                        </div>
                        <script>
                            ( function(){
                                var data0 = [
                                  //{ key: "지주", total: { y: 45158, p: 60 }, values: [ { x: '전년', y: 31233, p: 60, total: { y: 45158, p: 60 } }, { x: '계획', y: 30963, p: 60 }, { x: '실적', y: 31002, p: 60 } ] },
                                  //{ key: "건설", total: { y: 43399, p: 60 }, values: [ { x: '전년', y: 9457, p: 60 }, { x: '계획', y: 7780, p: 60 }, { x: '실적', y: 7703, p: 60 } ] },
                                  //{ key: "자동차", total: { y: 43202, p: 60 }, values: [ { x: '전년', y: 4769, p: 60 }, { x: '계획', y: 5099, p: 60 }, { x: '실적', y: 4946, p: 60 } ] }
                                  //{ key: "자동차", total: { y: 43202, p: 60 }, values: [ { x: '전년', y: 4769, p: 60 }, { x: '계획', y: 5099, p: 60 }, { x: '실적', y: 4946, p: 60 } ] }
                                  //{ key: "자동차", total: { y: 43202, p: 60 }, values: [ { x: '전년', y: 4769, p: 60 }, { x: '계획', y: 5099, p: 60 }, { x: '실적', y: 4946, p: 60 } ] }
                                  //{ key: "자동차", total: { y: 43202, p: 60 }, values: [ { x: '전년', y: 4769, p: 60 }, { x: '계획', y: 5099, p: 60 }, { x: '실적', y: 4946, p: 60 } ] }
                                  //{ key: "자동차", total: { y: 43202, p: 60 }, values: [ { x: '전년', y: 4769, p: 60 }, { x: '계획', y: 5099, p: 60 }, { x: '실적', y: 4946, p: 60 } ] }
                                  //{ key: "자동차", total: { y: 43202, p: 60 }, values: [ { x: '전년', y: 4769, p: 60 }, { x: '계획', y: 5099, p: 60 }, { x: '실적', y: 4946, p: 60 } ] }
                                  @Html.Raw(resultExpectEbitText)
                                ];
                                var data1 = [
                                  //{ key: "지주", total: { y: 45158, p: 60 }, values: [ { x: '전년', y: 31233, p: 60 }, { x: '계획', y: 30963, p: 60 }, { x: '실적', y: 31002, p: 60 } ] },
                                  //{ key: "건설", total: { y: 43399, p: 60 }, values: [ { x: '전년', y: 9457, p: 60 }, { x: '계획', y: 7780, p: 60 }, { x: '실적', y: 7703, p: 60 } ] },
                                  //{ key: "자동차", total: { y: 43202, p: 60 }, values: [ { x: '전년', y: 4769, p: 60 }, { x: '계획', y: 5099, p: 60 }, { x: '실적', y: 4946, p: 60 } ] }
                                  @Html.Raw(resultExpectRestEbitText)
                                ];
                                var data2 = [
                                  //{ key: "지주", total: { y: 45158, p: 60 }, values: [ { x: '전년', y: 31233, p: 60 }, { x: '계획', y: 30963, p: 60 }, { x: '실적', y: 31002, p: 60 } ] },
                                  //{ key: "건설", total: { y: 43399, p: 60 }, values: [ { x: '전년', y: 9457, p: 60 }, { x: '계획', y: 7780, p: 60 }, { x: '실적', y: 7703, p: 60 } ] },
                                  //{ key: "자동차", total: { y: 43202, p: 60 }, values: [ { x: '전년', y: 4769, p: 60 }, { x: '계획', y: 5099, p: 60 }, { x: '실적', y: 4946, p: 60 } ] }
                                  @Html.Raw(resultExpectYearEbitText)
                                ];

                                MYAPP.graph.type2( data0, '#chart10' );
                                MYAPP.graph.type2( data1, '#chart11' );
                                MYAPP.graph.type2( data2, '#chart12' );
                                MYAPP.graph.type15( data0, '#chart18' );
                            } )();
                        </script>
                    </div>
                    <!-- chart_box -->
                </div><!--//box-->

                <div class="box">
                    <!--그룹일 경우-->
                    <!--S: 유동 테이블-->
                    <div class="graph">
                        <div class="tbl_scroll_wrap">
                            <div class="tbl_box">
                                <table class="tbl tbl_type01 tblfix">
                                    <thead>
                                        <tr>
                                            <th colspan="2" class="lbd0">구분</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <th rowspan="3" class="lbd0">잔<br />여<br />월</th>
                                            <th>SALES</th>
                                        </tr>
                                        <tr>
                                            <th>EBIT</th>
                                        </tr>
                                        <tr>
                                            <th>%</th>
                                        </tr>
                                        <tr>
                                            <th rowspan="3" class="lbd0">연<br />간<br />예<br />상</th>
                                            <th>SALES</th>
                                        </tr>
                                        <tr>
                                            <th>EBIT</th>
                                        </tr>
                                        <tr>
                                            <th>%</th>
                                        </tr>
                                    </tbody>
                                </table>
                            </div><!--//tbl_box-->

                            <div class="tbl_scroll">
                                <div class="tbl_add">
                                    <!--테이블 추가 되는 영역-->

                                    @{
                                        foreach (var item in expectYearHeadTable)
                                        {
                                            <div class="tbl_wrap">
                                                <table class="tbl tbl_type01">
                                                    <thead>
                                                        <tr>
                                                            <th colspan="3">@item.unionName</th>
                                                        </tr>
                                                        <tr>
                                                            <th>계획</th>
                                                            <th>예상</th>
                                                            <th>계획대비</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @{
                                                            foreach (var restBody in expectYearRestBodyTable)
                                                            {
                                                                if (item.unionName == restBody.unionName)
                                                                {
                                                                    decimal expectRestSales = 0;
                                                                    decimal expectRestEbit = 0;
                                                                    decimal expectRestPlanPer = 0;
                                                                    decimal expectRestResultPer = 0;
                                                                    decimal expectRestPer = 0;
                                                                    var expectRestSalesClass = string.Empty;
                                                                    var expectRestEbitClass = string.Empty;
                                                                    var expectRestPerClass = string.Empty;

                                                                    expectRestSales = WebUtil.NumberRound(restBody.groupMainExpectResultRestSales, restBody.groupMainExpectPlanRestSales, 100, 2);
                                                                    expectRestEbit = WebUtil.NumberRound(restBody.groupMainExpectResultRestEbit, restBody.groupMainExpectPlanRestEbit, 100, 2);

                                                                    //expectRestSales = restBody.groupMainExpectPlanRestSales == 0 ? 0 : restBody.groupMainExpectResultRestSales / restBody.groupMainExpectPlanRestSales * 100;
                                                                    //expectRestEbit = restBody.groupMainExpectPlanRestEbit == 0 ? 0 : restBody.groupMainExpectResultRestEbit / restBody.groupMainExpectPlanRestEbit * 100;

                                                                    expectRestPlanPer = restBody.groupMainExpectPlanRestSales == 0 ? 0 : (restBody.groupMainExpectPlanRestEbit / restBody.groupMainExpectPlanRestSales * 100);
                                                                    expectRestResultPer = restBody.groupMainExpectResultRestSales == 0 ? 0 : (restBody.groupMainExpectResultRestEbit / restBody.groupMainExpectResultRestSales * 100);
                                                                    //expectRestPer = (expectRestEbit / expectRestSales * 100);
                                                                    expectRestPer = expectRestResultPer - expectRestPlanPer;

                                                                    //if (expectRestSales < 0)
                                                                    //{
                                                                    //    expectRestSalesClass = "class=minus";
                                                                    //}

                                                                    //if (expectRestEbit < 0)
                                                                    //{
                                                                    //    expectRestEbitClass = "class=minus";
                                                                    //}

                                                                    //if (expectRestPer < 0)
                                                                    //{
                                                                    //    expectRestPerClass = "class=minus";
                                                                    //}

                                                                    // 2018.12.12 계획이 음수이면 200에서 빼준다
                                                                    if (restBody.groupMainExpectPlanRestSales < 0)
                                                                    {
                                                                        expectRestSales = 200 - expectRestSales;
                                                                    }

                                                                    // 2018.12.12 계획이 음수이면 200에서 빼준다
                                                                    if (restBody.groupMainExpectPlanRestEbit < 0)
                                                                    {
                                                                        expectRestEbit = 200 - expectRestEbit;
                                                                    }

                                                                    //Sales계획대비
                                                                    if (Math.Round(expectRestSales, 1, MidpointRounding.AwayFromZero) < 100)
                                                                    {
                                                                        expectRestSalesClass = "class=minus";
                                                                    }

                                                                    //Ebit계획대비
                                                                    if (Math.Round(expectRestEbit, 1, MidpointRounding.AwayFromZero) < 100)
                                                                    {
                                                                        expectRestEbitClass = "class=minus";
                                                                    }

                                                                    //%계획대비
                                                                    if (Math.Round(expectRestPer, 1, MidpointRounding.AwayFromZero) < 0)
                                                                    {
                                                                        expectRestPerClass = "class=minus";
                                                                    }

                                                                    <tr>
                                                                        <td>@WebUtil.NComma(restBody.groupMainExpectPlanRestSales)</td>
                                                                        <td>@WebUtil.NComma(restBody.groupMainExpectResultRestSales)</td>
                                                                        @if (restBody.groupMainExpectPlanRestSales == 0)
                                                                        {
                                                                            <td>N/A</td>
                                                                        }
                                                                        else
                                                                        {
                                                                            <td @expectRestSalesClass>@Math.Round(expectRestSales, 1, MidpointRounding.AwayFromZero)%</td>
                                                                        }
                                                                    </tr>
                                                                    <tr>
                                                                        <td>@WebUtil.NComma(restBody.groupMainExpectPlanRestEbit)</td>
                                                                        <td>@WebUtil.NComma(restBody.groupMainExpectResultRestEbit)</td>
                                                                        @if (restBody.groupMainExpectPlanRestEbit == 0)
                                                                        {
                                                                            <td>N/A</td>
                                                                        }
                                                                        else
                                                                        {
                                                                            <td @expectRestEbitClass>@Math.Round(expectRestEbit, 1, MidpointRounding.AwayFromZero)%</td>
                                                                        }
                                                                    </tr>
                                                                    <tr>
                                                                        <td>@Math.Round(expectRestPlanPer, 1, MidpointRounding.AwayFromZero)%</td>
                                                                        <td>@Math.Round(expectRestResultPer, 1, MidpointRounding.AwayFromZero)%</td>
                                                                        <td @expectRestPerClass>@Math.Round(expectRestPer, 1, MidpointRounding.AwayFromZero)%</td>
                                                                    </tr>
                                                                }
                                                            }
                                                        }
                                                        @{
                                                            foreach (var expectBody in expectYearBodyTable)
                                                            {
                                                                if (item.unionName == expectBody.unionName)
                                                                {
                                                                    decimal expectYearRestSales = 0;
                                                                    decimal expectYearRestEbit = 0;
                                                                    decimal expectYearRestPlanPer = 0;
                                                                    decimal expectYearRestResultPer = 0;
                                                                    decimal expectYearRestPer = 0;
                                                                    var expectPlanClass = string.Empty;
                                                                    var expectEbitClass = string.Empty;
                                                                    var expectPerClass = string.Empty;

                                                                    expectYearRestSales = expectBody.groupMainExpectPlanSales == 0 ? 0 : (expectBody.groupMainExpectResultSales / expectBody.groupMainExpectPlanSales * 100);
                                                                    expectYearRestEbit = expectBody.groupMainExpectPlanEbit == 0 ? 0 : (expectBody.groupMainExpectResultEbit / expectBody.groupMainExpectPlanEbit * 100);

                                                                    expectYearRestPlanPer = expectBody.groupMainExpectPlanSales == 0 ? 0 : (expectBody.groupMainExpectPlanEbit / expectBody.groupMainExpectPlanSales * 100);
                                                                    expectYearRestResultPer = expectBody.groupMainExpectResultSales == 0 ? 0 : (expectBody.groupMainExpectResultEbit / expectBody.groupMainExpectResultSales * 100);
                                                                    //expectYearRestPer = (expectYearRestEbit / expectYearRestSales * 100);
                                                                    expectYearRestPer = expectYearRestResultPer - expectYearRestPlanPer;


                                                                    // 2018.12.12 계획이 음수이면 200에서 빼준다
                                                                    if (expectBody.groupMainExpectPlanSales < 0)
                                                                    {
                                                                        expectYearRestSales = 200 - expectYearRestSales;
                                                                    }

                                                                    // 2018.12.12 계획이 음수이면 200에서 빼준다
                                                                    if (expectBody.groupMainExpectPlanEbit < 0)
                                                                    {
                                                                        expectYearRestEbit = 200 - expectYearRestEbit;
                                                                    }

                                                                    if (Math.Round(expectYearRestSales, 1, MidpointRounding.AwayFromZero) < 100)
                                                                    {
                                                                        expectPlanClass = "class=minus";
                                                                    }

                                                                    if (Math.Round(expectYearRestEbit, 1, MidpointRounding.AwayFromZero) < 100)
                                                                    {
                                                                        expectEbitClass = "class=minus";
                                                                    }

                                                                    if (Math.Round(expectYearRestPer, 1, MidpointRounding.AwayFromZero) < 0)
                                                                    {
                                                                        expectPerClass = "class=minus";
                                                                    }

                                                                    <tr>
                                                                        <td>@WebUtil.NCommaRound(expectBody.groupMainExpectPlanSales, 0)</td>
                                                                        <td>@WebUtil.NCommaRound(expectBody.groupMainExpectResultSales, 0)</td>
                                                                        @if (expectBody.groupMainExpectPlanSales == 0)
                                                                        {
                                                                            <td>N/A</td>
                                                                        }
                                                                        else
                                                                        {
                                                                            <td @expectPlanClass>@Math.Round(expectYearRestSales, 1, MidpointRounding.AwayFromZero)%</td>
                                                                        }
                                                                    </tr>
                                                                    <tr>
                                                                        <td>@WebUtil.NCommaRound(expectBody.groupMainExpectPlanEbit, 0)</td>
                                                                        <td>@WebUtil.NCommaRound(expectBody.groupMainExpectResultEbit, 0)</td>
                                                                        @if (expectBody.groupMainExpectPlanEbit == 0)
                                                                        {
                                                                            <td>N/A</td>
                                                                        }
                                                                        else
                                                                        {
                                                                            <td @expectEbitClass>@Math.Round(expectYearRestEbit, 1, MidpointRounding.AwayFromZero)%</td>
                                                                        }
                                                                    </tr>
                                                                    <tr>
                                                                        <td>@Math.Round(expectYearRestPlanPer, 1, MidpointRounding.AwayFromZero)%</td>
                                                                        <td>@Math.Round(expectYearRestResultPer, 1, MidpointRounding.AwayFromZero)%</td>
                                                                        <td @expectPerClass>@Math.Round(expectYearRestPer, 1, MidpointRounding.AwayFromZero)%</td>
                                                                    </tr>
                                                                }
                                                            }
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>
                                                            }
                                    }
                                    @*<thead>
                                            <tr>
                                                <th colspan="3">지주</th>
                                            </tr>
                                            <tr>
                                                <th>계획</th>
                                                <th>실적</th>
                                                <th>계획대비</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                <td>80</td>
                                                <td>150</td>
                                                <td>53%</td>
                                            </tr>
                                            <tr>
                                                <td>60</td>
                                                <td>120</td>
                                                <td>50%</td>
                                            </tr>
                                            <tr>
                                                <td>5.1%</td>
                                                <td>2.1%</td>
                                                <td>-3.0%</td>
                                            </tr>
                                            <tr>
                                                <td>80</td>
                                                <td>150</td>
                                                <td>53%</td>
                                            </tr>
                                            <tr>
                                                <td>60</td>
                                                <td>120</td>
                                                <td>50%</td>
                                            </tr>
                                            <tr>
                                                <td>5.1%</td>
                                                <td>2.1%</td>
                                                <td>-3.0%</td>
                                            </tr>
                                        </tbody>*@
                                    <!--// tbl-->
                                </div><!--//tbl_add-->
                            </div><!--//tbl_scroll-->

                        </div><!--//tbl_scroll_wrap-->
                        <!--E: 유동 테이블-->
                    </div><!--//graph-->
                </div><!--/box-->
            </div><!--//graph_box-->
        </div><!--//graph_box_wrap-->
                                                            }
        <!--S: ROIC-->
                                                            <div class="graph_box_wrap">
                                                                <h2><a href="#">ROIC</a></h2>
                                                                <div class="graph_box">

                                                                    <div class="box">
                                                                        <div class="chart_box chart_box4">
                                                                            <p class="p_title">ROIC</p>
                                                                            <span class="p_unit">(단위 : %)</span>
                                                                            <div class="chart chart_type7" id="chart13"></div>
                                                                            @{
                                                                                //계획
                                                                                var planRoicText = string.Empty;
                                                                                var planRoic = string.Empty;
                                                                                decimal planRoicConut = 0;

                                                                                for (int i = 0; i <= 12; i++)
                                                                                {
                                                                                    if (i >= groupMainPlanRoic.Count())
                                                                                    {
                                                                                        planRoicConut = 0;
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        planRoicConut = WebUtil.NewRoic(groupMainPlanRoic[i].groupMainRoic, Convert.ToDecimal(groupMainPlanRoic[i].groupMainMonthlyRoic));
                                                                                    }

                                                                                    planRoicText += "{x : " + i + ", y : " + planRoicConut + "},";
                                                                                }

                                                                                //실적
                                                                                var resultRoicText = string.Empty;
                                                                                var resultRoic = string.Empty;
                                                                                decimal resultRoicConut = 0;

                                                                                for (int i = 0; i <= 12; i++)
                                                                                {
                                                                                    if (i >= groupMainResultRoic.Count())
                                                                                    {
                                                                                        resultRoicConut = 0;
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        resultRoicConut = WebUtil.NewRoic(groupMainResultRoic[i].groupMainRoic, Convert.ToDecimal(groupMainResultRoic[i].groupMainMonthlyRoic));
                                                                                    }

                                                                                    resultRoicText += "{x : " + i + ", y : " + resultRoicConut + "},";
                                                                                }

                                                                                if (planRoicText.Length == 0)
                                                                                {
                                                                                    planRoic = "{ x: 0, y: 0 }, { x: 1, y: 0 }, { x: 2, y: 0 }, { x: 3, y: 0 }, { x: 4, y: 0 }, { x: 5, y: 0 }, { x: 6, y: 0 }, { x: 7, y: 0 }, { x: 8, y: 0 }, { x: 9, y: 0 }, { x: 10, y: 0 }, { x: 11, y: 0 }, { x: 12, y: 0 }";
                                                                                }
                                                                                else
                                                                                {
                                                                                    planRoic = planRoicText.Substring(0, planRoicText.Length - 1);
                                                                                }

                                                                                if (resultRoicText.Length == 0)
                                                                                {
                                                                                    resultRoic = "{ x: 0, y: 0 }, { x: 1, y: 0 }, { x: 2, y: 0 }, { x: 3, y: 0 }, { x: 4, y: 0 }, { x: 5, y: 0 }, { x: 6, y: 0 }, { x: 7, y: 0 }, { x: 8, y: 0 }, { x: 9, y: 0 }, { x: 10, y: 0 }, { x: 11, y: 0 }, { x: 12, y: 0 }";
                                                                                }
                                                                                else
                                                                                {
                                                                                    resultRoic = resultRoicText.Substring(0, resultRoicText.Length - 1);
                                                                                }
                                                                            }
                                                                            <script>
                            ( function(){
                                var data = [
                                    { key: '계획', values: [ @Html.Raw(planRoic) ] },
                                    { key: '실적', values: [ @Html.Raw(resultRoic) ] }
                                ];
                                data.map( function( obj, i ) {
                                    obj.color = ['#009de4', '#ff520d'][i];
                                    obj.strokeWidth = 1;
                                    return obj;
                                });

                                MYAPP.graph.type7( data, '#chart13' );
                            } )();
                                                                            </script>
                                                                            @*@resultRoic*@
                                                                        </div>
                                                                        <!-- chart_box -->
                                                                    </div><!--//box-->

                                                                </div><!--//graph_box-->
                                                            </div><!--//graph_box_wrap-->
                                                                                }
    <!--S: 투자, 인원-->
    <div class="graph_box_wrap">
        <h2><a href="#">투자, 인원</a></h2>
        <div class="graph_box">
            <div class="box">
                <div class="chart_box chart_box5">
                    <p class="p_title">투자</p>
                    <span class="p_unit">(단위 : 억원, %)</span>
                    <ul class="p_box">
                        <li>
                            <div class="chart chart_type7" id="chart15"></div>
                            <p><span>@(search.mm)월 누계 집행률</span></p>
                        </li>
                        <li>
                            <div class="chart chart_type7" id="chart16"></div>
                            <p><span>연간 진척도</span></p>
                        </li>
                    </ul>
                    @{
                        decimal planInvestPieChart = 0;
                        decimal resultInvestPieChart = 0;
                        decimal planInvestYearPieChart = 0;
                        decimal resultInvestYearPieChart = 0;

                        //누계 - 계획
                        planInvestPieChart = investPlanPieChart == null ? 0 : investPlanPieChart.planInvest;
                        //누계 - 실적
                        resultInvestPieChart = investResultPieChart == null ? 0 : investResultPieChart.resultInvest;

                        //연간 - 계획
                        planInvestYearPieChart = investYearPlanPieChart == null ? 0 : investYearPlanPieChart.planInvest;
                        //연간 - 실적
                        resultInvestYearPieChart = investYearResultPieChart == null ? 0 : investYearResultPieChart.resultInvest;

                        var pieChart1Text = "{ objective: [{ key: '계획', y :" + planInvestPieChart + "} ], sum : [ { key : '실적', y: " + resultInvestPieChart + "}], title : '집행률'}";
                        var pieChart2Text = "{ objective: [{ key: '계획', y :" + planInvestYearPieChart + "} ], sum : [ { key : '실적', y: " + resultInvestYearPieChart + "}], title : '진척도'}";

                        //인원
                        var personnelText = string.Empty;
                        var resultPersonnel = string.Empty;
                        var resultPersonnelConut = 0;
                        
                        for (int i = 0; i <= 12; i++)
                        {
                            if (i >= personnelResultChart.Count())
                            {
                                resultPersonnelConut = 0;
                            }
                            else
                            {
                                resultPersonnelConut = personnelResultChart[i].personnel;
                            }

                            personnelText += "{x : " + i + ", y : " + resultPersonnelConut + "},";
                        }

                        if (personnelText.Length == 0 || personnelText == string.Empty)
                        {
                            resultPersonnel = "{ x: 0, y: 0 }, { x: 1, y: 0 }, { x: 2, y: 0 }, { x: 3, y: 0 }, { x: 4, y: 0 }, { x: 5, y: 0 }, { x: 6, y: 0 }, { x: 7, y: 0 }, { x: 8, y: 0 }, { x: 9, y: 0 }, { x: 10, y: 0 }, { x: 11, y: 0 }, { x: 12, y: 0 }";
                        }
                        else
                        {
                            resultPersonnel = personnelText.Substring(0, personnelText.Length - 1);
                        }
                    }
                    <script>
                            ( function(){
                                var data0 = @Html.Raw(pieChart1Text)
                                var data1 = @Html.Raw(pieChart2Text)

                                MYAPP.graph.type8( data0, '#chart15', '#1f7dc3' );
                                MYAPP.graph.type8( data1, '#chart16', '#014099' );
                            } )();
                    </script>
                </div>
                <!-- chart_box -->
            </div><!--//box-->

            <div class="box">
                <div class="chart_box chart_box4">
                    <p class="p_title">인원</p>
                    @*<span class="p_unit">(단위 :@personnelResultChart[2].personnel 명)</span>*@
                    <span class="p_unit">(단위 : 명)</span>

                    <div class="chart chart_type14" id="chart24"></div>
                    <script>
                            ( function(){
                                var data = [
                                    { key: '인원', values: [ @Html.Raw(resultPersonnel) ] }
                                ];
                                data.map( function( obj, i ) {
                                    obj.color = [ '#009de4' ][ i ];
                                    obj.pointShape = [ 'square' ][ i ];
                                    obj.strokeWidth = 1;
                                    return obj;
                                } );

                                MYAPP.graph.type14( data, '#chart24' );
                            } )();
                    </script>
                </div>
                <!-- chart_box -->
            </div><!--//box-->
        </div><!--//graph_box-->
    </div><!--//graph_box_wrap-->

</section><!--//group_wrap-->
<script>
    $(function () {
        /*셀렉트박스 스타일*/
        MYAPP.form.styleSelect($(".style_select select"));
        /*테이블 스크롤 세팅*/
        MYAPP.table.setScroll($("#container .tbl_scroll"));
    })



    function onChangeDate() {
        var f = document.frmForm;
        f.action = "/Org/NewIndex";
        f.submit();
    }

    function funItemLink(seq,item) {
        var f = document.frmForm;
        f.action = "/Org/Company?Seq=" + seq + "#" + item ;
        f.target="_blank";
        f.submit();
        f.target="";
    }
</script>
@Html.Partial("~/Views/Shared/PartialReply.cshtml", commentList)
