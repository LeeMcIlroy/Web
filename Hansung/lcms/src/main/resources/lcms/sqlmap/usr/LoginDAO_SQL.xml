<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"	"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap>
	
	<!-- 사용자 로그인 -->
	<select id="LoginDAO.selectUsrLoginProc" parameterClass="usrVO" resultClass="usrVO">
	/* LoginDAO.selectUsrLoginProc -- 필요컬럼 작성 및 vo 추가해야함 */
	<![CDATA[
		SELECT MEMBER_SEQ as memberSeq
			 , MEMBER_CODE as memberCode
			 , MEMBER_PW as memberPw
			 , MEMBER_TYPE as memberType
			 , NAME as name
			 , H_NAME as hName
			 , E_NAME as eName
			 , BIRTH as birth
			 , POST as post
			 , ADDR1 as addr1
			 , ADDR2 as addr2
			 , APP_DATE as appDate
			 , RES_DATE as resDate
			 , STATUS as status
			 , TEL as tel  
			 , MOBILE as mobile
			 , EMAIL as email
			 , STD_TYPE as stdType
			 , STD_CURR as stdCurr
			 , NATION as nation
			 , DEPART as depart
			 , ACCE_IP as acceIp
			 , USE_YN as useYn
			 , LOGIN_DATE_TIME as loginDateTime
			 , STEP as step
			 , GENDER as gender
			 , PIC as pic
			 , FINAL_EDU as finalEdu
			 , FE_SCHOOLNAME as feSchoolname
			 , FE_COUNTRY as feCountry
			 , FE_DATE_S as feDateS
			 , FE_DATE_E as feDateE
			 , TR_EXPERIENCE as trExperience
			 , TR_GETPATH as trGetpath
			 , TR_TERM as trTerm
			 , NA_TEL as naTel
			 , NA_ADDR as naAddr
			 , EMER_NAME as emerName
			 , EMER_RELATION as emerRelation
			 , TEL_EMER as telEmer
			 , EMAIL_EMER emailEmer
			 , POST_EMER as postEmer
			 , ADDR1_EMER as affr1Emer
			 , ADDR2_EMER as addr2Emer
			 , GUAR_NAME as guarName
			 , GUAR_RELATION as guarRelation
			 , TEL_GUAR as telGuar
			 , EMAIL_GUAR as emailGuar
			 , POST_GUAR as postGuar
			 , ADDR1_GUAR as addr1Guar
			 , ADDR2_GUAR as addr2Guar
			 , ENTRY_DATE as entryDate
			 , ISSUE_DATE as issueDate
			 , EXPIRY_DATE as expryDate
			 , RC_IS_DATE as rcIsDate
			 , AES_DECRYPT(UNHEX(RC_CODE), MEMBER_CODE) as rcCode
			 , AES_DECRYPT(UNHEX(P_NUMBER), MEMBER_CODE) as pNumber
			 , P_IS_DATE as pIsDate
			 , P_VALIDITY as pValidity
			 , INS_COMPANY as insCompany
			 , STOCK_NUMBER as stockNumber
			 , INS_SDATE as insSdate
			 , INS_EDATE as insEdate
			 , B_NAME as bName
			 , B_ACCOUNT as bAccount
			 , AES_DECRYPT(UNHEX(B_NUMBER), MEMBER_CODE) as bNumber
			 , visa1 as visa1
			 , visa2 as visa2
			 , LOGIN_FAIL as loginFail
		FROM
			TB_LCMS_MEMBER
		WHERE
			MEMBER_CODE = #memberCode#
	]]>	
	</select>
	
	<update id="LoginDAO.updateLoginDateTime" parameterClass="usrVO">
	/* LoginDAO.updateLoginDateTime */
		UPDATE
			TB_LCMS_MEMBER
		SET
			LOGIN_DATE_TIME = SYSDATE()
		WHERE
			 MEMBER_CODE = #memberCode#
	</update>
	
	<!-- 결석자 현황 >하단 학생리스트 -->
	<select id="LoginDAO.selectAbsWrnHstrList" parameterClass="searchVO" resultClass="egovMap">
	/* LoginDAO.selectAbsWrnHstrList*/
	<![CDATA[
		SELECT 
			MEMBER_CODE
		FROM 
			TB_LCMS_ABS_WRN
	]]>	
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="searchCondition1">
				ABS_YEAR = #searchCondition1#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="searchCondition2">
				ABS_SEM = #searchCondition2#
			</isNotEmpty>
		</dynamic>
	<![CDATA[
		GROUP BY 
			MEMBER_CODE
			, ABS_ABSE_CNT
	]]>	
	</select>
	
	<update id="LoginDAO.updateLoginFail" parameterClass="usrVO">
	/* LoginDAO.updateLoginFail */
	<![CDATA[
		UPDATE
			TB_LCMS_MEMBER
		SET
			LOGIN_FAIL = #loginFail#
		WHERE
			MEMBER_CODE = #memberCode#
	]]>
	</update>
	
	<!-- 학생 학기 등록여부 체크 -->
	<select id="LoginDAO.selectStudLectMapCheck" parameterClass="egovMap" resultClass="String">
	/* LoginDAO.selectStudLectMapCheck */
	<![CDATA[
		SELECT
			COUNT(*)
		FROM 
			(SELECT 
				A.MEMBER_CODE
				, LECT_SEQ 
			FROM 
				TB_LCMS_LECT_MAP A
				LEFT JOIN TB_LCMS_MEMBER B ON A.MEMBER_CODE = B.MEMBER_CODE
			WHERE
				B.STATUS NOT IN ('퇴학', '자퇴', '행방불명')) TLLM
		LEFT JOIN 
			(SELECT
				LECT_SEQ
				, LECT_YEAR
				, LECT_SEM
			FROM 
				TB_LCMS_LECT
			WHERE 
				LECT_STATE = 'Y') TLL ON TLL.LECT_SEQ = TLLM.LECT_SEQ
		WHERE 
			TLLM.MEMBER_CODE = #memberCode#
		]]>	
			<isNotEmpty prepend="AND" property="lectYear">
				TLL.LECT_YEAR = #lectYear#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="lectSem">
				TLL.LECT_SEM = #lectSem#
			</isNotEmpty>
	</select>
	
	<!-- 비밀번호변경 30일 경과 체크  -->
	<select id="LoginDAO.selectLapList" parameterClass="searchVO" resultClass="egovMap">
	/* LoginDAO.selectLapList*/
	<![CDATA[
		SELECT 
			MEMBER_CODE
		FROM 
			TB_LCMS_MEMBER
		WHERE 
			DATEDIFF(NOW(),UPD_DATE) > 30
		OR 
			UPD_DATE IS NULL
	]]>	
	</select>
	
	<!-- 교사 강의중인 강의 체크 -->
	<select id="LoginDAO.selectchkLec" parameterClass="egovMap" resultClass="String">
	/* LoginDAO.selectchkLec */
	<![CDATA[
		SELECT 
			COUNT(*) 
		FROM 
			TB_LCMS_MEMBER TLM 
		LEFT JOIN 
			TB_LCMS_LECT_MAP TLLM ON TLLM.MEMBER_CODE = TLM.MEMBER_CODE
		LEFT JOIN 
			TB_LCMS_LECT TLL ON TLL.LECT_SEQ = TLLM.LECT_SEQ
		WHERE 
			TLL.LECT_STATE = 'Y'
		AND 
			TLL.LECT_CLA_TEA = #memberCode#
		]]>	
			<isNotEmpty prepend="AND" property="lectYear">
				TLL.LECT_YEAR = #lectYear#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="lectSem">
				TLL.LECT_SEM = #lectSem#
			</isNotEmpty>
	</select>
</sqlMap>